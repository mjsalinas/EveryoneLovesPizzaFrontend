(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["styles"],{

/***/ 2:
/*!******************************************************!*\
  !*** multi ./src/custom-theme.scss ./src/styles.css ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! D:\Documentos\CEUTEC\2020\3tri\Admon Bases de Datos\S&T\src\custom-theme.scss */"E2ln");
module.exports = __webpack_require__(/*! D:\Documentos\CEUTEC\2020\3tri\Admon Bases de Datos\S&T\src\styles.css */"OmL/");


/***/ }),

/***/ "3LZu":
/*!************************************************************************************************!*\
  !*** ./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "E2ln":
/*!*******************************!*\
  !*** ./src/custom-theme.scss ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "LboF");
            var content = __webpack_require__(/*! !../node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/cjs.js??ref--13-1!../node_modules/postcss-loader/src??embedded!../node_modules/resolve-url-loader??ref--13-3!../node_modules/sass-loader/dist/cjs.js??ref--13-4!./custom-theme.scss */ "Qnvt");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);



module.exports = content.locals || {};

/***/ }),

/***/ "LboF":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "Nftl":
/*!****************************************************************************************************************************************************************!*\
  !*** ./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/cjs.js??ref--12-1!./node_modules/postcss-loader/src??embedded!./src/styles.css ***!
  \****************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js */ "3LZu");
/* harmony import */ var _node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "/* You can add global styles to this file, and also import other style files */\r\n\r\nhtml, body { height: 100%; }\r\n\r\nbody { margin: 0; font-family: Roboto, \"Helvetica Neue\", sans-serif; }\r\n", "",{"version":3,"sources":["webpack://src/styles.css"],"names":[],"mappings":"AAAA,8EAA8E;;AAE9E,aAAa,YAAY,EAAE;;AAC3B,OAAO,SAAS,EAAE,iDAAiD,EAAE","sourcesContent":["/* You can add global styles to this file, and also import other style files */\r\n\r\nhtml, body { height: 100%; }\r\nbody { margin: 0; font-family: Roboto, \"Helvetica Neue\", sans-serif; }\r\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "OmL/":
/*!************************!*\
  !*** ./src/styles.css ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "LboF");
            var content = __webpack_require__(/*! !../node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/cjs.js??ref--12-1!../node_modules/postcss-loader/src??embedded!./styles.css */ "Nftl");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);



module.exports = content.locals || {};

/***/ }),

/***/ "Qnvt":
/*!**********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/cjs.js??ref--13-1!./node_modules/postcss-loader/src??embedded!./node_modules/resolve-url-loader??ref--13-3!./node_modules/sass-loader/dist/cjs.js??ref--13-4!./src/custom-theme.scss ***!
  \**********************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js */ "3LZu");
/* harmony import */ var _node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_angular_devkit_build_angular_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);
// Module
___CSS_LOADER_EXPORT___.push([module.i, "/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.mat-badge-content {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-badge-small .mat-badge-content {\n  font-size: 9px;\n}\n.mat-badge-large .mat-badge-content {\n  font-size: 24px;\n}\n.mat-h1, .mat-headline, .mat-typography h1 {\n  font: 400 24px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h2, .mat-title, .mat-typography h2 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\n  font: 400 16px/28px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\n  font: 400 15px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n.mat-h5, .mat-typography h5 {\n  font: 400 calc(14px * 0.83)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px;\n}\n.mat-h6, .mat-typography h6 {\n  font: 400 calc(14px * 0.67)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px;\n}\n.mat-body-strong, .mat-body-2 {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-body, .mat-body-1, .mat-typography {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-body p, .mat-body-1 p, .mat-typography p {\n  margin: 0 0 12px;\n}\n.mat-small, .mat-caption {\n  font: 400 12px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-display-4, .mat-typography .mat-display-4 {\n  font: 300 112px/112px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.05em;\n  margin: 0 0 56px;\n}\n.mat-display-3, .mat-typography .mat-display-3 {\n  font: 400 56px/56px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.02em;\n  margin: 0 0 64px;\n}\n.mat-display-2, .mat-typography .mat-display-2 {\n  font: 400 45px/48px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.005em;\n  margin: 0 0 64px;\n}\n.mat-display-1, .mat-typography .mat-display-1 {\n  font: 400 34px/40px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 64px;\n}\n.mat-bottom-sheet-container {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n.mat-flat-button, .mat-fab, .mat-mini-fab {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-button-toggle {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-card {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-card-title {\n  font-size: 24px;\n  font-weight: 500;\n}\n.mat-card-header .mat-card-title {\n  font-size: 20px;\n}\n.mat-card-subtitle,\n.mat-card-content {\n  font-size: 14px;\n}\n.mat-checkbox {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-checkbox-layout .mat-checkbox-label {\n  line-height: 24px;\n}\n.mat-chip {\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-chip .mat-chip-trailing-icon.mat-icon,\n.mat-chip .mat-chip-remove.mat-icon {\n  font-size: 18px;\n}\n.mat-table {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-header-cell {\n  font-size: 12px;\n  font-weight: 500;\n}\n.mat-cell, .mat-footer-cell {\n  font-size: 14px;\n}\n.mat-calendar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-calendar-body {\n  font-size: 13px;\n}\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400;\n}\n.mat-dialog-title {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-expansion-panel-header {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 15px;\n  font-weight: 400;\n}\n.mat-expansion-panel-content {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-form-field {\n  font-size: inherit;\n  font-weight: 400;\n  line-height: 1.125;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-form-field-wrapper {\n  padding-bottom: 1.34375em;\n}\n.mat-form-field-prefix .mat-icon,\n.mat-form-field-suffix .mat-icon {\n  font-size: 150%;\n  line-height: 1.125;\n}\n.mat-form-field-prefix .mat-icon-button,\n.mat-form-field-suffix .mat-icon-button {\n  height: 1.5em;\n  width: 1.5em;\n}\n.mat-form-field-prefix .mat-icon-button .mat-icon,\n.mat-form-field-suffix .mat-icon-button .mat-icon {\n  height: 1.125em;\n  line-height: 1.125;\n}\n.mat-form-field-infix {\n  padding: 0.5em 0;\n  border-top: 0.84375em solid transparent;\n}\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34374em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-label-wrapper {\n  top: -0.84375em;\n  padding-top: 0.84375em;\n}\n.mat-form-field-label {\n  top: 1.34375em;\n}\n.mat-form-field-underline {\n  bottom: 1.34375em;\n}\n.mat-form-field-subscript-wrapper {\n  font-size: 75%;\n  margin-top: 0.6666666667em;\n  top: calc(100% - 1.7916666667em);\n}\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-infix {\n  padding: 0.4375em 0;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n  -ms-transform: translateY(-1.28125em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\n  -ms-transform: translateY(-1.28124em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\n  -ms-transform: translateY(-1.28123em) scale(0.75);\n  width: 133.3333533333%;\n}\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  top: 1.28125em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\n  margin-top: 0.5416666667em;\n  top: calc(100% - 1.6666666667em);\n}\n@media print {\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28122em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28121em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.2812em) scale(0.75);\n  }\n}\n.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.75em 0;\n}\n.mat-form-field-appearance-fill .mat-form-field-label {\n  top: 1.09375em;\n  margin-top: -0.5em;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 1em 0 1em 0;\n}\n.mat-form-field-appearance-outline .mat-form-field-label {\n  top: 1.84375em;\n  margin-top: -0.25em;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px;\n}\n.mat-grid-tile-header .mat-line,\n.mat-grid-tile-footer .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header .mat-line:nth-child(n+2),\n.mat-grid-tile-footer .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\ninput.mat-input-element {\n  margin-top: -0.0625em;\n}\n.mat-menu-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n}\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n}\n.mat-radio-button {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-select {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-select-trigger {\n  height: 1.125em;\n}\n.mat-slide-toggle-content {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-slider-thumb-label-text {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n}\n.mat-stepper-vertical, .mat-stepper-horizontal {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-step-label {\n  font-size: 14px;\n  font-weight: 400;\n}\n.mat-step-sub-label-error {\n  font-weight: normal;\n}\n.mat-step-label-error {\n  font-size: 14px;\n}\n.mat-step-label-selected {\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-tab-group {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-tab-label, .mat-tab-link {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0;\n}\n.mat-tooltip {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 10px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\n.mat-tooltip-handset {\n  font-size: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-list-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-list-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-list-base .mat-list-item {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-list-option {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-list-base[dense] .mat-list-item {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n}\n.mat-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 16px;\n}\n.mat-optgroup-label {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-simple-snackbar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n}\n.mat-simple-snackbar-action {\n  line-height: 1;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500;\n}\n.mat-tree {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n.mat-tree-node,\n.mat-nested-tree-node {\n  font-weight: 400;\n  font-size: 14px;\n}\n.mat-ripple {\n  overflow: hidden;\n  position: relative;\n}\n.mat-ripple:not(:empty) {\n  transform: translateZ(0);\n}\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible;\n}\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n}\n.cdk-high-contrast-active .mat-ripple-element {\n  display: none;\n}\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  outline: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000;\n}\n.cdk-overlay-container:empty {\n  display: none;\n}\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000;\n}\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%;\n}\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0;\n}\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 1;\n}\n@media screen and (-ms-high-contrast: active) {\n  .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n    opacity: 0.6;\n  }\n}\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32);\n}\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0;\n}\n.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px;\n}\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll;\n}\n@keyframes cdk-text-field-autofill-start {\n  /*!*/\n}\n@keyframes cdk-text-field-autofill-end {\n  /*!*/\n}\n.cdk-text-field-autofill-monitored:-webkit-autofill {\n  animation: cdk-text-field-autofill-start 0s 1ms;\n}\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n  animation: cdk-text-field-autofill-end 0s 1ms;\n}\ntextarea.cdk-textarea-autosize {\n  resize: none;\n}\ntextarea.cdk-textarea-autosize-measuring {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: auto !important;\n  overflow: hidden !important;\n}\ntextarea.cdk-textarea-autosize-measuring-firefox {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: 0 !important;\n}\n.mat-focus-indicator {\n  position: relative;\n}\n.mat-mdc-focus-indicator {\n  position: relative;\n}\n.mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.mat-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-option.mat-active {\n  background: rgba(0, 0, 0, 0.04);\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-option.mat-option-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #3f51b5;\n}\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #ff4081;\n}\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #f44336;\n}\n.mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-pseudo-checkbox::after {\n  color: #fafafa;\n}\n.mat-pseudo-checkbox-disabled {\n  color: #b0b0b0;\n}\n.mat-primary .mat-pseudo-checkbox-checked,\n.mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #3f51b5;\n}\n.mat-pseudo-checkbox-checked,\n.mat-pseudo-checkbox-indeterminate,\n.mat-accent .mat-pseudo-checkbox-checked,\n.mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #ff4081;\n}\n.mat-warn .mat-pseudo-checkbox-checked,\n.mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #f44336;\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #b0b0b0;\n}\n.mat-app-background {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker {\n  display: none;\n}\n.mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-autocomplete-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n  background: white;\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-badge-content {\n  color: white;\n  background: #3f51b5;\n}\n.cdk-high-contrast-active .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n.mat-badge-accent .mat-badge-content {\n  background: #ff4081;\n  color: white;\n}\n.mat-badge-warn .mat-badge-content {\n  color: white;\n  background: #f44336;\n}\n.mat-badge {\n  position: relative;\n}\n.mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n.mat-badge-disabled .mat-badge-content {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n.ng-animate-disabled .mat-badge-content,\n.mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n.mat-badge-content.mat-badge-active {\n  transform: none;\n}\n.mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n.mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n.mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n.mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-button, .mat-icon-button, .mat-stroked-button {\n  color: inherit;\n  background: transparent;\n}\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n  color: #3f51b5;\n}\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\n  color: #ff4081;\n}\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\n  color: #f44336;\n}\n.mat-button.mat-primary.mat-button-disabled, .mat-button.mat-accent.mat-button-disabled, .mat-button.mat-warn.mat-button-disabled, .mat-button.mat-button-disabled.mat-button-disabled, .mat-icon-button.mat-primary.mat-button-disabled, .mat-icon-button.mat-accent.mat-button-disabled, .mat-icon-button.mat-warn.mat-button-disabled, .mat-icon-button.mat-button-disabled.mat-button-disabled, .mat-stroked-button.mat-primary.mat-button-disabled, .mat-stroked-button.mat-accent.mat-button-disabled, .mat-stroked-button.mat-warn.mat-button-disabled, .mat-stroked-button.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n  background-color: #3f51b5;\n}\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n  background-color: #ff4081;\n}\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n  background-color: #f44336;\n}\n.mat-button.mat-button-disabled .mat-button-focus-overlay, .mat-icon-button.mat-button-disabled .mat-button-focus-overlay, .mat-stroked-button.mat-button-disabled .mat-button-focus-overlay {\n  background-color: transparent;\n}\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\n  opacity: 0.1;\n  background-color: currentColor;\n}\n.mat-button-focus-overlay {\n  background: black;\n}\n.mat-stroked-button:not(.mat-button-disabled) {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white;\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  color: white;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  color: white;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  color: white;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  background-color: #3f51b5;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  background-color: #ff4081;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  background-color: #f44336;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-stroked-button:not([class*=mat-elevation-z]), .mat-flat-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-fab:not([class*=mat-elevation-z]), .mat-mini-fab:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]), .mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-fab.mat-button-disabled:not([class*=mat-elevation-z]), .mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-standalone,\n.mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  box-shadow: none;\n}\n.mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: black;\n}\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n}\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-button-toggle-disabled {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: white;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #bdbdbd;\n}\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n  line-height: 48px;\n}\n.mat-card {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-card:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-card.mat-card-flat:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n.mat-checkbox-checkmark {\n  fill: #fafafa;\n}\n.mat-checkbox-checkmark-path {\n  stroke: #fafafa !important;\n}\n.mat-checkbox-mixedmark {\n  background-color: #fafafa;\n}\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #3f51b5;\n}\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #ff4081;\n}\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336;\n}\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0;\n}\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0;\n}\n.mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-checkbox .mat-ripple-element {\n  background-color: black;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #3f51b5;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #ff4081;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #f44336;\n}\n.mat-chip.mat-standard-chip {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-chip.mat-standard-chip .mat-chip-remove {\n  color: rgba(0, 0, 0, 0.87);\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n  opacity: 0.54;\n}\n.mat-chip.mat-standard-chip.mat-chip-disabled {\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip::after {\n  background: black;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #3f51b5;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #f44336;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #ff4081;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-table {\n  background: white;\n}\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\nmat-header-row, mat-row, mat-footer-row,\n[mat-header-row], [mat-row], [mat-footer-row],\n.mat-table-sticky {\n  background: inherit;\n}\nmat-row, mat-header-row, mat-footer-row,\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n.mat-header-cell {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-cell, .mat-footer-cell {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-calendar-arrow {\n  border-top-color: rgba(0, 0, 0, 0.54);\n}\n.mat-datepicker-toggle,\n.mat-datepicker-content .mat-calendar-next-button,\n.mat-datepicker-content .mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-calendar-table-header {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-calendar-table-header-divider::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n.mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-calendar-body-cell-content,\n.mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.mat-calendar-body-in-preview {\n  color: rgba(0, 0, 0, 0.24);\n}\n.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n.mat-calendar-body-in-range::before {\n  background: rgba(63, 81, 181, 0.2);\n}\n.mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-calendar-body-comparison-bridge-start::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-calendar-body-comparison-bridge-end::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-calendar-body-selected {\n  background-color: #3f51b5;\n  color: white;\n}\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(63, 81, 181, 0.4);\n}\n.mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: rgba(255, 64, 129, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: #ff4081;\n  color: white;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(255, 64, 129, 0.4);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: rgba(244, 67, 54, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: #f44336;\n  color: white;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(244, 67, 54, 0.4);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content-touch {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-datepicker-toggle-active {\n  color: #3f51b5;\n}\n.mat-datepicker-toggle-active.mat-accent {\n  color: #ff4081;\n}\n.mat-datepicker-toggle-active.mat-warn {\n  color: #f44336;\n}\n.mat-date-range-input-inner[disabled] {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.mat-divider-vertical {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n.mat-expansion-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-action-row {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: white;\n  }\n}\n.mat-expansion-panel-header-title {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-expansion-panel-header-description,\n.mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n.mat-expansion-panel-header {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded {\n  height: 64px;\n}\n.mat-form-field-label {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mat-hint {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mat-form-field.mat-focused .mat-form-field-label {\n  color: #3f51b5;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n  color: #ff4081;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n  color: #f44336;\n}\n.mat-focused .mat-form-field-required-marker {\n  color: #ff4081;\n}\n.mat-form-field-ripple {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #3f51b5;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n  background-color: #ff4081;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n  background-color: #f44336;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #3f51b5;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #ff4081;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #f44336;\n}\n.mat-error {\n  color: #f44336;\n}\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.02);\n}\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent;\n}\n.mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.12);\n}\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #3f51b5;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #ff4081;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.06);\n}\n.mat-icon.mat-primary {\n  color: #3f51b5;\n}\n.mat-icon.mat-accent {\n  color: #ff4081;\n}\n.mat-icon.mat-warn {\n  color: #f44336;\n}\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-input-element:disabled,\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-input-element {\n  caret-color: #3f51b5;\n}\n.mat-input-element::placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element::-webkit-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element:-ms-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field.mat-accent .mat-input-element {\n  caret-color: #ff4081;\n}\n.mat-form-field.mat-warn .mat-input-element,\n.mat-form-field-invalid .mat-input-element {\n  caret-color: #f44336;\n}\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #f44336;\n}\n.mat-list-base .mat-list-item {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-list-base .mat-list-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-list-base .mat-subheader {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-list-item-disabled {\n  background-color: #eeeeee;\n}\n.mat-list-option:hover, .mat-list-option:focus,\n.mat-nav-list .mat-list-item:hover,\n.mat-nav-list .mat-list-item:focus,\n.mat-action-list .mat-list-item:hover,\n.mat-action-list .mat-list-item:focus {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-list-single-selected-option, .mat-list-single-selected-option:hover, .mat-list-single-selected-option:focus {\n  background: rgba(0, 0, 0, 0.12);\n}\n.mat-menu-panel {\n  background: white;\n}\n.mat-menu-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-menu-item .mat-icon-no-color,\n.mat-menu-item-submenu-trigger::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-menu-item:hover:not([disabled]),\n.mat-menu-item.cdk-program-focused:not([disabled]),\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-paginator {\n  background: white;\n}\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-paginator-decrement,\n.mat-paginator-increment {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n.mat-paginator-first,\n.mat-paginator-last {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n.mat-icon-button[disabled] .mat-paginator-decrement,\n.mat-icon-button[disabled] .mat-paginator-increment,\n.mat-icon-button[disabled] .mat-paginator-first,\n.mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-paginator-container {\n  min-height: 56px;\n}\n.mat-progress-bar-background {\n  fill: #c5cae9;\n}\n.mat-progress-bar-buffer {\n  background-color: #c5cae9;\n}\n.mat-progress-bar-fill::after {\n  background-color: #3f51b5;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #ff80ab;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #ff80ab;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #ff4081;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #ffcdd2;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #ffcdd2;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336;\n}\n.mat-progress-spinner circle, .mat-spinner circle {\n  stroke: #3f51b5;\n}\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\n  stroke: #ff4081;\n}\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\n  stroke: #f44336;\n}\n.mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #3f51b5;\n}\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #3f51b5;\n}\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #ff4081;\n}\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #ff4081;\n}\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336;\n}\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #f44336;\n}\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button .mat-ripple-element {\n  background-color: black;\n}\n.mat-select-value {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-select-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-select-disabled .mat-select-value {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-select-arrow {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-select-panel {\n  background: white;\n}\n.mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n  background: rgba(0, 0, 0, 0.12);\n}\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #3f51b5;\n}\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #ff4081;\n}\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-drawer-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-drawer {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-drawer.mat-drawer-push {\n  background-color: white;\n}\n.mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.mat-drawer-side {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n[dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n[dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #ff4081;\n}\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(255, 64, 129, 0.54);\n}\n.mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #ff4081;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #3f51b5;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(63, 81, 181, 0.54);\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #3f51b5;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #f44336;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.54);\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #f44336;\n}\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: black;\n}\n.mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #fafafa;\n}\n.mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-primary .mat-slider-track-fill,\n.mat-primary .mat-slider-thumb,\n.mat-primary .mat-slider-thumb-label {\n  background-color: #3f51b5;\n}\n.mat-primary .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-primary .mat-slider-focus-ring {\n  background-color: rgba(63, 81, 181, 0.2);\n}\n.mat-accent .mat-slider-track-fill,\n.mat-accent .mat-slider-thumb,\n.mat-accent .mat-slider-thumb-label {\n  background-color: #ff4081;\n}\n.mat-accent .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-accent .mat-slider-focus-ring {\n  background-color: rgba(255, 64, 129, 0.2);\n}\n.mat-warn .mat-slider-track-fill,\n.mat-warn .mat-slider-thumb,\n.mat-warn .mat-slider-thumb-label {\n  background-color: #f44336;\n}\n.mat-warn .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-warn .mat-slider-focus-ring {\n  background-color: rgba(244, 67, 54, 0.2);\n}\n.mat-slider:hover .mat-slider-track-background,\n.cdk-focused .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.mat-slider-disabled .mat-slider-track-background,\n.mat-slider-disabled .mat-slider-track-fill,\n.mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent;\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(0, 0, 0, 0.7);\n}\n.mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n.mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .mat-step-header:hover {\n    background: none;\n  }\n}\n.mat-step-header .mat-step-label,\n.mat-step-header .mat-step-optional {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-step-header .mat-step-icon {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.mat-step-header .mat-step-icon-selected,\n.mat-step-header .mat-step-icon-state-done,\n.mat-step-header .mat-step-icon-state-edit {\n  background-color: #3f51b5;\n  color: white;\n}\n.mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #f44336;\n}\n.mat-step-header .mat-step-label.mat-step-label-active {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-step-header .mat-step-label.mat-step-label-error {\n  color: #f44336;\n}\n.mat-stepper-horizontal, .mat-stepper-vertical {\n  background-color: white;\n}\n.mat-stepper-vertical-line::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n.mat-horizontal-stepper-header::before,\n.mat-horizontal-stepper-header::after,\n.mat-stepper-horizontal-line {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n.mat-horizontal-stepper-header {\n  height: 72px;\n}\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n.mat-vertical-stepper-header {\n  padding: 24px 24px;\n}\n.mat-stepper-vertical-line::before {\n  top: -16px;\n  bottom: -16px;\n}\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after, .mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before {\n  top: 36px;\n}\n.mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n  top: 36px;\n}\n.mat-sort-header-arrow {\n  color: #757575;\n}\n.mat-tab-nav-bar,\n.mat-tab-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\n.mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: none;\n}\n.mat-tab-label, .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-tab-group[class*=mat-background-] .mat-tab-header,\n.mat-tab-nav-bar[class*=mat-background-] {\n  border-bottom: none;\n  border-top: none;\n}\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(197, 202, 233, 0.3);\n}\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #3f51b5;\n}\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #ff4081;\n}\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(197, 202, 233, 0.3);\n}\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-group.mat-background-primary .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination {\n  background-color: #3f51b5;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-group.mat-background-accent .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination {\n  background-color: #ff4081;\n}\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-group.mat-background-warn .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-toolbar.mat-primary {\n  background: #3f51b5;\n  color: white;\n}\n.mat-toolbar.mat-accent {\n  background: #ff4081;\n  color: white;\n}\n.mat-toolbar.mat-warn {\n  background: #f44336;\n  color: white;\n}\n.mat-toolbar .mat-form-field-underline,\n.mat-toolbar .mat-form-field-ripple,\n.mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.mat-toolbar .mat-form-field-label,\n.mat-toolbar .mat-focused .mat-form-field-label,\n.mat-toolbar .mat-select-value,\n.mat-toolbar .mat-select-arrow,\n.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n.mat-toolbar-multiple-rows {\n  min-height: 64px;\n}\n.mat-toolbar-row, .mat-toolbar-single-row {\n  height: 64px;\n}\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows {\n    min-height: 56px;\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 56px;\n  }\n}\n.mat-tooltip {\n  background: rgba(97, 97, 97, 0.9);\n}\n.mat-tree {\n  background: white;\n}\n.mat-tree-node,\n.mat-nested-tree-node {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-tree-node {\n  min-height: 48px;\n}\n.mat-snack-bar-container {\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-simple-snackbar-action {\n  color: #ff4081;\n}", "",{"version":3,"sources":["webpack://node_modules/@angular/material/_theming.scss","webpack://src/custom-theme.scss"],"names":[],"mappings":"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","sourcesContent":["// File for which all imports are resolved and bundled. This is the entry-point for\r\n// the `@angular/material` theming Sass bundle. See `//src/material:theming_bundle`.\r\n\r\n// Import all the theming functionality.\r\n// We want overlays to always appear over user content, so set a baseline\r\n// very high z-index for the overlay container, which is where we create the new\r\n// stacking context for all overlays.\r\n$cdk-z-index-overlay-container: 1000 !default;\r\n$cdk-z-index-overlay: 1000 !default;\r\n$cdk-z-index-overlay-backdrop: 1000 !default;\r\n\r\n// Background color for all of the backdrops\r\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\r\n\r\n// Default backdrop animation is based on the Material Design swift-ease-out.\r\n$backdrop-animation-duration: 400ms !default;\r\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\r\n\r\n\r\n@mixin cdk-overlay() {\r\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\r\n    // Disable events from being captured on the overlay container.\r\n    pointer-events: none;\r\n\r\n    // The container should be the size of the viewport.\r\n    top: 0;\r\n    left: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  // The overlay-container is an invisible element which contains all individual overlays.\r\n  .cdk-overlay-container {\r\n    position: fixed;\r\n    z-index: $cdk-z-index-overlay-container;\r\n\r\n    &:empty {\r\n      // Hide the element when it doesn't have any child nodes. This doesn't\r\n      // include overlays that have been detached, rather than disposed.\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\r\n  // This makes centering the overlay easy without running into the subpixel rendering\r\n  // problems tied to using `transform` and without interfering with the other position\r\n  // strategies.\r\n  .cdk-global-overlay-wrapper {\r\n    display: flex;\r\n    position: absolute;\r\n    z-index: $cdk-z-index-overlay;\r\n  }\r\n\r\n  // A single overlay pane.\r\n  .cdk-overlay-pane {\r\n    // Note: it's important for this one to start off `absolute`,\r\n    // in order for us to be able to measure it correctly.\r\n    position: absolute;\r\n    pointer-events: auto;\r\n    box-sizing: border-box;\r\n    z-index: $cdk-z-index-overlay;\r\n\r\n    // For connected-position overlays, we set `display: flex` in\r\n    // order to force `max-width` and `max-height` to take effect.\r\n    display: flex;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n  }\r\n\r\n  .cdk-overlay-backdrop {\r\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n\r\n    z-index: $cdk-z-index-overlay-backdrop;\r\n    pointer-events: auto;\r\n    -webkit-tap-highlight-color: transparent;\r\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\r\n    opacity: 0;\r\n\r\n    &.cdk-overlay-backdrop-showing {\r\n      opacity: 1;\r\n\r\n      // In high contrast mode the rgba background will become solid so we need to fall back\r\n      // to making it opaque using `opacity`. Note that we can't use the `cdk-high-contrast`\r\n      // mixin, because we can't normalize the import path to the _a11y.scss both for the\r\n      // source and when this file is distributed. See #10908.\r\n      @media screen and (-ms-high-contrast: active) {\r\n        opacity: 0.6;\r\n      }\r\n    }\r\n  }\r\n\r\n  .cdk-overlay-dark-backdrop {\r\n    background: $cdk-overlay-dark-backdrop-background;\r\n  }\r\n\r\n  .cdk-overlay-transparent-backdrop {\r\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\r\n    // capturing the user's mouse scroll events. Since we also can't use something like\r\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\r\n    // all and using `opacity` to make the element transparent.\r\n    &, &.cdk-overlay-backdrop-showing {\r\n      opacity: 0;\r\n    }\r\n  }\r\n\r\n  // Overlay parent element used with the connected position strategy. Used to constrain the\r\n  // overlay element's size to fit within the viewport.\r\n  .cdk-overlay-connected-position-bounding-box {\r\n    position: absolute;\r\n    z-index: $cdk-z-index-overlay;\r\n\r\n    // We use `display: flex` on this element exclusively for centering connected overlays.\r\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\r\n    // flex layout.\r\n    display: flex;\r\n\r\n    // We use the `column` direction here to avoid some flexbox issues in Edge\r\n    // when using the \"grow after open\" options.\r\n    flex-direction: column;\r\n\r\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\r\n    min-width: 1px;\r\n    min-height: 1px;\r\n  }\r\n\r\n  // Used when disabling global scrolling.\r\n  .cdk-global-scrollblock {\r\n    position: fixed;\r\n\r\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\r\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\r\n    // that the element had before we made it `fixed`.\r\n    width: 100%;\r\n\r\n    // Note: this will always add a scrollbar to whatever element it is on, which can\r\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\r\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\r\n    overflow-y: scroll;\r\n  }\r\n}\r\n\r\n@mixin cdk-a11y {\r\n  .cdk-visually-hidden {\r\n    border: 0;\r\n    clip: rect(0 0 0 0);\r\n    height: 1px;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    width: 1px;\r\n\r\n    // Avoid browsers rendering the focus ring in some cases.\r\n    outline: 0;\r\n\r\n    // Avoid some cases where the browser will still render the native controls (see #9049).\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n  }\r\n}\r\n\r\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\r\n/// is non-empty.\r\n/// @param selector-context The selector under which to nest the mixin's content.\r\n@mixin _cdk-optionally-nest-content($selector-context) {\r\n  @if ($selector-context == '') {\r\n    @content;\r\n  }\r\n  @else {\r\n    #{$selector-context} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n/// Applies styles for users in high contrast mode. Note that this only applies\r\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\r\n/// attribute, however Chrome handles high contrast differently.\r\n///\r\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\r\n///    `white-on-black` or `black-on-white`.\r\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\r\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\r\n///     * `off` - works for `None`\r\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\r\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\r\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\r\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\r\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\r\n  }\r\n\r\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\r\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\r\n           'Allowed values are \"on\", \"off\", and \"any\"';\r\n  }\r\n\r\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\r\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\r\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\r\n  @at-root {\r\n    $selector-context: #{&};\r\n\r\n    @if ($encapsulation != 'on') {\r\n      .cdk-high-contrast-#{$target} {\r\n        @include _cdk-optionally-nest-content($selector-context) {\r\n          @content;\r\n        }\r\n      }\r\n    }\r\n\r\n    @if ($encapsulation != 'off') {\r\n      .cdk-high-contrast-#{$target} :host {\r\n        @include _cdk-optionally-nest-content($selector-context) {\r\n          @content;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Core styles that enable monitoring autofill state of text fields.\r\n@mixin cdk-text-field {\r\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\r\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\r\n  // needed to prevent LibSass from stripping the keyframes out.\r\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\r\n  @keyframes cdk-text-field-autofill-start {/*!*/}\r\n  @keyframes cdk-text-field-autofill-end {/*!*/}\r\n\r\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\r\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\r\n    animation: cdk-text-field-autofill-start 0s 1ms;\r\n  }\r\n\r\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\r\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\r\n    animation: cdk-text-field-autofill-end 0s 1ms;\r\n  }\r\n\r\n  // Remove the resize handle on autosizing textareas, because whatever height\r\n  // the user resized to will be overwritten once they start typing again.\r\n  textarea.cdk-textarea-autosize {\r\n    resize: none;\r\n  }\r\n\r\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\r\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\r\n  // rules do not interfere with the measurement.\r\n  textarea.cdk-textarea-autosize-measuring {\r\n    @include _cdk-textarea-autosize-measuring-base;\r\n    height: auto !important;\r\n    overflow: hidden !important;\r\n  }\r\n\r\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\r\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\r\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\r\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\r\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\r\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\r\n  textarea.cdk-textarea-autosize-measuring-firefox {\r\n    @include _cdk-textarea-autosize-measuring-base;\r\n    height: 0 !important;\r\n  }\r\n}\r\n\r\n@mixin _cdk-textarea-autosize-measuring-base {\r\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\r\n  // measurement. We just have to account for it later and subtract it off the final result.\r\n  padding: 2px 0 !important;\r\n  box-sizing: content-box !important;\r\n}\r\n\r\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\r\n$cdk-text-field-autofill-color-frame-count: 0;\r\n\r\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\r\n// Based on: https://stackoverflow.com/questions/2781549/\r\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\r\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\r\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\r\n    to {\r\n      background: $background;\r\n      @if $foreground != '' { color: $foreground; }\r\n    }\r\n  }\r\n\r\n  &:-webkit-autofill {\r\n    animation: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\r\n  }\r\n\r\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\r\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\r\n    // event won't fire.\r\n    animation: cdk-text-field-autofill-start 0s 1ms,\r\n               cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\r\n  }\r\n\r\n  $cdk-text-field-autofill-color-frame-count:\r\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\r\n}\r\n\r\n\r\n// Core styles that can be used to apply material design treatments to any element.\r\n// Media queries\r\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\r\n$mat-xsmall: 'max-width: 599px';\r\n$mat-small: 'max-width: 959px';\r\n\r\n// TODO: Revisit all z-indices before beta\r\n// z-index master list\r\n\r\n$z-index-fab: 20 !default;\r\n$z-index-drawer: 100 !default;\r\n\r\n// Global constants\r\n$pi: 3.14159265;\r\n\r\n// Padding between input toggles and their labels\r\n$mat-toggle-padding: 8px !default;\r\n// Width and height of input toggles\r\n$mat-toggle-size: 20px !default;\r\n\r\n// Easing Curves\r\n// TODO(jelbourn): all of these need to be revisited\r\n\r\n// The default animation curves used by material design.\r\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\r\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\r\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\r\n\r\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\r\n\r\n$swift-ease-out-duration: 400ms !default;\r\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\r\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\r\n\r\n$swift-ease-in-duration: 300ms !default;\r\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\r\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\r\n\r\n$swift-ease-in-out-duration: 500ms !default;\r\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\r\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\r\n\r\n$swift-linear-duration: 80ms !default;\r\n$swift-linear-timing-function: linear !default;\r\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\r\n\r\n\r\n\r\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\r\n// element.\r\n// See: https://material.io/design/environment/elevation.html\r\n// Examples:\r\n//\r\n//\r\n// .mat-foo {\r\n//   @include $mat-elevation(2);\r\n//\r\n//   &:active {\r\n//     @include $mat-elevation(8);\r\n//   }\r\n// }\r\n//\r\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\r\n//\r\n// For an explanation of the design behind how elevation is implemented, see the design doc at\r\n// https://goo.gl/Kq0k9Z.\r\n\r\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\r\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\r\n// space completely obscured by an object relative to its light source), one for penumbra (the\r\n// space partially obscured by an object), and one for ambient (the space which contains the object\r\n// itself). For a further explanation of these terms and their meanings, see\r\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\r\n\r\n// Maps for the different shadow sets and their values within each z-space. These values were\r\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\r\n// all of the values between them.\r\n\r\n@function _get-umbra-map($color, $opacity) {\r\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\r\n\r\n  @return (\r\n    0: '0px 0px 0px 0px #{$shadow-color}',\r\n    1: '0px 2px 1px -1px #{$shadow-color}',\r\n    2: '0px 3px 1px -2px #{$shadow-color}',\r\n    3: '0px 3px 3px -2px #{$shadow-color}',\r\n    4: '0px 2px 4px -1px #{$shadow-color}',\r\n    5: '0px 3px 5px -1px #{$shadow-color}',\r\n    6: '0px 3px 5px -1px #{$shadow-color}',\r\n    7: '0px 4px 5px -2px #{$shadow-color}',\r\n    8: '0px 5px 5px -3px #{$shadow-color}',\r\n    9: '0px 5px 6px -3px #{$shadow-color}',\r\n    10: '0px 6px 6px -3px #{$shadow-color}',\r\n    11: '0px 6px 7px -4px #{$shadow-color}',\r\n    12: '0px 7px 8px -4px #{$shadow-color}',\r\n    13: '0px 7px 8px -4px #{$shadow-color}',\r\n    14: '0px 7px 9px -4px #{$shadow-color}',\r\n    15: '0px 8px 9px -5px #{$shadow-color}',\r\n    16: '0px 8px 10px -5px #{$shadow-color}',\r\n    17: '0px 8px 11px -5px #{$shadow-color}',\r\n    18: '0px 9px 11px -5px #{$shadow-color}',\r\n    19: '0px 9px 12px -6px #{$shadow-color}',\r\n    20: '0px 10px 13px -6px #{$shadow-color}',\r\n    21: '0px 10px 13px -6px #{$shadow-color}',\r\n    22: '0px 10px 14px -6px #{$shadow-color}',\r\n    23: '0px 11px 14px -7px #{$shadow-color}',\r\n    24: '0px 11px 15px -7px #{$shadow-color}'\r\n  );\r\n}\r\n\r\n@function _get-penumbra-map($color, $opacity) {\r\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\r\n\r\n  @return (\r\n    0: '0px 0px 0px 0px #{$shadow-color}',\r\n    1: '0px 1px 1px 0px #{$shadow-color}',\r\n    2: '0px 2px 2px 0px #{$shadow-color}',\r\n    3: '0px 3px 4px 0px #{$shadow-color}',\r\n    4: '0px 4px 5px 0px #{$shadow-color}',\r\n    5: '0px 5px 8px 0px #{$shadow-color}',\r\n    6: '0px 6px 10px 0px #{$shadow-color}',\r\n    7: '0px 7px 10px 1px #{$shadow-color}',\r\n    8: '0px 8px 10px 1px #{$shadow-color}',\r\n    9: '0px 9px 12px 1px #{$shadow-color}',\r\n    10: '0px 10px 14px 1px #{$shadow-color}',\r\n    11: '0px 11px 15px 1px #{$shadow-color}',\r\n    12: '0px 12px 17px 2px #{$shadow-color}',\r\n    13: '0px 13px 19px 2px #{$shadow-color}',\r\n    14: '0px 14px 21px 2px #{$shadow-color}',\r\n    15: '0px 15px 22px 2px #{$shadow-color}',\r\n    16: '0px 16px 24px 2px #{$shadow-color}',\r\n    17: '0px 17px 26px 2px #{$shadow-color}',\r\n    18: '0px 18px 28px 2px #{$shadow-color}',\r\n    19: '0px 19px 29px 2px #{$shadow-color}',\r\n    20: '0px 20px 31px 3px #{$shadow-color}',\r\n    21: '0px 21px 33px 3px #{$shadow-color}',\r\n    22: '0px 22px 35px 3px #{$shadow-color}',\r\n    23: '0px 23px 36px 3px #{$shadow-color}',\r\n    24: '0px 24px 38px 3px #{$shadow-color}'\r\n  );\r\n}\r\n\r\n@function _get-ambient-map($color, $opacity) {\r\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\r\n\r\n  @return (\r\n    0: '0px 0px 0px 0px #{$shadow-color}',\r\n    1: '0px 1px 3px 0px #{$shadow-color}',\r\n    2: '0px 1px 5px 0px #{$shadow-color}',\r\n    3: '0px 1px 8px 0px #{$shadow-color}',\r\n    4: '0px 1px 10px 0px #{$shadow-color}',\r\n    5: '0px 1px 14px 0px #{$shadow-color}',\r\n    6: '0px 1px 18px 0px #{$shadow-color}',\r\n    7: '0px 2px 16px 1px #{$shadow-color}',\r\n    8: '0px 3px 14px 2px #{$shadow-color}',\r\n    9: '0px 3px 16px 2px #{$shadow-color}',\r\n    10: '0px 4px 18px 3px #{$shadow-color}',\r\n    11: '0px 4px 20px 3px #{$shadow-color}',\r\n    12: '0px 5px 22px 4px #{$shadow-color}',\r\n    13: '0px 5px 24px 4px #{$shadow-color}',\r\n    14: '0px 5px 26px 4px #{$shadow-color}',\r\n    15: '0px 6px 28px 5px #{$shadow-color}',\r\n    16: '0px 6px 30px 5px #{$shadow-color}',\r\n    17: '0px 6px 32px 5px #{$shadow-color}',\r\n    18: '0px 7px 34px 6px #{$shadow-color}',\r\n    19: '0px 7px 36px 6px #{$shadow-color}',\r\n    20: '0px 8px 38px 7px #{$shadow-color}',\r\n    21: '0px 8px 40px 7px #{$shadow-color}',\r\n    22: '0px 8px 42px 7px #{$shadow-color}',\r\n    23: '0px 9px 44px 8px #{$shadow-color}',\r\n    24: '0px 9px 46px 8px #{$shadow-color}'\r\n  );\r\n}\r\n\r\n// The default duration value for elevation transitions.\r\n$mat-elevation-transition-duration: 280ms !default;\r\n\r\n// The default easing value for elevation transitions.\r\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\r\n\r\n// The default color for elevation shadows.\r\n$mat-elevation-color: black !default;\r\n\r\n// The default opacity scaling value for elevation shadows.\r\n$mat-elevation-opacity: 1 !default;\r\n\r\n// Prefix for elevation-related selectors.\r\n$_mat-elevation-prefix: 'mat-elevation-z';\r\n\r\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\r\n// The $zValue must be between 0 and 24.\r\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\r\n  @if type-of($zValue) != number or not unitless($zValue) {\r\n    @error '$zValue must be a unitless number';\r\n  }\r\n  @if $zValue < 0 or $zValue > 24 {\r\n    @error '$zValue must be between 0 and 24';\r\n  }\r\n\r\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\r\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\r\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\r\n}\r\n\r\n@mixin _mat-theme-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\r\n  $foreground: map-get($config, foreground);\r\n  $elevation-color: map-get($foreground, elevation);\r\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\r\n\r\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\r\n}\r\n\r\n// Applies the elevation to an element in a manner that allows\r\n// consumers to override it via the Material elevation classes.\r\n@mixin mat-overridable-elevation(\r\n    $zValue,\r\n    $color: $mat-elevation-color,\r\n    $opacity: $mat-elevation-opacity) {\r\n  &:not([class*='#{$_mat-elevation-prefix}']) {\r\n    @include mat-elevation($zValue, $color, $opacity);\r\n  }\r\n}\r\n\r\n@mixin _mat-theme-overridable-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\r\n  $foreground: map-get($config, foreground);\r\n  $elevation-color: map-get($foreground, elevation);\r\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\r\n\r\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\r\n}\r\n\r\n// Returns a string that can be used as the value for a transition property for elevation.\r\n// Calling this function directly is useful in situations where a component needs to transition\r\n// more than one property.\r\n//\r\n// .foo {\r\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\r\n// }\r\n@function mat-elevation-transition-property-value(\r\n    $duration: $mat-elevation-transition-duration,\r\n    $easing: $mat-elevation-transition-timing-function) {\r\n  @return box-shadow #{$duration} #{$easing};\r\n}\r\n\r\n// Applies the correct css rules needed to have an element transition between elevations.\r\n// This mixin should be applied to elements whose elevation values will change depending on their\r\n// context (e.g. when active or disabled).\r\n//\r\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\r\n// be used in the same way by clients.\r\n@mixin mat-elevation-transition(\r\n    $duration: $mat-elevation-transition-duration,\r\n    $easing: $mat-elevation-transition-timing-function) {\r\n  transition: mat-elevation-transition-property-value($duration, $easing);\r\n}\r\n\r\n// Color palettes from the Material Design spec.\r\n// See https://material.io/design/color/\r\n//\r\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\r\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\r\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\r\n\r\n\r\n// @deprecated renamed to $dark-primary-text.\r\n// @breaking-change 8.0.0\r\n$black-87-opacity: rgba(black, 0.87);\r\n// @deprecated renamed to $light-primary-text.\r\n// @breaking-change 8.0.0\r\n$white-87-opacity: rgba(white, 0.87);\r\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\r\n// @breaking-change 8.0.0\r\n$black-12-opacity: rgba(black, 0.12);\r\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\r\n// @breaking-change 8.0.0\r\n$white-12-opacity: rgba(white, 0.12);\r\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\r\n// @breaking-change 8.0.0\r\n$black-6-opacity: rgba(black, 0.06);\r\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\r\n// @breaking-change 8.0.0\r\n$white-6-opacity: rgba(white, 0.06);\r\n\r\n$dark-primary-text: rgba(black, 0.87);\r\n$dark-secondary-text: rgba(black, 0.54);\r\n$dark-disabled-text: rgba(black, 0.38);\r\n$dark-dividers: rgba(black, 0.12);\r\n$dark-focused: rgba(black, 0.12);\r\n$light-primary-text: white;\r\n$light-secondary-text: rgba(white, 0.7);\r\n$light-disabled-text: rgba(white, 0.5);\r\n$light-dividers: rgba(white, 0.12);\r\n$light-focused: rgba(white, 0.12);\r\n\r\n$mat-red: (\r\n  50: #ffebee,\r\n  100: #ffcdd2,\r\n  200: #ef9a9a,\r\n  300: #e57373,\r\n  400: #ef5350,\r\n  500: #f44336,\r\n  600: #e53935,\r\n  700: #d32f2f,\r\n  800: #c62828,\r\n  900: #b71c1c,\r\n  A100: #ff8a80,\r\n  A200: #ff5252,\r\n  A400: #ff1744,\r\n  A700: #d50000,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $light-primary-text,\r\n    A400: $light-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n$mat-pink: (\r\n  50: #fce4ec,\r\n  100: #f8bbd0,\r\n  200: #f48fb1,\r\n  300: #f06292,\r\n  400: #ec407a,\r\n  500: #e91e63,\r\n  600: #d81b60,\r\n  700: #c2185b,\r\n  800: #ad1457,\r\n  900: #880e4f,\r\n  A100: #ff80ab,\r\n  A200: #ff4081,\r\n  A400: #f50057,\r\n  A700: #c51162,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $light-primary-text,\r\n    A400: $light-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n$mat-purple: (\r\n  50: #f3e5f5,\r\n  100: #e1bee7,\r\n  200: #ce93d8,\r\n  300: #ba68c8,\r\n  400: #ab47bc,\r\n  500: #9c27b0,\r\n  600: #8e24aa,\r\n  700: #7b1fa2,\r\n  800: #6a1b9a,\r\n  900: #4a148c,\r\n  A100: #ea80fc,\r\n  A200: #e040fb,\r\n  A400: #d500f9,\r\n  A700: #aa00ff,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $light-primary-text,\r\n    400: $light-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $light-primary-text,\r\n    A400: $light-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n$mat-deep-purple: (\r\n  50: #ede7f6,\r\n  100: #d1c4e9,\r\n  200: #b39ddb,\r\n  300: #9575cd,\r\n  400: #7e57c2,\r\n  500: #673ab7,\r\n  600: #5e35b1,\r\n  700: #512da8,\r\n  800: #4527a0,\r\n  900: #311b92,\r\n  A100: #b388ff,\r\n  A200: #7c4dff,\r\n  A400: #651fff,\r\n  A700: #6200ea,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $light-primary-text,\r\n    400: $light-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $light-primary-text,\r\n    A400: $light-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n$mat-indigo: (\r\n  50: #e8eaf6,\r\n  100: #c5cae9,\r\n  200: #9fa8da,\r\n  300: #7986cb,\r\n  400: #5c6bc0,\r\n  500: #3f51b5,\r\n  600: #3949ab,\r\n  700: #303f9f,\r\n  800: #283593,\r\n  900: #1a237e,\r\n  A100: #8c9eff,\r\n  A200: #536dfe,\r\n  A400: #3d5afe,\r\n  A700: #304ffe,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $light-primary-text,\r\n    400: $light-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $light-primary-text,\r\n    A400: $light-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n$mat-blue: (\r\n  50: #e3f2fd,\r\n  100: #bbdefb,\r\n  200: #90caf9,\r\n  300: #64b5f6,\r\n  400: #42a5f5,\r\n  500: #2196f3,\r\n  600: #1e88e5,\r\n  700: #1976d2,\r\n  800: #1565c0,\r\n  900: #0d47a1,\r\n  A100: #82b1ff,\r\n  A200: #448aff,\r\n  A400: #2979ff,\r\n  A700: #2962ff,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $light-primary-text,\r\n    A400: $light-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n$mat-light-blue: (\r\n  50: #e1f5fe,\r\n  100: #b3e5fc,\r\n  200: #81d4fa,\r\n  300: #4fc3f7,\r\n  400: #29b6f6,\r\n  500: #03a9f4,\r\n  600: #039be5,\r\n  700: #0288d1,\r\n  800: #0277bd,\r\n  900: #01579b,\r\n  A100: #80d8ff,\r\n  A200: #40c4ff,\r\n  A400: #00b0ff,\r\n  A700: #0091ea,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n$mat-cyan: (\r\n  50: #e0f7fa,\r\n  100: #b2ebf2,\r\n  200: #80deea,\r\n  300: #4dd0e1,\r\n  400: #26c6da,\r\n  500: #00bcd4,\r\n  600: #00acc1,\r\n  700: #0097a7,\r\n  800: #00838f,\r\n  900: #006064,\r\n  A100: #84ffff,\r\n  A200: #18ffff,\r\n  A400: #00e5ff,\r\n  A700: #00b8d4,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $dark-primary-text,\r\n  )\r\n);\r\n\r\n$mat-teal: (\r\n  50: #e0f2f1,\r\n  100: #b2dfdb,\r\n  200: #80cbc4,\r\n  300: #4db6ac,\r\n  400: #26a69a,\r\n  500: #009688,\r\n  600: #00897b,\r\n  700: #00796b,\r\n  800: #00695c,\r\n  900: #004d40,\r\n  A100: #a7ffeb,\r\n  A200: #64ffda,\r\n  A400: #1de9b6,\r\n  A700: #00bfa5,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $dark-primary-text,\r\n  )\r\n);\r\n\r\n$mat-green: (\r\n  50: #e8f5e9,\r\n  100: #c8e6c9,\r\n  200: #a5d6a7,\r\n  300: #81c784,\r\n  400: #66bb6a,\r\n  500: #4caf50,\r\n  600: #43a047,\r\n  700: #388e3c,\r\n  800: #2e7d32,\r\n  900: #1b5e20,\r\n  A100: #b9f6ca,\r\n  A200: #69f0ae,\r\n  A400: #00e676,\r\n  A700: #00c853,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $dark-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $dark-primary-text,\r\n  )\r\n);\r\n\r\n$mat-light-green: (\r\n  50: #f1f8e9,\r\n  100: #dcedc8,\r\n  200: #c5e1a5,\r\n  300: #aed581,\r\n  400: #9ccc65,\r\n  500: #8bc34a,\r\n  600: #7cb342,\r\n  700: #689f38,\r\n  800: #558b2f,\r\n  900: #33691e,\r\n  A100: #ccff90,\r\n  A200: #b2ff59,\r\n  A400: #76ff03,\r\n  A700: #64dd17,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $dark-primary-text,\r\n    600: $dark-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $dark-primary-text,\r\n  )\r\n);\r\n\r\n$mat-lime: (\r\n  50: #f9fbe7,\r\n  100: #f0f4c3,\r\n  200: #e6ee9c,\r\n  300: #dce775,\r\n  400: #d4e157,\r\n  500: #cddc39,\r\n  600: #c0ca33,\r\n  700: #afb42b,\r\n  800: #9e9d24,\r\n  900: #827717,\r\n  A100: #f4ff81,\r\n  A200: #eeff41,\r\n  A400: #c6ff00,\r\n  A700: #aeea00,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $dark-primary-text,\r\n    600: $dark-primary-text,\r\n    700: $dark-primary-text,\r\n    800: $dark-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $dark-primary-text,\r\n  )\r\n);\r\n\r\n$mat-yellow: (\r\n  50: #fffde7,\r\n  100: #fff9c4,\r\n  200: #fff59d,\r\n  300: #fff176,\r\n  400: #ffee58,\r\n  500: #ffeb3b,\r\n  600: #fdd835,\r\n  700: #fbc02d,\r\n  800: #f9a825,\r\n  900: #f57f17,\r\n  A100: #ffff8d,\r\n  A200: #ffff00,\r\n  A400: #ffea00,\r\n  A700: #ffd600,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $dark-primary-text,\r\n    600: $dark-primary-text,\r\n    700: $dark-primary-text,\r\n    800: $dark-primary-text,\r\n    900: $dark-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $dark-primary-text,\r\n  )\r\n);\r\n\r\n$mat-amber: (\r\n  50: #fff8e1,\r\n  100: #ffecb3,\r\n  200: #ffe082,\r\n  300: #ffd54f,\r\n  400: #ffca28,\r\n  500: #ffc107,\r\n  600: #ffb300,\r\n  700: #ffa000,\r\n  800: #ff8f00,\r\n  900: #ff6f00,\r\n  A100: #ffe57f,\r\n  A200: #ffd740,\r\n  A400: #ffc400,\r\n  A700: #ffab00,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $dark-primary-text,\r\n    600: $dark-primary-text,\r\n    700: $dark-primary-text,\r\n    800: $dark-primary-text,\r\n    900: $dark-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $dark-primary-text,\r\n  )\r\n);\r\n\r\n$mat-orange: (\r\n  50: #fff3e0,\r\n  100: #ffe0b2,\r\n  200: #ffcc80,\r\n  300: #ffb74d,\r\n  400: #ffa726,\r\n  500: #ff9800,\r\n  600: #fb8c00,\r\n  700: #f57c00,\r\n  800: #ef6c00,\r\n  900: #e65100,\r\n  A100: #ffd180,\r\n  A200: #ffab40,\r\n  A400: #ff9100,\r\n  A700: #ff6d00,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $dark-primary-text,\r\n    600: $dark-primary-text,\r\n    700: $dark-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: black,\r\n  )\r\n);\r\n\r\n$mat-deep-orange: (\r\n  50: #fbe9e7,\r\n  100: #ffccbc,\r\n  200: #ffab91,\r\n  300: #ff8a65,\r\n  400: #ff7043,\r\n  500: #ff5722,\r\n  600: #f4511e,\r\n  700: #e64a19,\r\n  800: #d84315,\r\n  900: #bf360c,\r\n  A100: #ff9e80,\r\n  A200: #ff6e40,\r\n  A400: #ff3d00,\r\n  A700: #dd2c00,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $light-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n$mat-brown: (\r\n  50: #efebe9,\r\n  100: #d7ccc8,\r\n  200: #bcaaa4,\r\n  300: #a1887f,\r\n  400: #8d6e63,\r\n  500: #795548,\r\n  600: #6d4c41,\r\n  700: #5d4037,\r\n  800: #4e342e,\r\n  900: #3e2723,\r\n  A100: #d7ccc8,\r\n  A200: #bcaaa4,\r\n  A400: #8d6e63,\r\n  A700: #5d4037,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $light-primary-text,\r\n    400: $light-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $light-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n$mat-grey: (\r\n  50: #fafafa,\r\n  100: #f5f5f5,\r\n  200: #eeeeee,\r\n  300: #e0e0e0,\r\n  400: #bdbdbd,\r\n  500: #9e9e9e,\r\n  600: #757575,\r\n  700: #616161,\r\n  800: #424242,\r\n  900: #212121,\r\n  A100: #ffffff,\r\n  A200: #eeeeee,\r\n  A400: #bdbdbd,\r\n  A700: #616161,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $dark-primary-text,\r\n    500: $dark-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $dark-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n// Alias for alternate spelling.\r\n$mat-gray: $mat-grey;\r\n\r\n$mat-blue-grey: (\r\n  50: #eceff1,\r\n  100: #cfd8dc,\r\n  200: #b0bec5,\r\n  300: #90a4ae,\r\n  400: #78909c,\r\n  500: #607d8b,\r\n  600: #546e7a,\r\n  700: #455a64,\r\n  800: #37474f,\r\n  900: #263238,\r\n  A100: #cfd8dc,\r\n  A200: #b0bec5,\r\n  A400: #78909c,\r\n  A700: #455a64,\r\n  contrast: (\r\n    50: $dark-primary-text,\r\n    100: $dark-primary-text,\r\n    200: $dark-primary-text,\r\n    300: $dark-primary-text,\r\n    400: $light-primary-text,\r\n    500: $light-primary-text,\r\n    600: $light-primary-text,\r\n    700: $light-primary-text,\r\n    800: $light-primary-text,\r\n    900: $light-primary-text,\r\n    A100: $dark-primary-text,\r\n    A200: $dark-primary-text,\r\n    A400: $light-primary-text,\r\n    A700: $light-primary-text,\r\n  )\r\n);\r\n\r\n// Alias for alternate spelling.\r\n$mat-blue-gray: $mat-blue-grey;\r\n\r\n\r\n// Background palette for light themes.\r\n$mat-light-theme-background: (\r\n  status-bar: map_get($mat-grey, 300),\r\n  app-bar:    map_get($mat-grey, 100),\r\n  background: map_get($mat-grey, 50),\r\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\r\n  card:       white,\r\n  dialog:     white,\r\n  disabled-button: rgba(black, 0.12),\r\n  raised-button: white,\r\n  focused-button: $dark-focused,\r\n  selected-button: map_get($mat-grey, 300),\r\n  selected-disabled-button: map_get($mat-grey, 400),\r\n  disabled-button-toggle: map_get($mat-grey, 200),\r\n  unselected-chip: map_get($mat-grey, 300),\r\n  disabled-list-option: map_get($mat-grey, 200),\r\n  tooltip: map_get($mat-grey, 700),\r\n);\r\n\r\n// Background palette for dark themes.\r\n$mat-dark-theme-background: (\r\n  status-bar: black,\r\n  app-bar:    map_get($mat-grey, 900),\r\n  background: #303030,\r\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\r\n  card:       map_get($mat-grey, 800),\r\n  dialog:     map_get($mat-grey, 800),\r\n  disabled-button: rgba(white, 0.12),\r\n  raised-button: map-get($mat-grey, 800),\r\n  focused-button: $light-focused,\r\n  selected-button: map_get($mat-grey, 900),\r\n  selected-disabled-button: map_get($mat-grey, 800),\r\n  disabled-button-toggle: black,\r\n  unselected-chip: map_get($mat-grey, 700),\r\n  disabled-list-option: black,\r\n  tooltip: map_get($mat-grey, 700),\r\n);\r\n\r\n// Foreground palette for light themes.\r\n$mat-light-theme-foreground: (\r\n  base:              black,\r\n  divider:           $dark-dividers,\r\n  dividers:          $dark-dividers,\r\n  disabled:          $dark-disabled-text,\r\n  disabled-button:   rgba(black, 0.26),\r\n  disabled-text:     $dark-disabled-text,\r\n  elevation:         black,\r\n  hint-text:         $dark-disabled-text,\r\n  secondary-text:    $dark-secondary-text,\r\n  icon:              rgba(black, 0.54),\r\n  icons:             rgba(black, 0.54),\r\n  text:              rgba(black, 0.87),\r\n  slider-min:        rgba(black, 0.87),\r\n  slider-off:        rgba(black, 0.26),\r\n  slider-off-active: rgba(black, 0.38),\r\n);\r\n\r\n// Foreground palette for dark themes.\r\n$mat-dark-theme-foreground: (\r\n  base:              white,\r\n  divider:           $light-dividers,\r\n  dividers:          $light-dividers,\r\n  disabled:          $light-disabled-text,\r\n  disabled-button:   rgba(white, 0.3),\r\n  disabled-text:     $light-disabled-text,\r\n  elevation:         black,\r\n  hint-text:         $light-disabled-text,\r\n  secondary-text:    $light-secondary-text,\r\n  icon:              white,\r\n  icons:             white,\r\n  text:              white,\r\n  slider-min:        white,\r\n  slider-off:        rgba(white, 0.3),\r\n  slider-off-active: rgba(white, 0.3),\r\n);\r\n\r\n\r\n// Whether density should be generated by default.\r\n$_mat-theme-generate-default-density: true !default;\r\n\r\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\r\n// @param $color-map\r\n// @param $hue\r\n@function mat-contrast($palette, $hue) {\r\n  @return map-get(map-get($palette, contrast), $hue);\r\n}\r\n\r\n\r\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\r\n// of the Material Design hues.\r\n// @param $color-map\r\n// @param $primary\r\n// @param $lighter\r\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\r\n  $result: map_merge($base-palette, (\r\n    default: map-get($base-palette, $default),\r\n    lighter: map-get($base-palette, $lighter),\r\n    darker: map-get($base-palette, $darker),\r\n    text: map-get($base-palette, $text),\r\n\r\n    default-contrast: mat-contrast($base-palette, $default),\r\n    lighter-contrast: mat-contrast($base-palette, $lighter),\r\n    darker-contrast: mat-contrast($base-palette, $darker)\r\n  ));\r\n\r\n  // For each hue in the palette, add a \"-contrast\" color to the map.\r\n  @each $hue, $color in $base-palette {\r\n    $result: map_merge($result, (\r\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\r\n    ));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n\r\n// Gets a color from a theme palette (the output of mat-palette).\r\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\r\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\r\n//\r\n// @param $color-map The theme palette (output of mat-palette).\r\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\r\n//     be treated as opacity.\r\n// @param $opacity The alpha channel value for the color.\r\n@function mat-color($palette, $hue: default, $opacity: null) {\r\n  // If hueKey is a number between zero and one, then it actually contains an\r\n  // opacity value, so recall this function with the default hue and that given opacity.\r\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\r\n    @return mat-color($palette, default, $hue);\r\n  }\r\n\r\n  $color: map-get($palette, $hue);\r\n\r\n  @if (type-of($color) != color) {\r\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\r\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\r\n    // throw an error or output something invalid.\r\n    @return $color;\r\n  }\r\n\r\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\r\n}\r\n\r\n// Validates the specified theme by ensuring that the optional color config defines\r\n// a primary, accent and warn palette. Returns the theme if no failures were found.\r\n@function _mat-validate-theme($theme) {\r\n  @if map_get($theme, color) {\r\n    $color: map_get($theme, color);\r\n    @if not map_get($color, primary) {\r\n      @error 'Theme does not define a valid \"primary\" palette.';\r\n    }\r\n    @else if not map_get($color, accent) {\r\n      @error 'Theme does not define a valid \"accent\" palette.';\r\n    }\r\n    @else if not map_get($color, warn) {\r\n      @error 'Theme does not define a valid \"warn\" palette.';\r\n    }\r\n  }\r\n  @return $theme;\r\n}\r\n\r\n// Creates a backwards compatible theme. Previously in Angular Material, theme objects\r\n// contained the color configuration directly. With the recent refactoring of the theming\r\n// system to allow for density and typography configurations, this is no longer the case.\r\n// To ensure that constructed themes which will be passed to custom theme mixins do not break,\r\n// we copy the color configuration and put its properties at the top-level of the theme object.\r\n// Here is an example of a pattern that should still work until it's officially marked as a\r\n// breaking change:\r\n//\r\n//    @mixin my-custom-component-theme($theme) {\r\n//      .my-comp {\r\n//        background-color: mat-color(map_get($theme, primary));\r\n//      }\r\n//    }\r\n//\r\n// Note that the `$theme.primary` key does usually not exist since the color configuration\r\n// is stored in `$theme.color` which contains a property for `primary`. This method copies\r\n// the map from `$theme.color` to `$theme` for backwards compatibility.\r\n@function _mat-create-backwards-compatibility-theme($theme) {\r\n  @if not map_get($theme, color) {\r\n    @return $theme;\r\n  }\r\n  $color: map_get($theme, color);\r\n  @return map_merge($theme, $color);\r\n}\r\n\r\n// Creates a light-themed color configuration from the specified\r\n// primary, accent and warn palettes.\r\n@function _mat-create-light-color-config($primary, $accent, $warn: null) {\r\n  @return (\r\n    primary: $primary,\r\n    accent: $accent,\r\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\r\n    is-dark: false,\r\n    foreground: $mat-light-theme-foreground,\r\n    background: $mat-light-theme-background,\r\n  );\r\n}\r\n\r\n// Creates a dark-themed color configuration from the specified\r\n// primary, accent and warn palettes.\r\n@function _mat-create-dark-color-config($primary, $accent, $warn: null) {\r\n  @return (\r\n    primary: $primary,\r\n    accent: $accent,\r\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\r\n    is-dark: true,\r\n    foreground: $mat-dark-theme-foreground,\r\n    background: $mat-dark-theme-background,\r\n  );\r\n}\r\n\r\n// Creates a container object for a light theme to be given to individual component theme mixins.\r\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\r\n// as it would break existing apps that set the parameter by name.\r\n@function mat-light-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\r\n  // This function creates a container object for the individual component theme mixins. Consumers\r\n  // can construct such an object by calling this function, or by building the object manually.\r\n  // There are two possible ways to invoke this function in order to create such an object:\r\n  //\r\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\r\n  //        theming system. For `color` configurations, the function only expects the palettes\r\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\r\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\r\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\r\n  //        as passing in a configuration map because only the `color` system can be configured.\r\n  //\r\n  // If the legacy pattern is used, we generate a container object only with a light-themed\r\n  // configuration for the `color` theming part.\r\n  @if $accent != null {\r\n    @return _mat-create-backwards-compatibility-theme(_mat-validate-theme((\r\n      _is-legacy-theme: true,\r\n      color: _mat-create-light-color-config($primary, $accent, $warn),\r\n    )));\r\n  }\r\n  // If the map pattern is used (1), we just pass-through the configurations for individual\r\n  // parts of the theming system, but update the `color` configuration if set. As explained\r\n  // above, the color shorthand will be expanded to an actual light-themed color configuration.\r\n  $result: $primary;\r\n  @if map_get($primary, color) {\r\n    $color-settings: map_get($primary, color);\r\n    $primary: map_get($color-settings, primary);\r\n    $accent: map_get($color-settings, accent);\r\n    $warn: map_get($color-settings, warn);\r\n    $result: map_merge($result, (color: _mat-create-light-color-config($primary, $accent, $warn)));\r\n  }\r\n  @return _mat-create-backwards-compatibility-theme(_mat-validate-theme($result));\r\n}\r\n\r\n// Creates a container object for a dark theme to be given to individual component theme mixins.\r\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\r\n// as it would break existing apps that set the parameter by name.\r\n@function mat-dark-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\r\n  // This function creates a container object for the individual component theme mixins. Consumers\r\n  // can construct such an object by calling this function, or by building the object manually.\r\n  // There are two possible ways to invoke this function in order to create such an object:\r\n  //\r\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\r\n  //        theming system. For `color` configurations, the function only expects the palettes\r\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\r\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\r\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\r\n  //        as passing in a configuration map because only the `color` system can be configured.\r\n  //\r\n  // If the legacy pattern is used, we generate a container object only with a dark-themed\r\n  // configuration for the `color` theming part.\r\n  @if $accent != null {\r\n    @return _mat-create-backwards-compatibility-theme(_mat-validate-theme((\r\n      _is-legacy-theme: true,\r\n      color: _mat-create-dark-color-config($primary, $accent, $warn),\r\n    )));\r\n  }\r\n  // If the map pattern is used (1), we just pass-through the configurations for individual\r\n  // parts of the theming system, but update the `color` configuration if set. As explained\r\n  // above, the color shorthand will be expanded to an actual dark-themed color configuration.\r\n  $result: $primary;\r\n  @if map_get($primary, color) {\r\n    $color-settings: map_get($primary, color);\r\n    $primary: map_get($color-settings, primary);\r\n    $accent: map_get($color-settings, accent);\r\n    $warn: map_get($color-settings, warn);\r\n    $result: map_merge($result, (color: _mat-create-dark-color-config($primary, $accent, $warn)));\r\n  }\r\n  @return _mat-create-backwards-compatibility-theme(_mat-validate-theme($result));\r\n}\r\n\r\n/// Gets the color configuration from the given theme or configuration.\r\n@function mat-get-color-config($theme, $default: null) {\r\n  // If a configuration has been passed, return the config directly.\r\n  @if not _mat-is-theme-object($theme) {\r\n    @return $theme;\r\n  }\r\n  // If the theme has been constructed through the legacy theming API, we use the theme object\r\n  // as color configuration instead of the dedicated `color` property. We do this because for\r\n  // backwards compatibility, we copied the color configuration from `$theme.color` to `$theme`.\r\n  // Hence developers could customize the colors at top-level and want to respect these changes\r\n  // TODO: Remove when legacy theming API is removed.\r\n  @if _mat-is-legacy-constructed-theme($theme) {\r\n    @return $theme;\r\n  }\r\n  @if map_has_key($theme, color) {\r\n    @return map_get($theme, color);\r\n  }\r\n  @return $default;\r\n}\r\n\r\n/// Gets the density configuration from the given theme or configuration.\r\n@function mat-get-density-config($theme-or-config, $default: 0) {\r\n  // If a configuration has been passed, return the config directly.\r\n  @if not _mat-is-theme-object($theme-or-config) {\r\n    @return $theme-or-config;\r\n  }\r\n  // In case a theme has been passed, extract the configuration if present,\r\n  // or fall back to the default density config.\r\n  @if map_has_key($theme-or-config, density) {\r\n    @return map_get($theme-or-config, density);\r\n  }\r\n  @return $default;\r\n}\r\n\r\n/// Gets the typography configuration from the given theme or configuration.\r\n/// For backwards compatibility, typography is not included by default.\r\n@function mat-get-typography-config($theme-or-config, $default: null) {\r\n  // If a configuration has been passed, return the config directly.\r\n  @if not _mat-is-theme-object($theme-or-config) {\r\n    @return $theme-or-config;\r\n  }\r\n  // In case a theme has been passed, extract the configuration if present,\r\n  // or fall back to the default typography config.\r\n  @if (map_has_key($theme-or-config, typography)) {\r\n    @return map_get($theme-or-config, typography);\r\n  }\r\n  @return $default;\r\n}\r\n\r\n// Checks whether the given value resolves to a theme object. Theme objects are always\r\n// of type `map` and can optionally only specify `color`, `density` or `typography`.\r\n@function _mat-is-theme-object($value) {\r\n  @return type-of($value) == 'map' and (\r\n    map_has_key($value, color) or\r\n    map_has_key($value, density) or\r\n    map_has_key($value, typography) or\r\n    length($value) == 0\r\n  );\r\n}\r\n\r\n// Checks whether a given value corresponds to a legacy constructed theme.\r\n@function _mat-is-legacy-constructed-theme($value) {\r\n  @return type-of($value) == 'map' and map_get($value, '_is-legacy-theme');\r\n}\r\n\r\n// Gets the theme from the given value that is either already a theme, or a color configuration.\r\n// This handles the legacy case where developers pass a color configuration directly to the\r\n// theme mixin. Before we introduced the new pattern for constructing a theme, developers passed\r\n// the color configuration directly to the theme mixins. This can be still the case if developers\r\n// construct a theme manually and pass it to a theme. We support this for backwards compatibility.\r\n// TODO(devversion): remove this in the future. Constructing themes manually is rare,\r\n// and the code can be easily updated to the new API.\r\n@function _mat-legacy-get-theme($theme-or-color-config) {\r\n  @if _mat-is-theme-object($theme-or-color-config) {\r\n    @return $theme-or-color-config;\r\n  }\r\n  @return _mat-create-backwards-compatibility-theme((\r\n    _is-legacy-theme: true,\r\n    color: $theme-or-color-config\r\n  ));\r\n}\r\n\r\n\r\n\r\n// Whether duplication warnings should be disabled. Warnings enabled by default.\r\n$mat-theme-ignore-duplication-warnings: false !default;\r\n\r\n// Warning that will be printed if duplicated styles are generated by a theme.\r\n$_mat-theme-duplicate-warning: 'Read more about how style duplication can be avoided in a ' +\r\n  'dedicated guide. https://github.com/angular/components/blob/master/guides/duplicate-theming-styles.md';\r\n\r\n// These variable are not intended to be overridden externally. They use `!default` to\r\n// avoid being reset every time this file is imported.\r\n$_mat-theme-emitted-color: () !default;\r\n$_mat-theme-emitted-typography: () !default;\r\n$_mat-theme-emitted-density: () !default;\r\n\r\n// Checks if configurations that have been declared in the given theme have been generated\r\n// before. If so, warnings will be reported. This should notify developers in case duplicate\r\n// styles are accidentally generated due to wrong usage of the all-theme mixins.\r\n//\r\n// Additionally, this mixin controls the default value for the density configuration. By\r\n// default, density styles are generated at scale zero. If the same density styles would be\r\n// generated a second time though, the default value will change to avoid duplicate styles.\r\n//\r\n// The mixin keeps track of all configurations in a list that is scoped to the specified\r\n// id. This is necessary because a given theme can be passed to multiple disjoint theme mixins\r\n// (e.g. `angular-material-theme` and `angular-material-mdc-theme`) without causing any\r\n// style duplication.\r\n@mixin _mat-check-duplicate-theme-styles($theme-or-color-config, $id) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  $color-config: mat-get-color-config($theme);\r\n  $density-config: mat-get-density-config($theme);\r\n  $typography-config: mat-get-typography-config($theme);\r\n  // Lists of previous `color`, `density` and `typography` configurations.\r\n  $previous-color: map_get($_mat-theme-emitted-color, $id) or ();\r\n  $previous-typography: map_get($_mat-theme-emitted-typography, $id) or ();\r\n  $previous-density: map_get($_mat-theme-emitted-density, $id) or ();\r\n  // Whether duplicate legacy density styles would be generated.\r\n  $duplicate-legacy-density: false;\r\n\r\n  // Check if the color configuration has been generated before.\r\n  @if $color-config != null {\r\n    @if index($previous-color, $color-config) != null and\r\n        not $mat-theme-ignore-duplication-warnings {\r\n      @warn 'The same color styles are generated multiple times. ' +\r\n          $_mat-theme-duplicate-warning;\r\n    }\r\n    $previous-color: append($previous-color, $color-config);\r\n  }\r\n\r\n  // Check if the typography configuration has been generated before.\r\n  @if $typography-config != null {\r\n    @if index($previous-typography, $typography-config) != null and\r\n        not $mat-theme-ignore-duplication-warnings {\r\n      @warn 'The same typography styles are generated multiple times. ' +\r\n          $_mat-theme-duplicate-warning;\r\n    }\r\n    $previous-typography: append($previous-typography, $typography-config);\r\n  }\r\n\r\n  // Check if the density configuration has been generated before.\r\n  @if $density-config != null {\r\n    @if index($previous-density, $density-config) != null {\r\n      // Only report a warning if density styles would be duplicated for non-legacy theme\r\n      // definitions. For legacy themes, we have compatibility logic that avoids duplication\r\n      // of default density styles. We don't want to report a warning in those cases.\r\n      @if _mat-is-legacy-constructed-theme($theme) {\r\n        $duplicate-legacy-density: true;\r\n      }\r\n      @else if not $mat-theme-ignore-duplication-warnings {\r\n        @warn 'The same density styles are generated multiple times. ' +\r\n           $_mat-theme-duplicate-warning;\r\n      }\r\n    }\r\n    $previous-density: append($previous-density, $density-config);\r\n  }\r\n\r\n  $_mat-theme-emitted-color: map_merge(\r\n      $_mat-theme-emitted-color, ($id: $previous-color)) !global;\r\n  $_mat-theme-emitted-density: map_merge(\r\n      $_mat-theme-emitted-density, ($id: $previous-density)) !global;\r\n  $_mat-theme-emitted-typography: map_merge(\r\n      $_mat-theme-emitted-typography, ($id: $previous-typography)) !global;\r\n\r\n  // Optionally, consumers of this mixin can wrap contents inside so that nested\r\n  // duplicate style checks do not report another warning. e.g. if developers include\r\n  // the `angular-material-theme` mixin twice, only the top-level duplicate styles check\r\n  // should report a warning. Not all individual components should report a warning too.\r\n  $orig-mat-theme-ignore-duplication-warnings: $mat-theme-ignore-duplication-warnings;\r\n  $mat-theme-ignore-duplication-warnings: true !global;\r\n\r\n  // If duplicate default density styles would be generated for a legacy constructed theme,\r\n  // we adjust the density generation so that no density styles are generated by default.\r\n  // If no default density styles have been generated yet, we ensure that the styles\r\n  // are generated at root. For legacy themes our goal is to generate default density\r\n  // styles **once** and at root. This matches the old behavior where density styles were\r\n  // part of the base component styles (that did not use view encapsulation).\r\n  // TODO: Remove this compatibility logic when the legacy theming API is removed.\r\n  $_mat-density-generate-at-root: _mat-is-legacy-constructed-theme($theme) !global;\r\n  $_mat-density-generate-styles: not $duplicate-legacy-density !global;\r\n\r\n  @content;\r\n  $mat-theme-ignore-duplication-warnings: $orig-mat-theme-ignore-duplication-warnings !global;\r\n\r\n  $_mat-density-generate-at-root: false !global;\r\n  $_mat-density-generate-styles: true !global;\r\n}\r\n\r\n\r\n\r\n$mat-ripple-color-opacity: 0.1;\r\n\r\n@mixin mat-ripple() {\r\n\r\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\r\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\r\n  .mat-ripple {\r\n    overflow: hidden;\r\n\r\n    // By default, every ripple container should have position: relative in favor of creating an\r\n    // easy API for developers using the MatRipple directive.\r\n    position: relative;\r\n\r\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\r\n    // because we don't want all ripple containers to have their own layer since they're used in a\r\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\r\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\r\n    // text inside the element, but it isn't very well supported yet.\r\n    &:not(:empty) {\r\n      transform: translateZ(0);\r\n    }\r\n  }\r\n\r\n  .mat-ripple.mat-ripple-unbounded {\r\n    overflow: visible;\r\n  }\r\n\r\n  .mat-ripple-element {\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    pointer-events: none;\r\n\r\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\r\n    transform: scale(0);\r\n\r\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\r\n    @include cdk-high-contrast(active, off) {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n/* Colors for the ripple elements.*/\r\n@mixin mat-ripple-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map_get($config, foreground);\r\n  $foreground-base: map_get($foreground, base);\r\n\r\n  .mat-ripple-element {\r\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\r\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\r\n    @if (type-of($foreground-base) == color) {\r\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\r\n    }\r\n    @else {\r\n      background-color: $foreground-base;\r\n      opacity: $mat-ripple-color-opacity;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-ripple-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-ripple') {\r\n    $color: mat-get-color-config($theme);\r\n    @if $color != null {\r\n      @include mat-ripple-color($color);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\r\n@mixin mat-fill {\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  position: absolute;\r\n}\r\n\r\n\r\n/// Mixin that turns on strong focus indicators.\r\n///\r\n/// @example\r\n///   .my-app {\r\n///     @include mat-strong-focus-indicators($config);\r\n///   }\r\n@mixin mat-strong-focus-indicators($config: ()) {\r\n  // Default focus indicator config.\r\n  $default-config: (\r\n    border-style: solid,\r\n    border-width: 3px,\r\n    border-radius: 4px,\r\n  );\r\n\r\n  // Merge default config with user config.\r\n  $config: map-merge($default-config, $config);\r\n  $border-style: map-get($config, border-style);\r\n  $border-width: map-get($config, border-width);\r\n  $border-radius: map-get($config, border-radius);\r\n\r\n  // Base styles for focus indicators.\r\n  .mat-focus-indicator::before {\r\n    @include mat-fill();\r\n    box-sizing: border-box;\r\n    pointer-events: none;\r\n    border: $border-width $border-style transparent;\r\n    border-radius: $border-radius;\r\n  }\r\n\r\n  // By default, all focus indicators are flush with the bounding box of their\r\n  // host element. For particular elements (listed below), default inset/offset\r\n  // values are necessary to ensure that the focus indicator is sufficiently\r\n  // contrastive and renders appropriately.\r\n\r\n  .mat-focus-indicator.mat-flat-button::before,\r\n  .mat-focus-indicator.mat-raised-button::before,\r\n  .mat-focus-indicator.mat-fab::before,\r\n  .mat-focus-indicator.mat-mini-fab::before,\r\n  .mat-focus-indicator.mat-chip::before,\r\n  .mat-focus-indicator.mat-sort-header-container::before {\r\n    margin: -($border-width + 2px);\r\n  }\r\n\r\n  .mat-focus-indicator.mat-stroked-button::before,\r\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\r\n    margin: -($border-width + 3px);\r\n  }\r\n\r\n  .mat-focus-indicator.mat-tab-link::before,\r\n  .mat-focus-indicator.mat-tab-label::before {\r\n    margin: 5px;\r\n  }\r\n\r\n  // Render the focus indicator on focus. Defining a pseudo element's\r\n  // content will cause it to render.\r\n\r\n  // Checkboxes, radios, and slide toggles render focus indicators when the\r\n  // associated visually-hidden input is focused.\r\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\r\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\r\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\r\n\r\n  // For options, render the focus indicator when the class .mat-active\r\n  // is present.\r\n  .mat-focus-indicator.mat-option.mat-active::before,\r\n\r\n  // For calendar cells, render the focus indicator when the parent cell is\r\n  // focused.\r\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\r\n\r\n  // For all other components, render the focus indicator on focus.\r\n  .mat-focus-indicator:focus::before {\r\n    content: '';\r\n  }\r\n}\r\n\r\n// Mixin that applies the border color for the focus indicators.\r\n@mixin _mat-strong-focus-indicators-border-color($color) {\r\n  .mat-focus-indicator::before {\r\n    border-color: $color;\r\n  }\r\n}\r\n\r\n@mixin mat-strong-focus-indicators-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  @include _mat-strong-focus-indicators-border-color(mat-color(map_get($config, primary)));\r\n}\r\n\r\n/// Mixin that sets the color of the focus indicators.\r\n///\r\n/// @param {color|map} $theme-or-color\r\n///   If theme, focus indicators are set to the primary color of the theme. If\r\n///   color, focus indicators are set to that color.\r\n///\r\n/// @example\r\n///   .demo-dark-theme {\r\n///     @include mat-strong-focus-indicators-theme($dark-theme-map);\r\n///   }\r\n///\r\n/// @example\r\n///   .demo-red-theme {\r\n///     @include mat-strong-focus-indicators-theme(#f00);\r\n///   }\r\n/* stylelint-disable-next-line material/theme-mixin-api */\r\n@mixin mat-strong-focus-indicators-theme($theme-or-color) {\r\n  @if type-of($theme-or-color) != 'map' {\r\n    @include _mat-strong-focus-indicators-border-color($theme-or-color);\r\n  }\r\n  @else {\r\n    $theme: _mat-legacy-get-theme($theme-or-color);\r\n    @include _mat-check-duplicate-theme-styles($theme, 'mat-strong-focus-indicators') {\r\n      $color: mat-get-color-config($theme);\r\n      @if $color != null {\r\n        @include mat-strong-focus-indicators-color($color);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\r\n// pseudo element within is positioned relative to the host. Private mixin included within\r\n// `mat-core`.\r\n@mixin _mat-strong-focus-indicators-positioning() {\r\n  .mat-focus-indicator {\r\n    position: relative;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// Utility for fetching a nested value from a typography config.\r\n@function _mat-get-type-value($config, $level, $name) {\r\n  @return map-get(map-get($config, $level), $name);\r\n}\r\n\r\n// Gets the font size for a level inside a typography config.\r\n@function mat-font-size($config, $level) {\r\n  @return _mat-get-type-value($config, $level, font-size);\r\n}\r\n\r\n// Gets the line height for a level inside a typography config.\r\n@function mat-line-height($config, $level) {\r\n  @return _mat-get-type-value($config, $level, line-height);\r\n}\r\n\r\n// Gets the font weight for a level inside a typography config.\r\n@function mat-font-weight($config, $level) {\r\n  @return _mat-get-type-value($config, $level, font-weight);\r\n}\r\n\r\n// Gets the letter spacing for a level inside a typography config.\r\n@function mat-letter-spacing($config, $level) {\r\n  @return _mat-get-type-value($config, $level, letter-spacing);\r\n}\r\n\r\n// Gets the font-family from a typography config and removes the quotes around it.\r\n@function mat-font-family($config, $level: null) {\r\n  $font-family: map-get($config, font-family);\r\n\r\n  @if $level != null {\r\n    $font-family: _mat-get-type-value($config, $level, font-family);\r\n  }\r\n\r\n  // Guard against unquoting non-string values, because it's deprecated.\r\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\r\n}\r\n\r\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\r\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\r\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\r\n  // If any of the values are set to `inherit`, we can't use the shorthand\r\n  // so we fall back to passing in the individual properties.\r\n  @if ($font-size == inherit or\r\n       $font-weight == inherit or\r\n       $line-height == inherit or\r\n       $font-family == inherit or\r\n       $font-size == null or\r\n       $font-weight == null or\r\n       $line-height == null or\r\n       $font-family == null) {\r\n\r\n    font-size: $font-size;\r\n    font-weight: $font-weight;\r\n    line-height: $line-height;\r\n    font-family: $font-family;\r\n  }\r\n  @else {\r\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\r\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\r\n    // Sass from dividing the two values.\r\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\r\n  }\r\n}\r\n\r\n// Converts a typography level into CSS styles.\r\n@mixin mat-typography-level-to-styles($config, $level) {\r\n  $font-size: mat-font-size($config, $level);\r\n  $font-weight: mat-font-weight($config, $level);\r\n  $line-height: mat-line-height($config, $level);\r\n  $font-family: mat-font-family($config, $level);\r\n\r\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\r\n  letter-spacing: mat-letter-spacing($config, $level);\r\n}\r\n\r\n\r\n@mixin mat-option-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $background: map-get($config, background);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n\r\n  .mat-option {\r\n    color: mat-color($foreground, text);\r\n\r\n    &:hover:not(.mat-option-disabled),\r\n    &:focus:not(.mat-option-disabled) {\r\n      background: mat-color($background, hover);\r\n    }\r\n\r\n    // In multiple mode there is a checkbox to show that the option is selected.\r\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\r\n      background: mat-color($background, hover);\r\n    }\r\n\r\n    &.mat-active {\r\n      background: mat-color($background, hover);\r\n      color: mat-color($foreground, text);\r\n    }\r\n\r\n    &.mat-option-disabled {\r\n      color: mat-color($foreground, hint-text);\r\n    }\r\n  }\r\n\r\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\r\n    color: mat-color($primary, text);\r\n  }\r\n\r\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\r\n    color: mat-color($accent, text);\r\n  }\r\n\r\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\r\n    color: mat-color($warn, text);\r\n  }\r\n}\r\n\r\n@mixin mat-option-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-option {\r\n    font: {\r\n      family: mat-font-family($config);\r\n      size: mat-font-size($config, subheading-2);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-option-density($config-or-theme) {}\r\n\r\n@mixin mat-option-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-option') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-option-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-option-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-option-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-optgroup-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-optgroup-label {\r\n    color: mat-color($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-optgroup-disabled .mat-optgroup-label {\r\n    color: mat-color($foreground, hint-text);\r\n  }\r\n}\r\n\r\n@mixin mat-optgroup-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-optgroup-label {\r\n    @include mat-typography-level-to-styles($config, body-2);\r\n  }\r\n}\r\n\r\n@mixin _mat-optgroup-density($config-or-theme) {}\r\n\r\n@mixin mat-optgroup-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-optgroup') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-optgroup-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-optgroup-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-optgroup-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@mixin mat-pseudo-checkbox-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n\r\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\r\n  // this does not work well with elements layered on top of one another. To get around this we\r\n  // blend the colors together based on the base color and the theme background.\r\n  $white-30pct-opacity-on-dark: #686868;\r\n  $black-26pct-opacity-on-light: #b0b0b0;\r\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\r\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\r\n\r\n  .mat-pseudo-checkbox {\r\n    color: mat-color(map-get($config, foreground), secondary-text);\r\n\r\n    &::after {\r\n      color: mat-color($background, background);\r\n    }\r\n  }\r\n\r\n  .mat-pseudo-checkbox-disabled {\r\n    color: $disabled-color;\r\n  }\r\n\r\n  .mat-primary .mat-pseudo-checkbox-checked,\r\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\r\n    background: mat-color(map-get($config, primary));\r\n  }\r\n\r\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\r\n  // theme from their parent, rather than implementing their own theming, which is why we\r\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\r\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\r\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\r\n  .mat-pseudo-checkbox-checked,\r\n  .mat-pseudo-checkbox-indeterminate,\r\n  .mat-accent .mat-pseudo-checkbox-checked,\r\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\r\n    background: mat-color(map-get($config, accent));\r\n  }\r\n\r\n  .mat-warn .mat-pseudo-checkbox-checked,\r\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\r\n    background: mat-color(map-get($config, warn));\r\n  }\r\n\r\n  .mat-pseudo-checkbox-checked,\r\n  .mat-pseudo-checkbox-indeterminate {\r\n    &.mat-pseudo-checkbox-disabled {\r\n      background: $disabled-color;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-pseudo-checkbox-typography($config-or-theme) {}\r\n\r\n@mixin _mat-pseudo-checkbox-density($config-or-theme) {}\r\n\r\n@mixin mat-pseudo-checkbox-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-pseudo-checkbox-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-pseudo-checkbox-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-pseudo-checkbox-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// Represents a typography level from the Material design spec.\r\n@function mat-typography-level(\r\n  $font-size,\r\n  $line-height: $font-size,\r\n  $font-weight: 400,\r\n  $font-family: null,\r\n  $letter-spacing: normal) {\r\n\r\n  @return (\r\n    font-size: $font-size,\r\n    line-height: $line-height,\r\n    font-weight: $font-weight,\r\n    font-family: $font-family,\r\n    letter-spacing: $letter-spacing\r\n  );\r\n}\r\n\r\n// Represents a collection of typography levels.\r\n// Defaults come from https://material.io/guidelines/style/typography.html\r\n// Note: The spec doesn't mention letter spacing. The values here come from\r\n// eyeballing it until it looked exactly like the spec examples.\r\n@function mat-typography-config(\r\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\r\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\r\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\r\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\r\n  $display-1:     mat-typography-level(34px, 40px, 400),\r\n  $headline:      mat-typography-level(24px, 32px, 400),\r\n  $title:         mat-typography-level(20px, 32px, 500),\r\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\r\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\r\n  $body-2:        mat-typography-level(14px, 24px, 500),\r\n  $body-1:        mat-typography-level(14px, 20px, 400),\r\n  $caption:       mat-typography-level(12px, 20px, 400),\r\n  $button:        mat-typography-level(14px, 14px, 500),\r\n  // Line-height must be unit-less fraction of the font-size.\r\n  $input:         mat-typography-level(inherit, 1.125, 400)\r\n) {\r\n\r\n  // Declare an initial map with all of the levels.\r\n  $config: (\r\n    display-4:      $display-4,\r\n    display-3:      $display-3,\r\n    display-2:      $display-2,\r\n    display-1:      $display-1,\r\n    headline:       $headline,\r\n    title:          $title,\r\n    subheading-2:   $subheading-2,\r\n    subheading-1:   $subheading-1,\r\n    body-2:         $body-2,\r\n    body-1:         $body-1,\r\n    caption:        $caption,\r\n    button:         $button,\r\n    input:          $input,\r\n  );\r\n\r\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\r\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\r\n  @each $key, $level in $config {\r\n    @if map-get($level, font-family) == null {\r\n      $new-level: map-merge($level, (font-family: $font-family));\r\n      $config: map-merge($config, ($key: $new-level));\r\n    }\r\n  }\r\n\r\n  // Add the base font family to the config.\r\n  @return map-merge($config, (font-family: $font-family));\r\n}\r\n\r\n// Adds the base typography styles, based on a config.\r\n/* stylelint-disable-next-line material/theme-mixin-api */\r\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\r\n  .mat-h1, .mat-headline, #{$selector} h1 {\r\n    @include mat-typography-level-to-styles($config, headline);\r\n    margin: 0 0 16px;\r\n  }\r\n\r\n  .mat-h2, .mat-title, #{$selector} h2 {\r\n    @include mat-typography-level-to-styles($config, title);\r\n    margin: 0 0 16px;\r\n  }\r\n\r\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\r\n    @include mat-typography-level-to-styles($config, subheading-2);\r\n    margin: 0 0 16px;\r\n  }\r\n\r\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\r\n    @include mat-typography-level-to-styles($config, subheading-1);\r\n    margin: 0 0 16px;\r\n  }\r\n\r\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\r\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\r\n  // and h6 at 0.67em.\r\n  .mat-h5, #{$selector} h5 {\r\n    @include mat-typography-font-shorthand(\r\n       // calc is used here to support css variables\r\n      calc(#{mat-font-size($config, body-1)} * 0.83),\r\n      mat-font-weight($config, body-1),\r\n      mat-line-height($config, body-1),\r\n      mat-font-family($config, body-1)\r\n    );\r\n\r\n    margin: 0 0 12px;\r\n  }\r\n\r\n  .mat-h6, #{$selector} h6 {\r\n    @include mat-typography-font-shorthand(\r\n       // calc is used here to support css variables\r\n      calc(#{mat-font-size($config, body-1)} * 0.67),\r\n      mat-font-weight($config, body-1),\r\n      mat-line-height($config, body-1),\r\n      mat-font-family($config, body-1)\r\n    );\r\n\r\n    margin: 0 0 12px;\r\n  }\r\n\r\n  .mat-body-strong, .mat-body-2 {\r\n    @include mat-typography-level-to-styles($config, body-2);\r\n  }\r\n\r\n  .mat-body, .mat-body-1, #{$selector} {\r\n    @include mat-typography-level-to-styles($config, body-1);\r\n\r\n    p {\r\n      margin: 0 0 12px;\r\n    }\r\n  }\r\n\r\n  .mat-small, .mat-caption {\r\n    @include mat-typography-level-to-styles($config, caption);\r\n  }\r\n\r\n  .mat-display-4, #{$selector} .mat-display-4 {\r\n    @include mat-typography-level-to-styles($config, display-4);\r\n    margin: 0 0 56px;\r\n  }\r\n\r\n  .mat-display-3, #{$selector} .mat-display-3 {\r\n    @include mat-typography-level-to-styles($config, display-3);\r\n    margin: 0 0 64px;\r\n  }\r\n\r\n  .mat-display-2, #{$selector} .mat-display-2 {\r\n    @include mat-typography-level-to-styles($config, display-2);\r\n    margin: 0 0 64px;\r\n  }\r\n\r\n  .mat-display-1, #{$selector} .mat-display-1 {\r\n    @include mat-typography-level-to-styles($config, display-1);\r\n    margin: 0 0 64px;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-autocomplete-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $background: map-get($config, background);\r\n\r\n  .mat-autocomplete-panel {\r\n    @include _mat-theme-overridable-elevation(4, $config);\r\n    background: mat-color($background, card);\r\n    color: mat-color($foreground, text);\r\n\r\n    // Selected options in autocompletes should not be gray, but we\r\n    // only want to override the background for selected options if\r\n    // they are *not* in hover or focus state. This change has to be\r\n    // made here because base option styles are shared between the\r\n    // autocomplete and the select.\r\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\r\n      background: mat-color($background, card);\r\n\r\n      &:not(.mat-option-disabled) {\r\n        color: mat-color($foreground, text);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-autocomplete-typography($config-or-theme) {}\r\n\r\n@mixin _mat-autocomplete-density($config-or-theme) {}\r\n\r\n@mixin mat-autocomplete-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-autocomplete-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-autocomplete-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-autocomplete-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n// This contains all of the styles for the badge\r\n// rather than just the color/theme because of\r\n// no style sheet support for directives.\r\n\r\n\r\n\r\n\r\n\r\n\r\n$mat-badge-font-size: 12px;\r\n$mat-badge-font-weight: 600;\r\n$mat-badge-default-size: 22px !default;\r\n$mat-badge-small-size: $mat-badge-default-size - 6;\r\n$mat-badge-large-size: $mat-badge-default-size + 6;\r\n\r\n// Mixin for building offset given different sizes\r\n@mixin _mat-badge-size($size) {\r\n  .mat-badge-content {\r\n    width: $size;\r\n    height: $size;\r\n    line-height: $size;\r\n  }\r\n\r\n  &.mat-badge-above {\r\n    .mat-badge-content {\r\n      top: -$size / 2;\r\n    }\r\n  }\r\n\r\n  &.mat-badge-below {\r\n    .mat-badge-content {\r\n      bottom: -$size / 2;\r\n    }\r\n  }\r\n\r\n  &.mat-badge-before {\r\n    .mat-badge-content {\r\n      left: -$size;\r\n    }\r\n  }\r\n\r\n  [dir='rtl'] &.mat-badge-before {\r\n    .mat-badge-content {\r\n      left: auto;\r\n      right: -$size;\r\n    }\r\n  }\r\n\r\n  &.mat-badge-after {\r\n    .mat-badge-content {\r\n      right: -$size;\r\n    }\r\n  }\r\n\r\n  [dir='rtl'] &.mat-badge-after {\r\n    .mat-badge-content {\r\n      right: auto;\r\n      left: -$size;\r\n    }\r\n  }\r\n\r\n  &.mat-badge-overlap {\r\n    &.mat-badge-before {\r\n      .mat-badge-content {\r\n        left: -$size / 2;\r\n      }\r\n    }\r\n\r\n    [dir='rtl'] &.mat-badge-before {\r\n      .mat-badge-content {\r\n        left: auto;\r\n        right: -$size / 2;\r\n      }\r\n    }\r\n\r\n    &.mat-badge-after {\r\n      .mat-badge-content {\r\n        right: -$size / 2;\r\n      }\r\n    }\r\n\r\n    [dir='rtl'] &.mat-badge-after {\r\n      .mat-badge-content {\r\n        right: auto;\r\n        left: -$size / 2;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-badge-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $primary: map-get($config, primary);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-badge-content {\r\n    color: mat-color($primary, default-contrast);\r\n    background: mat-color($primary);\r\n\r\n    @include cdk-high-contrast(active, off) {\r\n      outline: solid 1px;\r\n      border-radius: 0;\r\n    }\r\n  }\r\n\r\n  .mat-badge-accent {\r\n    .mat-badge-content {\r\n      background: mat-color($accent);\r\n      color: mat-color($accent, default-contrast);\r\n    }\r\n  }\r\n\r\n  .mat-badge-warn {\r\n    .mat-badge-content {\r\n      color: mat-color($warn, default-contrast);\r\n      background: mat-color($warn);\r\n    }\r\n  }\r\n\r\n  .mat-badge {\r\n    position: relative;\r\n  }\r\n\r\n  .mat-badge-hidden {\r\n    .mat-badge-content {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .mat-badge-disabled {\r\n    .mat-badge-content {\r\n      $app-background: mat-color($background, 'background');\r\n      $badge-color: mat-color($foreground, disabled-button);\r\n\r\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\r\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\r\n      // we convert it into a solid color by taking the opacity from the rgba value and using\r\n      // the value to determine the percentage of the background to put into foreground when\r\n      // mixing the colors together.\r\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\r\n        $badge-opacity: opacity($badge-color);\r\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\r\n      }\r\n      @else {\r\n        background: $badge-color;\r\n      }\r\n\r\n      color: mat-color($foreground, disabled-text);\r\n    }\r\n  }\r\n\r\n  .mat-badge-content {\r\n    position: absolute;\r\n    text-align: center;\r\n    display: inline-block;\r\n    border-radius: 50%;\r\n    transition: transform 200ms ease-in-out;\r\n    transform: scale(0.6);\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .ng-animate-disabled .mat-badge-content,\r\n  .mat-badge-content._mat-animation-noopable {\r\n    transition: none;\r\n  }\r\n\r\n  // The active class is added after the element is added\r\n  // so it can animate scale to default\r\n  .mat-badge-content.mat-badge-active {\r\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\r\n    transform: none;\r\n  }\r\n\r\n  .mat-badge-small {\r\n    @include _mat-badge-size($mat-badge-small-size);\r\n  }\r\n  .mat-badge-medium {\r\n    @include _mat-badge-size($mat-badge-default-size);\r\n  }\r\n  .mat-badge-large {\r\n    @include _mat-badge-size($mat-badge-large-size);\r\n  }\r\n}\r\n\r\n@mixin mat-badge-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-badge-content {\r\n    font-weight: $mat-badge-font-weight;\r\n    font-size: $mat-badge-font-size;\r\n    font-family: mat-font-family($config);\r\n  }\r\n\r\n  .mat-badge-small .mat-badge-content {\r\n    // Set the font size to 75% of the original.\r\n    font-size: $mat-badge-font-size * 0.75;\r\n  }\r\n\r\n  .mat-badge-large .mat-badge-content {\r\n    font-size: $mat-badge-font-size * 2;\r\n  }\r\n}\r\n\r\n@mixin _mat-badge-density($config-or-theme) {}\r\n\r\n@mixin mat-badge-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-badge') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-badge-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-badge-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-badge-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-bottom-sheet-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-bottom-sheet-container {\r\n    @include _mat-theme-elevation(16, $config);\r\n    background: mat-color($background, dialog);\r\n    color: mat-color($foreground, text);\r\n  }\r\n}\r\n\r\n@mixin mat-bottom-sheet-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-bottom-sheet-container {\r\n    @include mat-typography-level-to-styles($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _mat-bottom-sheet-density($config-or-theme) {}\r\n\r\n@mixin mat-bottom-sheet-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-bottom-sheet-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-bottom-sheet-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-bottom-sheet-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n$_mat-button-ripple-opacity: 0.1;\r\n\r\n// Applies a focus style to an mat-button element for each of the supported palettes.\r\n@mixin _mat-button-focus-overlay-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n\r\n  &.mat-primary .mat-button-focus-overlay {\r\n    background-color: mat-color($primary);\r\n  }\r\n\r\n  &.mat-accent .mat-button-focus-overlay {\r\n    background-color: mat-color($accent);\r\n  }\r\n\r\n  &.mat-warn .mat-button-focus-overlay {\r\n    background-color: mat-color($warn);\r\n  }\r\n\r\n  &.mat-button-disabled .mat-button-focus-overlay {\r\n    background-color: transparent;\r\n  }\r\n}\r\n\r\n// Applies the background color for a ripple. If the value provided is not a Sass color,\r\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\r\n// on a CSS variable, we instead add the opacity directly to the ripple element.\r\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\r\n  $background-color: mat-color($palette, $hue, $opacity);\r\n  background-color: $background-color;\r\n  @if (type-of($background-color) != color) {\r\n    opacity: $opacity;\r\n  }\r\n}\r\n\r\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\r\n  $primary: map-get($theme, primary);\r\n  $accent: map-get($theme, accent);\r\n  $warn: map-get($theme, warn);\r\n\r\n  &.mat-primary .mat-ripple-element {\r\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\r\n  }\r\n\r\n  &.mat-accent .mat-ripple-element {\r\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\r\n  }\r\n\r\n  &.mat-warn .mat-ripple-element {\r\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\r\n  }\r\n}\r\n\r\n// Applies a property to an mat-button element for each of the supported palettes.\r\n@mixin _mat-button-theme-property($theme, $property, $hue) {\r\n  $primary: map-get($theme, primary);\r\n  $accent: map-get($theme, accent);\r\n  $warn: map-get($theme, warn);\r\n  $background: map-get($theme, background);\r\n  $foreground: map-get($theme, foreground);\r\n\r\n  &.mat-primary {\r\n    #{$property}: mat-color($primary, $hue);\r\n  }\r\n  &.mat-accent {\r\n    #{$property}: mat-color($accent, $hue);\r\n  }\r\n  &.mat-warn {\r\n    #{$property}: mat-color($warn, $hue);\r\n  }\r\n\r\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\r\n    &.mat-button-disabled {\r\n      $palette: if($property == 'color', $foreground, $background);\r\n      #{$property}: mat-color($palette, disabled-button);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-button-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-button, .mat-icon-button, .mat-stroked-button {\r\n    // Buttons without a background color should inherit the font color. This is necessary to\r\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\r\n    // that those buttons are always placed inside of containers with the default background\r\n    // color of the theme (e.g. themed toolbars).\r\n    color: inherit;\r\n    background: transparent;\r\n\r\n    @include _mat-button-theme-property($config, 'color', text);\r\n    @include _mat-button-focus-overlay-color($config);\r\n\r\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\r\n    // are matching with the current theme palette and are in contrast to the background color\r\n    // (e.g in themed toolbars).\r\n    .mat-ripple-element {\r\n      opacity: $_mat-button-ripple-opacity;\r\n      background-color: currentColor;\r\n    }\r\n  }\r\n\r\n  .mat-button-focus-overlay {\r\n    background: map_get($foreground, base);\r\n  }\r\n\r\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\r\n  // order of the theme styles and the button reset may end up resetting this as well.\r\n  .mat-stroked-button:not(.mat-button-disabled) {\r\n    border-color: mat-color($foreground, divider);\r\n  }\r\n\r\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\r\n    // Default font and background color when not using any color palette.\r\n    color: mat-color($foreground, text);\r\n    background-color: mat-color($background, raised-button);\r\n\r\n    @include _mat-button-theme-property($config, 'color', default-contrast);\r\n    @include _mat-button-theme-property($config, 'background-color', default);\r\n    @include _mat-button-ripple-color($config, default-contrast);\r\n  }\r\n\r\n  .mat-stroked-button, .mat-flat-button {\r\n    @include _mat-theme-overridable-elevation(0, $config);\r\n  }\r\n\r\n  .mat-raised-button {\r\n    @include _mat-theme-overridable-elevation(2, $config);\r\n\r\n    &:not(.mat-button-disabled):active {\r\n      @include _mat-theme-overridable-elevation(8, $config);\r\n    }\r\n\r\n    &.mat-button-disabled {\r\n      @include _mat-theme-overridable-elevation(0, $config);\r\n    }\r\n  }\r\n\r\n  .mat-fab, .mat-mini-fab {\r\n    @include _mat-theme-overridable-elevation(6, $config);\r\n\r\n    &:not(.mat-button-disabled):active {\r\n      @include _mat-theme-overridable-elevation(12, $config);\r\n    }\r\n\r\n    &.mat-button-disabled {\r\n      @include _mat-theme-overridable-elevation(0, $config);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-button-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\r\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\r\n    font: {\r\n      family: mat-font-family($config, button);\r\n      size: mat-font-size($config, button);\r\n      weight: mat-font-weight($config, button);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-button-density($config-or-theme) {}\r\n\r\n@mixin mat-button-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-button') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-button-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-button-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-button-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Taken from mat-density with small modifications to not rely on the new Sass module\r\n// system, and to support arbitrary properties in a density configuration.\r\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-density\r\n\r\n$_mat-density-interval: 4px !default;\r\n$_mat-density-minimum-scale: minimum !default;\r\n$_mat-density-maximum-scale: maximum !default;\r\n$_mat-density-supported-scales: (default, minimum, maximum) !default;\r\n$_mat-density-default-scale: 0 !default;\r\n\r\n// Whether density should be generated at root. This will be temporarily set to `true`\r\n// whenever density styles for legacy themes are generated.\r\n$_mat-density-generate-at-root: false;\r\n// Whether density styles should be generated. This will be temporarily set to `false` if\r\n// duplicate density styles for a legacy theme would be generated. For legacy themes,\r\n// we always generate the default density **only once** at root.\r\n$_mat-density-generate-styles: true;\r\n\r\n// Mixin that can be used to wrap density styles of given components. The mixin will\r\n// move the density styles to root if the `$_mat-density-generate-at-root` global variable\r\n// is set. If `$_mat-density-generate-styles` is set to `false`, generation of density\r\n// styles wrapped in this mixin is skipped. This mixin exists to improve backwards compatibility\r\n// of the new theming API where density styles are included as part of themes. Previously,\r\n// density styles of components were part of their base styles. With the new API, they are\r\n// part of the theming system. The `<..>-theme` mixins generate density by default unless\r\n// the density configuration is explicitly specified as per new API. This means, that projects\r\n// using `<..>-theme` mixins for separate themes (like `.dark-theme`) will cause duplicate\r\n// density styles. This is breaking as it increases specificity of density styles. This mixin\r\n// provides an API to control generation of density styles so that we can ensure they are only\r\n// created *once* and at root.\r\n@mixin _mat-density-legacy-compatibility() {\r\n  @if $_mat-density-generate-styles and $_mat-density-generate-at-root {\r\n    @at-root {\r\n      @content;\r\n    }\r\n  }\r\n  @else if $_mat-density-generate-styles {\r\n    @content;\r\n  }\r\n}\r\n\r\n@function _mat-density-prop-value($density-config, $density-scale, $property-name) {\r\n  @if (type-of($density-scale) == 'string' and\r\n      index($list: $_mat-density-supported-scales, $value: $density-scale) == null) {\r\n    @error 'mat-density: Supported density scales #{$_mat-density-supported-scales}, '  +\r\n      'but received #{$density-scale}.';\r\n  }\r\n\r\n  $value: null;\r\n  $property-scale-map: map_get($density-config, $property-name);\r\n\r\n  @if map_has_key($property-scale-map, $density-scale) {\r\n    $value: map_get($property-scale-map, $density-scale);\r\n  }\r\n  @else {\r\n    $value: map_get($property-scale-map, default) + $density-scale * $_mat-density-interval;\r\n  }\r\n\r\n  $min-value: map_get($property-scale-map, $_mat-density-minimum-scale);\r\n  $max-value: map_get($property-scale-map, $_mat-density-maximum-scale);\r\n\r\n  @if ($value < $min-value or $value > $max-value) {\r\n    @error 'mat-density: #{$property-name} must be between #{$min-value} and ' +\r\n      '#{$max-value} (inclusive), but received #{$value}.';\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n$mat-button-toggle-standard-height: 48px !default;\r\n// Minimum height for highest density can vary based on the content that developers\r\n// project into button-toggle's. We use a minimum of `24px` though because commonly\r\n// icons or text are displayed. Icons by default have a size of `24px`.\r\n$mat-button-toggle-standard-minimum-height: 24px !default;\r\n$mat-button-toggle-standard-maximum-height: $mat-button-toggle-standard-height !default;\r\n\r\n$mat-button-toggle-standard-density-config: (\r\n  height: (\r\n    default: $mat-button-toggle-standard-height,\r\n    maximum: $mat-button-toggle-standard-maximum-height,\r\n    minimum: $mat-button-toggle-standard-minimum-height,\r\n  )\r\n) !default;\r\n\r\n\r\n@mixin mat-button-toggle-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $background: map-get($config, background);\r\n  $divider-color: mat-color($foreground, divider);\r\n\r\n  .mat-button-toggle-standalone,\r\n  .mat-button-toggle-group {\r\n    @include _mat-theme-elevation(2, $config);\r\n  }\r\n\r\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\r\n  .mat-button-toggle-group-appearance-standard {\r\n    box-shadow: none;\r\n  }\r\n\r\n  .mat-button-toggle {\r\n    color: mat-color($foreground, hint-text);\r\n\r\n    .mat-button-toggle-focus-overlay {\r\n      background-color: mat-color($background, focused-button);\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-appearance-standard {\r\n    color: mat-color($foreground, text);\r\n    background: mat-color($background, card);\r\n\r\n    .mat-button-toggle-focus-overlay {\r\n      background-color: mat-color($background, focused-button, 1);\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\r\n    border-left: solid 1px $divider-color;\r\n  }\r\n\r\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\r\n    border-left: none;\r\n    border-right: solid 1px $divider-color;\r\n  }\r\n\r\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\r\n    .mat-button-toggle + .mat-button-toggle {\r\n      border-left: none;\r\n      border-right: none;\r\n      border-top: solid 1px $divider-color;\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-checked {\r\n    background-color: mat-color($background, selected-button);\r\n    color: mat-color($foreground, secondary-text);\r\n\r\n    &.mat-button-toggle-appearance-standard {\r\n      color: mat-color($foreground, text);\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-disabled {\r\n    color: mat-color($foreground, disabled-button);\r\n    background-color: mat-color($background, disabled-button-toggle);\r\n\r\n    &.mat-button-toggle-appearance-standard {\r\n      background: mat-color($background, card);\r\n    }\r\n\r\n    &.mat-button-toggle-checked {\r\n      background-color: mat-color($background, selected-disabled-button);\r\n    }\r\n  }\r\n\r\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\r\n  .mat-button-toggle-group-appearance-standard {\r\n    border: solid 1px $divider-color;\r\n  }\r\n}\r\n\r\n@mixin mat-button-toggle-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-button-toggle {\r\n    font-family: mat-font-family($config);\r\n  }\r\n}\r\n\r\n@mixin _mat-button-toggle-density($config-or-theme) {\r\n  $density-scale: mat-get-density-config($config-or-theme);\r\n  $standard-height: _mat-density-prop-value(\r\n      $mat-button-toggle-standard-density-config, $density-scale, height);\r\n\r\n  @include _mat-density-legacy-compatibility() {\r\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\r\n      line-height: $standard-height;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-button-toggle-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-button-toggle-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-button-toggle-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-button-toggle-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-card-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-card {\r\n    @include _mat-theme-overridable-elevation(1, $config);\r\n    background: mat-color($background, card);\r\n    color: mat-color($foreground, text);\r\n\r\n    // Needs extra specificity to be able to override the elevation selectors.\r\n    &.mat-card-flat {\r\n      @include _mat-theme-overridable-elevation(0, $config);\r\n    }\r\n  }\r\n\r\n  .mat-card-subtitle {\r\n    color: mat-color($foreground, secondary-text);\r\n  }\r\n}\r\n\r\n@mixin mat-card-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-card {\r\n    font-family: mat-font-family($config);\r\n  }\r\n\r\n  .mat-card-title {\r\n    font: {\r\n      size: mat-font-size($config, headline);\r\n      weight: mat-font-weight($config, title);\r\n    }\r\n  }\r\n\r\n  .mat-card-header .mat-card-title {\r\n    font-size: mat-font-size($config, title);\r\n  }\r\n\r\n  .mat-card-subtitle,\r\n  .mat-card-content {\r\n    font-size: mat-font-size($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _mat-card-density($config-or-theme) {}\r\n\r\n@mixin mat-card-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-card') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-card-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-card-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-card-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-checkbox-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n\r\n  // The color of the checkbox's checkmark / mixedmark.\r\n  $checkbox-mark-color: mat-color($background, background);\r\n\r\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\r\n  // this does not work well with elements layered on top of one another. To get around this we\r\n  // blend the colors together based on the base color and the theme background.\r\n  $white-30pct-opacity-on-dark: #686868;\r\n  $black-26pct-opacity-on-light: #b0b0b0;\r\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\r\n\r\n  .mat-checkbox-frame {\r\n    border-color: mat-color($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-checkbox-checkmark {\r\n    fill: $checkbox-mark-color;\r\n  }\r\n\r\n  .mat-checkbox-checkmark-path {\r\n    // !important is needed here because a stroke must be set as an\r\n    // attribute on the SVG in order for line animation to work properly.\r\n    stroke: $checkbox-mark-color !important;\r\n  }\r\n\r\n  .mat-checkbox-mixedmark {\r\n    background-color: $checkbox-mark-color;\r\n  }\r\n\r\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\r\n    &.mat-primary .mat-checkbox-background {\r\n      background-color: mat-color($primary);\r\n    }\r\n\r\n    &.mat-accent .mat-checkbox-background {\r\n      background-color: mat-color($accent);\r\n    }\r\n\r\n    &.mat-warn .mat-checkbox-background {\r\n      background-color: mat-color($warn);\r\n    }\r\n  }\r\n\r\n  .mat-checkbox-disabled {\r\n    &.mat-checkbox-checked,\r\n    &.mat-checkbox-indeterminate {\r\n      .mat-checkbox-background {\r\n        background-color: $disabled-color;\r\n      }\r\n    }\r\n\r\n    &:not(.mat-checkbox-checked) {\r\n      .mat-checkbox-frame {\r\n        border-color: $disabled-color;\r\n      }\r\n    }\r\n\r\n    .mat-checkbox-label {\r\n      color: mat-color($foreground, secondary-text);\r\n    }\r\n  }\r\n\r\n  // Switch this to a solid color since we're using `opacity`\r\n  // to control how opaque the ripple should be.\r\n  .mat-checkbox .mat-ripple-element {\r\n    background-color: map_get(map-get($config, foreground), base);\r\n  }\r\n\r\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\r\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\r\n    &.mat-primary .mat-ripple-element {\r\n      background: mat-color($primary);\r\n    }\r\n\r\n    &.mat-accent .mat-ripple-element {\r\n      background: mat-color($accent);\r\n    }\r\n\r\n    &.mat-warn .mat-ripple-element {\r\n      background: mat-color($warn);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-checkbox-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-checkbox {\r\n    font-family: mat-font-family($config);\r\n  }\r\n\r\n  // TODO(kara): Remove this style when fixing vertical baseline\r\n  .mat-checkbox-layout .mat-checkbox-label {\r\n    line-height: mat-line-height($config, body-2);\r\n  }\r\n}\r\n\r\n@mixin _mat-checkbox-density($config-or-theme) {}\r\n\r\n@mixin mat-checkbox-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-checkbox') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-checkbox-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-checkbox-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-checkbox-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n$mat-chip-remove-font-size: 18px;\r\n\r\n@mixin _mat-chip-element-color($foreground, $background) {\r\n  background-color: $background;\r\n  color: $foreground;\r\n\r\n  .mat-chip-remove {\r\n    color: $foreground;\r\n    opacity: 0.4;\r\n  }\r\n}\r\n\r\n\r\n// Applies the background color for a ripple element.\r\n// If the color value provided is not a Sass color,\r\n// we assume that we've been given a CSS variable.\r\n// Since we can't perform alpha-blending on a CSS variable,\r\n// we instead add the opacity directly to the ripple element.\r\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\r\n  $background-color: mat-color($palette, $default-contrast, $opacity);\r\n  background-color: $background-color;\r\n  @if (type-of($background-color) != color) {\r\n    opacity: $opacity;\r\n  }\r\n}\r\n\r\n@mixin _mat-chip-theme-color($palette) {\r\n  @include _mat-chip-element-color(mat-color($palette, default-contrast), mat-color($palette));\r\n\r\n  .mat-ripple-element {\r\n    @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\r\n  }\r\n}\r\n\r\n@mixin mat-chips-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  $unselected-background: mat-color($background, unselected-chip);\r\n  $unselected-foreground: mat-color($foreground, text);\r\n\r\n  .mat-chip.mat-standard-chip {\r\n    @include _mat-chip-element-color($unselected-foreground, $unselected-background);\r\n\r\n    &:not(.mat-chip-disabled) {\r\n      &:active {\r\n        @include _mat-theme-elevation(3, $config);\r\n      }\r\n\r\n      .mat-chip-remove:hover {\r\n        opacity: 0.54;\r\n      }\r\n    }\r\n\r\n    &.mat-chip-disabled {\r\n      opacity: 0.4;\r\n    }\r\n\r\n    &::after {\r\n      background: map_get($foreground, base);\r\n    }\r\n  }\r\n\r\n  .mat-chip.mat-standard-chip.mat-chip-selected {\r\n    &.mat-primary {\r\n      @include _mat-chip-theme-color($primary);\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _mat-chip-theme-color($warn);\r\n    }\r\n\r\n    &.mat-accent {\r\n      @include _mat-chip-theme-color($accent);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-chips-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-chip {\r\n    font-size: mat-font-size($config, body-2);\r\n    font-weight: mat-font-weight($config, body-2);\r\n\r\n    .mat-chip-trailing-icon.mat-icon,\r\n    .mat-chip-remove.mat-icon {\r\n      font-size: $mat-chip-remove-font-size;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-chips-density($config-or-theme) {}\r\n\r\n@mixin mat-chips-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-chips') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-chips-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-chips-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-chips-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-divider-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-divider {\r\n    border-top-color: mat-color($foreground, divider);\r\n  }\r\n\r\n  .mat-divider-vertical {\r\n    border-right-color: mat-color($foreground, divider);\r\n  }\r\n}\r\n\r\n@mixin mat-divider-typography($config-or-theme) {}\r\n\r\n@mixin _mat-divider-density($config-or-theme) {}\r\n\r\n@mixin mat-divider-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-divider') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-divider-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-divider-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-divider-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-table-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-table {\r\n    background: mat-color($background, 'card');\r\n  }\r\n\r\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\r\n  mat-header-row, mat-row, mat-footer-row,\r\n  [mat-header-row], [mat-row], [mat-footer-row],\r\n  .mat-table-sticky {\r\n    background: inherit;\r\n  }\r\n\r\n  mat-row, mat-header-row, mat-footer-row,\r\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\r\n    border-bottom-color: mat-color($foreground, divider);\r\n  }\r\n\r\n  .mat-header-cell {\r\n    color: mat-color($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-cell, .mat-footer-cell {\r\n    color: mat-color($foreground, text);\r\n  }\r\n}\r\n\r\n@mixin mat-table-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-table {\r\n    font-family: mat-font-family($config);\r\n  }\r\n\r\n  .mat-header-cell {\r\n    font-size: mat-font-size($config, caption);\r\n    font-weight: mat-font-weight($config, body-2);\r\n  }\r\n\r\n  .mat-cell, .mat-footer-cell {\r\n    font-size: mat-font-size($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _mat-table-density($config-or-theme) {}\r\n\r\n@mixin mat-table-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-table') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-table-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-table-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-table-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n$mat-datepicker-selected-today-box-shadow-width: 1px;\r\n$mat-datepicker-selected-fade-amount: 0.6;\r\n$mat-datepicker-range-fade-amount: 0.2;\r\n$mat-datepicker-today-fade-amount: 0.2;\r\n$mat-calendar-body-font-size: 13px !default;\r\n$mat-calendar-weekday-table-font-size: 11px !default;\r\n\r\n@mixin _mat-datepicker-color($palette) {\r\n  @include mat-date-range-colors(\r\n    mat-color($palette, default, $mat-datepicker-range-fade-amount));\r\n\r\n  .mat-calendar-body-selected {\r\n    background-color: mat-color($palette);\r\n    color: mat-color($palette, default-contrast);\r\n  }\r\n\r\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\r\n    $background: mat-color($palette);\r\n\r\n    @if (type-of($background) == color) {\r\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\r\n    }\r\n    @else {\r\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\r\n      // fall back to fading the content out via `opacity`.\r\n      opacity: $mat-datepicker-today-fade-amount;\r\n    }\r\n  }\r\n\r\n  .mat-calendar-body-today.mat-calendar-body-selected {\r\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\r\n                mat-color($palette, default-contrast);\r\n  }\r\n}\r\n\r\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\r\n@mixin _mat-datepicker-unselected-cell {\r\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin mat-datepicker-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $background: map-get($config, background);\r\n  $disabled-color: mat-color($foreground, disabled-text);\r\n\r\n  .mat-calendar-arrow {\r\n    border-top-color: mat-color($foreground, icon);\r\n  }\r\n\r\n  // The prev/next buttons need a bit more specificity to\r\n  // avoid being overwritten by the .mat-icon-button.\r\n  .mat-datepicker-toggle,\r\n  .mat-datepicker-content .mat-calendar-next-button,\r\n  .mat-datepicker-content .mat-calendar-previous-button {\r\n    color: mat-color($foreground, icon);\r\n  }\r\n\r\n  .mat-calendar-table-header {\r\n    color: mat-color($foreground, hint-text);\r\n  }\r\n\r\n  .mat-calendar-table-header-divider::after {\r\n    background: mat-color($foreground, divider);\r\n  }\r\n\r\n  .mat-calendar-body-label {\r\n    color: mat-color($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-calendar-body-cell-content,\r\n  .mat-date-range-input-separator {\r\n    color: mat-color($foreground, text);\r\n    border-color: transparent;\r\n  }\r\n\r\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\r\n    @include _mat-datepicker-unselected-cell {\r\n      color: $disabled-color;\r\n    }\r\n  }\r\n\r\n  .mat-form-field-disabled .mat-date-range-input-separator {\r\n    color: $disabled-color;\r\n  }\r\n\r\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\r\n  .cdk-keyboard-focused .mat-calendar-body-active,\r\n  .cdk-program-focused .mat-calendar-body-active {\r\n    & > .mat-calendar-body-cell-content {\r\n      @include _mat-datepicker-unselected-cell {\r\n        background-color: mat-color($background, hover);\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-calendar-body-in-preview {\r\n    $divider-color: mat-color($foreground, divider);\r\n\r\n    @if type-of($divider-color) == color {\r\n      // The divider color is set under the assumption that it'll be used\r\n      // for a solid border, but because we're using a dashed border for the\r\n      // preview range, we need to bump its opacity to ensure that it's visible.\r\n      color: rgba($divider-color, min(opacity($divider-color) * 2, 1));\r\n    }\r\n    @else {\r\n      color: $divider-color;\r\n    }\r\n  }\r\n\r\n  .mat-calendar-body-today {\r\n    @include _mat-datepicker-unselected-cell {\r\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\r\n      // so we use the hint color.\r\n      border-color: mat-color($foreground, hint-text);\r\n    }\r\n  }\r\n\r\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\r\n    @include _mat-datepicker-unselected-cell {\r\n      $color: mat-color($foreground, hint-text);\r\n\r\n      @if (type-of($color) == color) {\r\n        border-color: fade-out($color, $mat-datepicker-today-fade-amount);\r\n      }\r\n      @else {\r\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\r\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\r\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\r\n        // to it already and we don't want them to stack on top of each other.\r\n        opacity: 0.5;\r\n      }\r\n    }\r\n  }\r\n\r\n  @include _mat-datepicker-color(map-get($config, primary));\r\n\r\n  .mat-datepicker-content {\r\n    @include _mat-theme-elevation(4, $config);\r\n    background-color: mat-color($background, card);\r\n    color: mat-color($foreground, text);\r\n\r\n    &.mat-accent {\r\n      @include _mat-datepicker-color(map-get($config, accent));\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _mat-datepicker-color(map-get($config, warn));\r\n    }\r\n  }\r\n\r\n  .mat-datepicker-content-touch {\r\n    @include _mat-theme-elevation(0, $config);\r\n  }\r\n\r\n  .mat-datepicker-toggle-active {\r\n    color: mat-color(map-get($config, primary), text);\r\n\r\n    &.mat-accent {\r\n      color: mat-color(map-get($config, accent), text);\r\n    }\r\n\r\n    &.mat-warn {\r\n      color: mat-color(map-get($config, warn), text);\r\n    }\r\n  }\r\n\r\n  .mat-date-range-input-inner[disabled] {\r\n    color: mat-color($foreground, disabled-text);\r\n  }\r\n}\r\n\r\n@mixin mat-datepicker-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-calendar {\r\n    font-family: mat-font-family($config);\r\n  }\r\n\r\n  .mat-calendar-body {\r\n    font-size: $mat-calendar-body-font-size;\r\n  }\r\n\r\n  .mat-calendar-body-label,\r\n  .mat-calendar-period-button {\r\n    font: {\r\n      size: mat-font-size($config, button);\r\n      weight: mat-font-weight($config, button);\r\n    }\r\n  }\r\n\r\n  .mat-calendar-table-header th {\r\n    font: {\r\n      size: $mat-calendar-weekday-table-font-size;\r\n      weight: mat-font-weight($config, body-1);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-date-range-colors(\r\n  $range-color,\r\n  $comparison-color: rgba(#f9ab00, $mat-datepicker-range-fade-amount),\r\n  $overlap-color: #a8dab5,\r\n  $overlap-selected-color: darken($overlap-color, 30%)) {\r\n\r\n  .mat-calendar-body-in-range::before {\r\n    background: $range-color;\r\n  }\r\n\r\n  .mat-calendar-body-comparison-identical,\r\n  .mat-calendar-body-in-comparison-range::before {\r\n    background: $comparison-color;\r\n  }\r\n\r\n  .mat-calendar-body-comparison-bridge-start::before,\r\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\r\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\r\n  }\r\n\r\n  .mat-calendar-body-comparison-bridge-end::before,\r\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\r\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\r\n  }\r\n\r\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\r\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\r\n    background: $overlap-color;\r\n  }\r\n\r\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\r\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\r\n    background: $overlap-selected-color;\r\n  }\r\n}\r\n\r\n@mixin _mat-datepicker-density($config-or-theme) {}\r\n\r\n@mixin mat-datepicker-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-datepicker') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-datepicker-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-datepicker-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-datepicker-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-dialog-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-dialog-container {\r\n    @include _mat-theme-elevation(24, $config);\r\n    background: mat-color($background, dialog);\r\n    color: mat-color($foreground, text);\r\n  }\r\n}\r\n\r\n@mixin mat-dialog-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-dialog-title {\r\n    @include mat-typography-level-to-styles($config, title);\r\n  }\r\n}\r\n\r\n@mixin _mat-dialog-density($config-or-theme) {}\r\n\r\n@mixin mat-dialog-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-dialog') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-dialog-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-dialog-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-dialog-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Default minimum and maximum height for collapsed panel headers.\r\n$mat-expansion-panel-header-collapsed-height: 48px !default;\r\n$mat-expansion-panel-header-collapsed-minimum-height: 36px !default;\r\n$mat-expansion-panel-header-collapsed-maximum-height:\r\n    $mat-expansion-panel-header-collapsed-height !default;\r\n\r\n// Default minimum and maximum height for expanded panel headers.\r\n$mat-expansion-panel-header-expanded-height: 64px !default;\r\n$mat-expansion-panel-header-expanded-minimum-height: 48px !default;\r\n$mat-expansion-panel-header-expanded-maximum-height:\r\n    $mat-expansion-panel-header-expanded-height !default;\r\n\r\n// Density configuration for the expansion panel. Captures the\r\n// height for both expanded and collapsed panel headers.\r\n$mat-expansion-panel-header-density-config: (\r\n  collapsed-height: (\r\n    default: $mat-expansion-panel-header-collapsed-height,\r\n    maximum: $mat-expansion-panel-header-collapsed-maximum-height,\r\n    minimum: $mat-expansion-panel-header-collapsed-minimum-height,\r\n  ),\r\n  expanded-height: (\r\n    default: $mat-expansion-panel-header-expanded-height,\r\n    maximum: $mat-expansion-panel-header-expanded-maximum-height,\r\n    minimum: $mat-expansion-panel-header-expanded-minimum-height,\r\n  )\r\n) !default;\r\n\r\n// Note: Keep this in sync with the animation timing for the toggle indicator\r\n// and body expansion. These are animated using Angular animations.\r\n$mat-expansion-panel-header-transition: 225ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n\r\n@mixin mat-expansion-panel-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-expansion-panel {\r\n    @include _mat-theme-overridable-elevation(2, $config);\r\n    background: mat-color($background, card);\r\n    color: mat-color($foreground, text);\r\n  }\r\n\r\n  .mat-action-row {\r\n    border-top-color: mat-color($foreground, divider);\r\n  }\r\n\r\n  .mat-expansion-panel {\r\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\r\n    & .mat-expansion-panel-header.cdk-program-focused,\r\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\r\n      &:not([aria-disabled='true']) {\r\n        background: mat-color($background, hover);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\r\n  // `@media (hover)` above, because the desktop support browser support isn't great.\r\n  @media (hover: none) {\r\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\r\n      .mat-expansion-panel-header:hover {\r\n      background: mat-color($background, card);\r\n    }\r\n  }\r\n\r\n  .mat-expansion-panel-header-title {\r\n    color: mat-color($foreground, text);\r\n  }\r\n\r\n  .mat-expansion-panel-header-description,\r\n  .mat-expansion-indicator::after {\r\n    color: mat-color($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-expansion-panel-header[aria-disabled='true'] {\r\n    color: mat-color($foreground, disabled-button);\r\n\r\n    .mat-expansion-panel-header-title,\r\n    .mat-expansion-panel-header-description {\r\n      color: inherit;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-expansion-panel-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-expansion-panel-header {\r\n    font: {\r\n      family: mat-font-family($config, subheading-1);\r\n      size: mat-font-size($config, subheading-1);\r\n      weight: mat-font-weight($config, subheading-1);\r\n    }\r\n  }\r\n\r\n  .mat-expansion-panel-content {\r\n    @include mat-typography-level-to-styles($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _mat-expansion-panel-density($config-or-theme) {\r\n  $density-scale: mat-get-density-config($config-or-theme);\r\n  $expanded-height: _mat-density-prop-value(\r\n        $mat-expansion-panel-header-density-config, $density-scale, expanded-height);\r\n  $collapsed-height: _mat-density-prop-value(\r\n      $mat-expansion-panel-header-density-config, $density-scale, collapsed-height);\r\n\r\n  @include _mat-density-legacy-compatibility() {\r\n    .mat-expansion-panel-header {\r\n      height: $collapsed-height;\r\n\r\n      &.mat-expanded {\r\n        height: $expanded-height;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-expansion-panel-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-expansion-panel') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-expansion-panel-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-expansion-panel-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-expansion-panel-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// This mixin will ensure that lines that overflow the container will hide the overflow and\r\n// truncate neatly with an ellipsis.\r\n@mixin mat-truncate-line() {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\r\n// is in dense mode.\r\n@mixin mat-line-base($secondary-font-size) {\r\n  .mat-line {\r\n    @include mat-truncate-line();\r\n    display: block;\r\n    box-sizing: border-box;\r\n\r\n    // all lines but the top line should have smaller text\r\n    &:nth-child(n+2) {\r\n      font-size: $secondary-font-size;\r\n    }\r\n  }\r\n}\r\n\r\n// This mixin normalizes default element styles, e.g. font weight for heading text.\r\n@mixin mat-normalize-text() {\r\n  & > * {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-weight: normal;\r\n    font-size: inherit;\r\n  }\r\n}\r\n\r\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\r\n@mixin mat-line-wrapper-base() {\r\n  @include mat-normalize-text();\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: auto;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n\r\n  // Must remove wrapper when lines are empty or it takes up horizontal\r\n  // space and pushes other elements to the right.\r\n  &:empty {\r\n    display: none;\r\n  }\r\n}\r\n\r\n\r\n\r\n// Include this empty mixin for consistency with the other components.\r\n@mixin mat-grid-list-color($config-or-theme) {}\r\n\r\n@mixin mat-grid-list-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-grid-tile-header,\r\n  .mat-grid-tile-footer {\r\n    @include mat-line-base(mat-font-size($config, caption));\r\n    font-size: mat-font-size($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _mat-grid-list-density($config-or-theme) {}\r\n\r\n@mixin mat-grid-list-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-grid-list') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-grid-list-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-grid-list-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-grid-list-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@mixin mat-icon-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-icon {\r\n    &.mat-primary {\r\n      color: mat-color($primary, text);\r\n    }\r\n\r\n    &.mat-accent {\r\n      color: mat-color($accent, text);\r\n    }\r\n\r\n    &.mat-warn {\r\n      color: mat-color($warn, text);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-icon-typography($config-or-theme) {}\r\n\r\n@mixin _mat-icon-density($config-or-theme) {}\r\n\r\n@mixin mat-icon-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-icon') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-icon-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-icon-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-icon-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Renders a gradient for showing the dashed line when the input is disabled.\r\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\r\n// to match the Material Design spec.\r\n@mixin mat-control-disabled-underline($color) {\r\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\r\n  background-size: 4px 100%;\r\n  background-repeat: repeat-x;\r\n}\r\n\r\n// Figures out the color of the placeholder for a form control.\r\n// Used primarily to prevent the various form controls from\r\n// becoming out of sync since these colors aren't in a palette.\r\n@function _mat-control-placeholder-color($config) {\r\n  $foreground: map-get($config, foreground);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\r\n}\r\n\r\n\r\n/* stylelint-disable material/no-prefixes */\r\n@mixin user-select($value) {\r\n  -webkit-user-select: $value;\r\n  -moz-user-select: $value;\r\n  -ms-user-select: $value;\r\n  user-select: $value;\r\n}\r\n\r\n@mixin input-placeholder {\r\n  &::placeholder {\r\n    @content;\r\n  }\r\n\r\n  &::-moz-placeholder {\r\n    @content;\r\n  }\r\n\r\n  &::-webkit-input-placeholder {\r\n    @content;\r\n  }\r\n\r\n  &:-ms-input-placeholder {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin cursor-grab {\r\n  cursor: -webkit-grab;\r\n  cursor: grab;\r\n}\r\n\r\n@mixin cursor-grabbing {\r\n  cursor: -webkit-grabbing;\r\n  cursor: grabbing;\r\n}\r\n\r\n@mixin backface-visibility($value) {\r\n  -webkit-backface-visibility: $value;\r\n  backface-visibility: $value;\r\n}\r\n\r\n@mixin position-sticky {\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n}\r\n/* stylelint-enable */\r\n\r\n\r\n\r\n@mixin mat-input-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\r\n    color: mat-color($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-input-element:disabled,\r\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\r\n    color: mat-color($foreground, disabled-text);\r\n  }\r\n\r\n  .mat-input-element {\r\n    caret-color: mat-color($primary, text);\r\n\r\n    @include input-placeholder {\r\n      color: _mat-control-placeholder-color($config);\r\n    }\r\n\r\n    // On dark themes we set the native `select` color to some shade of white,\r\n    // however the color propagates to all of the `option` elements, which are\r\n    // always on a white background inside the dropdown, causing them to blend in.\r\n    // Since we can't change background of the dropdown, we need to explicitly\r\n    // reset the color of the options to something dark.\r\n    @if (map-get($config, is-dark)) {\r\n      option {\r\n        color: $dark-primary-text;\r\n      }\r\n\r\n      option:disabled {\r\n        color: $dark-disabled-text;\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-form-field.mat-accent .mat-input-element {\r\n    caret-color: mat-color($accent, text);\r\n  }\r\n\r\n  .mat-form-field.mat-warn .mat-input-element,\r\n  .mat-form-field-invalid .mat-input-element {\r\n    caret-color: mat-color($warn, text);\r\n  }\r\n\r\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\r\n    color: mat-color($warn, text);\r\n  }\r\n}\r\n\r\n@mixin mat-input-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  // The unit-less line-height from the font config.\r\n  $line-height: mat-line-height($config, input);\r\n\r\n  // The amount of space between the top of the line and the top of the actual text\r\n  // (as a fraction of the font-size).\r\n  $line-spacing: ($line-height - 1) / 2;\r\n\r\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\r\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\r\n  input.mat-input-element {\r\n    margin-top: -$line-spacing * 1em;\r\n  }\r\n}\r\n\r\n@mixin _mat-input-density($config-or-theme) {}\r\n\r\n@mixin mat-input-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-input') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-input-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-input-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-input-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-list-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-list-base {\r\n    .mat-list-item {\r\n      color: mat-color($foreground, text);\r\n    }\r\n\r\n    .mat-list-option {\r\n      color: mat-color($foreground, text);\r\n    }\r\n\r\n    .mat-subheader {\r\n      color: mat-color($foreground, secondary-text);\r\n    }\r\n  }\r\n\r\n  .mat-list-item-disabled {\r\n    background-color: mat-color($background, disabled-list-option);\r\n  }\r\n\r\n  .mat-list-option,\r\n  .mat-nav-list .mat-list-item,\r\n  .mat-action-list .mat-list-item {\r\n    &:hover, &:focus {\r\n      background: mat-color($background, 'hover');\r\n    }\r\n  }\r\n\r\n  .mat-list-single-selected-option {\r\n    &, &:hover, &:focus {\r\n      background: mat-color($background, hover, 0.12);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-list-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  $font-family: mat-font-family($config);\r\n\r\n  .mat-list-item {\r\n    font-family: $font-family;\r\n  }\r\n\r\n  .mat-list-option {\r\n    font-family: $font-family;\r\n  }\r\n\r\n  // Default list\r\n  .mat-list-base {\r\n    .mat-list-item {\r\n      font-size: mat-font-size($config, subheading-2);\r\n      @include mat-line-base(mat-font-size($config, body-1));\r\n    }\r\n\r\n    .mat-list-option {\r\n      font-size: mat-font-size($config, subheading-2);\r\n      @include mat-line-base(mat-font-size($config, body-1));\r\n    }\r\n\r\n    .mat-subheader {\r\n      font-family: mat-font-family($config, body-2);\r\n      font-size: mat-font-size($config, body-2);\r\n      font-weight: mat-font-weight($config, body-2);\r\n    }\r\n  }\r\n\r\n  // Dense list\r\n  .mat-list-base[dense] {\r\n    .mat-list-item {\r\n      font-size: mat-font-size($config, caption);\r\n      @include mat-line-base(mat-font-size($config, caption));\r\n    }\r\n\r\n    .mat-list-option {\r\n      font-size: mat-font-size($config, caption);\r\n      @include mat-line-base(mat-font-size($config, caption));\r\n    }\r\n\r\n    .mat-subheader {\r\n      font-family: $font-family;\r\n      font-size: mat-font-size($config, caption);\r\n      font-weight: mat-font-weight($config, body-2);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-list-density($config-or-theme) {}\r\n\r\n@mixin mat-list-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-list') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-list-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-list-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-list-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-menu-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-menu-panel {\r\n    @include _mat-theme-overridable-elevation(4, $config);\r\n    background: mat-color($background, 'card');\r\n  }\r\n\r\n  .mat-menu-item {\r\n    background: transparent;\r\n    color: mat-color($foreground, 'text');\r\n\r\n    &[disabled] {\r\n      &, &::after {\r\n        color: mat-color($foreground, 'disabled');\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-menu-item .mat-icon-no-color,\r\n  .mat-menu-item-submenu-trigger::after {\r\n    color: mat-color($foreground, 'icon');\r\n  }\r\n\r\n  .mat-menu-item:hover,\r\n  .mat-menu-item.cdk-program-focused,\r\n  .mat-menu-item.cdk-keyboard-focused,\r\n  .mat-menu-item-highlighted {\r\n    &:not([disabled]) {\r\n      background: mat-color($background, 'hover');\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-menu-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-menu-item {\r\n    font: {\r\n      family: mat-font-family($config, body-1);\r\n      size: mat-font-size($config, body-1);\r\n      weight: mat-font-weight($config, body-1);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-menu-density($config-or-theme) {}\r\n\r\n@mixin mat-menu-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-menu') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-menu-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-menu-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-menu-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n$mat-paginator-height: 56px !default;\r\n// Minimum height for paginator's in the highest density is determined based on how\r\n// much the paginator can shrink until the content exceeds (i.e. navigation buttons).\r\n$mat-paginator-minimum-height: 40px !default;\r\n$mat-paginator-maximum-height: $mat-paginator-height !default;\r\n\r\n$mat-paginator-density-config: (\r\n  height: (\r\n    default: $mat-paginator-height,\r\n    maximum: $mat-paginator-maximum-height,\r\n    minimum: $mat-paginator-minimum-height,\r\n  )\r\n) !default;\r\n\r\n\r\n@mixin mat-paginator-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $background: map-get($config, background);\r\n\r\n  .mat-paginator {\r\n    background: mat-color($background, 'card');\r\n  }\r\n\r\n  .mat-paginator,\r\n  .mat-paginator-page-size .mat-select-trigger {\r\n    color: mat-color($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-paginator-decrement,\r\n  .mat-paginator-increment {\r\n    border-top: 2px solid mat-color($foreground, 'icon');\r\n    border-right: 2px solid mat-color($foreground, 'icon');\r\n  }\r\n\r\n  .mat-paginator-first,\r\n  .mat-paginator-last {\r\n    border-top: 2px solid mat-color($foreground, 'icon');\r\n  }\r\n\r\n  .mat-icon-button[disabled] {\r\n    .mat-paginator-decrement,\r\n    .mat-paginator-increment,\r\n    .mat-paginator-first,\r\n    .mat-paginator-last {\r\n      border-color: mat-color($foreground, 'disabled');\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-paginator-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-paginator,\r\n  .mat-paginator-page-size .mat-select-trigger {\r\n    font: {\r\n      family: mat-font-family($config, caption);\r\n      size: mat-font-size($config, caption);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-paginator-density($config-or-theme) {\r\n  $density-scale: mat-get-density-config($config-or-theme);\r\n  $height: _mat-density-prop-value($mat-paginator-density-config, $density-scale, height);\r\n\r\n  @include _mat-density-legacy-compatibility() {\r\n    .mat-paginator-container {\r\n      min-height: $height;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-paginator-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-paginator') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-paginator-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-paginator-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-paginator-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-progress-bar-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n\r\n  .mat-progress-bar-background {\r\n    fill: mat-color($primary, lighter);\r\n  }\r\n\r\n  .mat-progress-bar-buffer {\r\n    background-color: mat-color($primary, lighter);\r\n  }\r\n\r\n  .mat-progress-bar-fill::after {\r\n    background-color: mat-color($primary);\r\n  }\r\n\r\n  .mat-progress-bar.mat-accent {\r\n    .mat-progress-bar-background {\r\n      fill: mat-color($accent, lighter);\r\n    }\r\n\r\n    .mat-progress-bar-buffer {\r\n      background-color: mat-color($accent, lighter);\r\n    }\r\n\r\n    .mat-progress-bar-fill::after {\r\n      background-color: mat-color($accent);\r\n    }\r\n  }\r\n\r\n  .mat-progress-bar.mat-warn {\r\n    .mat-progress-bar-background {\r\n      fill: mat-color($warn, lighter);\r\n    }\r\n\r\n    .mat-progress-bar-buffer {\r\n      background-color: mat-color($warn, lighter);\r\n    }\r\n\r\n    .mat-progress-bar-fill::after {\r\n      background-color: mat-color($warn);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-progress-bar-typography($config-or-theme) {}\r\n\r\n@mixin _mat-progress-bar-density($config-or-theme) {}\r\n\r\n@mixin mat-progress-bar-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-progress-bar-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-progress-bar-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-progress-bar-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-progress-spinner-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n\r\n  .mat-progress-spinner, .mat-spinner {\r\n    circle {\r\n      stroke: mat-color($primary);\r\n    }\r\n\r\n    &.mat-accent circle {\r\n      stroke: mat-color($accent);\r\n    }\r\n\r\n    &.mat-warn circle {\r\n      stroke: mat-color($warn);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-progress-spinner-typography($config-or-theme) {}\r\n\r\n@mixin _mat-progress-spinner-density($config-or-theme) {}\r\n\r\n@mixin mat-progress-spinner-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-progress-spinner-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-progress-spinner-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-progress-spinner-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin _mat-radio-color($palette) {\r\n  &.mat-radio-checked .mat-radio-outer-circle {\r\n    border-color: mat-color($palette);\r\n  }\r\n\r\n  .mat-radio-inner-circle,\r\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\r\n  &.mat-radio-checked .mat-radio-persistent-ripple,\r\n  &:active .mat-radio-persistent-ripple {\r\n    background-color: mat-color($palette);\r\n  }\r\n}\r\n\r\n@mixin mat-radio-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-radio-outer-circle {\r\n    border-color: mat-color($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-radio-button {\r\n    &.mat-primary {\r\n      @include _mat-radio-color($primary);\r\n    }\r\n\r\n    &.mat-accent {\r\n      @include _mat-radio-color($accent);\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _mat-radio-color($warn);\r\n    }\r\n\r\n    // This needs extra specificity, because the classes above are combined\r\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\r\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\r\n    &.mat-radio-disabled {\r\n      &.mat-radio-checked .mat-radio-outer-circle,\r\n      .mat-radio-outer-circle {\r\n        border-color: mat-color($foreground, disabled);\r\n      }\r\n\r\n      .mat-radio-ripple .mat-ripple-element,\r\n      .mat-radio-inner-circle {\r\n        background-color: mat-color($foreground, disabled);\r\n      }\r\n\r\n      .mat-radio-label-content {\r\n        color: mat-color($foreground, disabled);\r\n      }\r\n    }\r\n\r\n    // Switch this to a solid color since we're using `opacity`\r\n    // to control how opaque the ripple should be.\r\n    .mat-ripple-element {\r\n      background-color: map_get($foreground, base);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-radio-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-radio-button {\r\n    font-family: mat-font-family($config);\r\n  }\r\n}\r\n\r\n@mixin _mat-radio-density($config-or-theme) {}\r\n\r\n@mixin mat-radio-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-radio') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-radio-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-radio-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-radio-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-select-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $background: map-get($config, background);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n\r\n  .mat-select-value {\r\n    color: mat-color($foreground, text);\r\n  }\r\n\r\n  .mat-select-placeholder {\r\n    color: _mat-control-placeholder-color($config);\r\n  }\r\n\r\n  .mat-select-disabled .mat-select-value {\r\n    color: mat-color($foreground, disabled-text);\r\n  }\r\n\r\n  .mat-select-arrow {\r\n    color: mat-color($foreground, secondary-text);\r\n  }\r\n\r\n  .mat-select-panel {\r\n    background: mat-color($background, card);\r\n    @include _mat-theme-overridable-elevation(4, $config);\r\n\r\n    .mat-option.mat-selected:not(.mat-option-multiple) {\r\n      background: mat-color($background, hover, 0.12);\r\n    }\r\n  }\r\n\r\n  .mat-form-field {\r\n    &.mat-focused {\r\n      &.mat-primary .mat-select-arrow {\r\n        color: mat-color($primary, text);\r\n      }\r\n\r\n      &.mat-accent .mat-select-arrow {\r\n        color: mat-color($accent, text);\r\n      }\r\n\r\n      &.mat-warn .mat-select-arrow {\r\n        color: mat-color($warn, text);\r\n      }\r\n    }\r\n\r\n    .mat-select.mat-select-invalid .mat-select-arrow {\r\n      color: mat-color($warn, text);\r\n    }\r\n\r\n    .mat-select.mat-select-disabled .mat-select-arrow {\r\n      color: mat-color($foreground, disabled-text);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-select-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  // The unit-less line-height from the font config.\r\n  $line-height: mat-line-height($config, input);\r\n\r\n  .mat-select {\r\n    font-family: mat-font-family($config);\r\n  }\r\n\r\n  .mat-select-trigger {\r\n    height: $line-height * 1em;\r\n  }\r\n}\r\n\r\n@mixin _mat-select-density($config-or-theme) {}\r\n\r\n@mixin mat-select-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-select') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-select-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-select-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-select-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-sidenav-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  $drawer-background-color: mat-color($background, dialog);\r\n  $drawer-container-background-color:  mat-color($background, background);\r\n  $drawer-push-background-color: mat-color($background, dialog);\r\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\r\n\r\n  .mat-drawer-container {\r\n    background-color: $drawer-container-background-color;\r\n    color: mat-color($foreground, text);\r\n  }\r\n\r\n  .mat-drawer {\r\n    background-color: $drawer-background-color;\r\n    color: mat-color($foreground, text);\r\n\r\n    &.mat-drawer-push {\r\n      background-color: $drawer-push-background-color;\r\n    }\r\n\r\n    &:not(.mat-drawer-side) {\r\n      // The elevation of z-16 is noted in the design specifications.\r\n      // See https://material.io/design/components/navigation-drawer.html\r\n      @include _mat-theme-elevation(16, $config);\r\n    }\r\n  }\r\n\r\n  .mat-drawer-side {\r\n    border-right: $drawer-side-border;\r\n\r\n    &.mat-drawer-end {\r\n      border-left: $drawer-side-border;\r\n      border-right: none;\r\n    }\r\n  }\r\n\r\n  [dir='rtl'] .mat-drawer-side {\r\n    border-left: $drawer-side-border;\r\n    border-right: none;\r\n\r\n    &.mat-drawer-end {\r\n      border-left: none;\r\n      border-right: $drawer-side-border;\r\n    }\r\n  }\r\n\r\n  .mat-drawer-backdrop.mat-drawer-shown {\r\n    $opacity: 0.6;\r\n    $backdrop-color: mat-color($background, card, $opacity);\r\n\r\n    @if (type-of($backdrop-color) == color) {\r\n      // We use invert() here to have the darken the background color expected to be used. If the\r\n      // background is light, we use a dark backdrop. If the background is dark,\r\n      // we use a light backdrop.\r\n      background-color: invert($backdrop-color);\r\n    }\r\n    @else {\r\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\r\n      // `opacity` to make it opaque since its end value could be a solid color.\r\n      background-color: $backdrop-color;\r\n      opacity: $opacity;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-sidenav-typography($config-or-theme) {}\r\n\r\n@mixin _mat-sidenav-density($config-or-theme) {}\r\n\r\n@mixin mat-sidenav-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-sidenav') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-sidenav-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-sidenav-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-sidenav-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\r\n  &.mat-checked {\r\n    .mat-slide-toggle-thumb {\r\n      background-color: mat-color($palette, $thumb-checked-hue);\r\n    }\r\n\r\n    .mat-slide-toggle-bar {\r\n      // Opacity is determined from the specs for the selection controls.\r\n      // See: https://material.io/design/components/selection-controls.html#specs\r\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\r\n    }\r\n\r\n    .mat-ripple-element {\r\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\r\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\r\n      background-color: mat-color($palette, $thumb-checked-hue);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-slide-toggle-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $is-dark: map_get($config, is-dark);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\r\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\r\n  // information for dark themed switches, we partially keep the old behavior that is based on\r\n  // the previous specifications. For the checked color we always use the `default` hue because\r\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\r\n  // to specify each hue individually.\r\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\r\n  $thumb-checked-hue: default;\r\n\r\n  $bar-unchecked-color: mat-color($foreground, disabled);\r\n  $ripple-unchecked-color: mat-color($foreground, base);\r\n\r\n  .mat-slide-toggle {\r\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\r\n\r\n    &.mat-primary {\r\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\r\n    }\r\n\r\n    &:not(.mat-checked) .mat-ripple-element {\r\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\r\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\r\n      background-color: $ripple-unchecked-color;\r\n    }\r\n  }\r\n\r\n  .mat-slide-toggle-thumb {\r\n    @include _mat-theme-elevation(1, $config);\r\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\r\n  }\r\n\r\n  .mat-slide-toggle-bar {\r\n    background-color: $bar-unchecked-color;\r\n  }\r\n}\r\n\r\n@mixin mat-slide-toggle-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-slide-toggle-content {\r\n    font-family: mat-font-family($config);\r\n  }\r\n}\r\n\r\n@mixin _mat-slide-toggle-density($config-or-theme) {}\r\n\r\n@mixin mat-slide-toggle-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-slide-toggle-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-slide-toggle-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-slide-toggle-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin _mat-slider-inner-content-theme($palette) {\r\n  .mat-slider-track-fill,\r\n  .mat-slider-thumb,\r\n  .mat-slider-thumb-label {\r\n    background-color: mat-color($palette);\r\n  }\r\n\r\n  .mat-slider-thumb-label-text {\r\n    color: mat-color($palette, default-contrast);\r\n  }\r\n\r\n  .mat-slider-focus-ring {\r\n    $opacity: 0.2;\r\n    $color: mat-color($palette, default, $opacity);\r\n    background-color: $color;\r\n\r\n    // `mat-color` uses `rgba` for the opacity which won't work with\r\n    // CSS variables so we need to use `opacity` as a fallback.\r\n    @if (type-of($color) != color) {\r\n      opacity: $opacity;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-slider-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  $mat-slider-off-color: mat-color($foreground, slider-off);\r\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\r\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\r\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\r\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\r\n  $mat-slider-tick-opacity: 0.7;\r\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\r\n  $mat-slider-tick-size: 2px;\r\n\r\n  .mat-slider-track-background {\r\n    background-color: $mat-slider-off-color;\r\n  }\r\n\r\n  .mat-primary {\r\n    @include _mat-slider-inner-content-theme($primary);\r\n  }\r\n\r\n  .mat-accent {\r\n    @include _mat-slider-inner-content-theme($accent);\r\n  }\r\n\r\n  .mat-warn {\r\n    @include _mat-slider-inner-content-theme($warn);\r\n  }\r\n\r\n  .mat-slider:hover,\r\n  .cdk-focused {\r\n    .mat-slider-track-background {\r\n      background-color: $mat-slider-off-focused-color;\r\n    }\r\n  }\r\n\r\n  .mat-slider-disabled {\r\n    .mat-slider-track-background,\r\n    .mat-slider-track-fill,\r\n    .mat-slider-thumb {\r\n      background-color: $mat-slider-disabled-color;\r\n    }\r\n\r\n    &:hover {\r\n      .mat-slider-track-background {\r\n        background-color: $mat-slider-disabled-color;\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-slider-min-value {\r\n    .mat-slider-focus-ring {\r\n      $opacity: 0.12;\r\n      $color: mat-color($foreground, base, $opacity);\r\n      background-color: $color;\r\n\r\n      // `mat-color` uses `rgba` for the opacity which won't work with\r\n      // CSS variables so we need to use `opacity` as a fallback.\r\n      @if (type-of($color) != color) {\r\n        opacity: $opacity;\r\n      }\r\n    }\r\n\r\n    &.mat-slider-thumb-label-showing {\r\n      .mat-slider-thumb,\r\n      .mat-slider-thumb-label {\r\n        background-color: $mat-slider-labeled-min-value-thumb-color;\r\n      }\r\n\r\n      &.cdk-focused {\r\n        .mat-slider-thumb,\r\n        .mat-slider-thumb-label {\r\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\r\n        }\r\n      }\r\n    }\r\n\r\n    &:not(.mat-slider-thumb-label-showing) {\r\n      .mat-slider-thumb {\r\n        border-color: $mat-slider-off-color;\r\n        background-color: transparent;\r\n      }\r\n\r\n      &:hover,\r\n      &.cdk-focused {\r\n        .mat-slider-thumb {\r\n          border-color: $mat-slider-off-focused-color;\r\n        }\r\n\r\n        &.mat-slider-disabled .mat-slider-thumb {\r\n          border-color: $mat-slider-disabled-color;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\r\n    border-color: $mat-slider-tick-color;\r\n\r\n    // `mat-color` uses `rgba` for the opacity which won't work with\r\n    // CSS variables so we need to use `opacity` as a fallback.\r\n    @if (type-of($mat-slider-tick-color) != color) {\r\n      opacity: $mat-slider-tick-opacity;\r\n    }\r\n  }\r\n\r\n  .mat-slider-horizontal .mat-slider-ticks {\r\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\r\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\r\n    // Firefox doesn't draw the gradient correctly with 'to right'\r\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\r\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\r\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\r\n\r\n    // `mat-color` uses `rgba` for the opacity which won't work with\r\n    // CSS variables so we need to use `opacity` as a fallback.\r\n    @if (type-of($mat-slider-tick-color) != color) {\r\n      opacity: $mat-slider-tick-opacity;\r\n    }\r\n  }\r\n\r\n  .mat-slider-vertical .mat-slider-ticks {\r\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\r\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\r\n\r\n    // `mat-color` uses `rgba` for the opacity which won't work with\r\n    // CSS variables so we need to use `opacity` as a fallback.\r\n    @if (type-of($mat-slider-tick-color) != color) {\r\n      opacity: $mat-slider-tick-opacity;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-slider-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-slider-thumb-label-text {\r\n    font: {\r\n      family: mat-font-family($config);\r\n      size: mat-font-size($config, caption);\r\n      weight: mat-font-weight($config, body-2);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-slider-density($config-or-theme) {}\r\n\r\n@mixin mat-slider-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-slider') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-slider-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-slider-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-slider-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n$mat-stepper-header-height: 72px !default;\r\n// Minimum height for highest density stepper's is determined based on how much\r\n// stepper headers can shrink until the step icon or step label exceed. We can't use\r\n// a value below `42px` because the optional label for steps would otherwise exceed.\r\n$mat-stepper-header-minimum-height: 42px !default;\r\n$mat-stepper-header-maximum-height: $mat-stepper-header-height !default;\r\n\r\n$mat-stepper-density-config: (\r\n  height: (\r\n    default: $mat-stepper-header-height,\r\n    maximum: $mat-stepper-header-maximum-height,\r\n    minimum: $mat-stepper-header-minimum-height,\r\n  )\r\n) !default;\r\n\r\n// Note: These variables are not denoted with `!default` because they are used in the non-theme\r\n// component styles. Modifying these variables does not have the desired effect for consumers.\r\n$mat-stepper-label-header-height: 24px;\r\n$mat-stepper-label-position-bottom-top-gap: 16px;\r\n$mat-stepper-label-min-width: 50px;\r\n\r\n$mat-vertical-stepper-content-margin: 36px;\r\n\r\n$mat-stepper-side-gap: 24px;\r\n$mat-stepper-line-width: 1px;\r\n$mat-stepper-line-gap: 8px;\r\n\r\n$mat-step-sub-label-font-size: 12px;\r\n$mat-step-header-icon-size: 16px;\r\n\r\n\r\n@mixin mat-stepper-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $background: map-get($config, background);\r\n  $primary: map-get($config, primary);\r\n  $warn: map-get($config, warn);\r\n\r\n  .mat-step-header {\r\n    &.cdk-keyboard-focused,\r\n    &.cdk-program-focused,\r\n    &:hover {\r\n      background-color: mat-color($background, hover);\r\n    }\r\n\r\n    // On touch devices the :hover state will linger on the element after a tap.\r\n    // Reset it via `@media` after the declaration, because the media query isn't\r\n    // supported by all browsers yet.\r\n    @media (hover: none) {\r\n      &:hover {\r\n        background: none;\r\n      }\r\n    }\r\n\r\n    .mat-step-label,\r\n    .mat-step-optional {\r\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\r\n      // instead of secondary-text.\r\n      color: mat-color($foreground, secondary-text);\r\n    }\r\n\r\n    .mat-step-icon {\r\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\r\n      // instead of secondary-text.\r\n      background-color: mat-color($foreground, secondary-text);\r\n      color: mat-color($primary, default-contrast);\r\n    }\r\n\r\n    .mat-step-icon-selected,\r\n    .mat-step-icon-state-done,\r\n    .mat-step-icon-state-edit {\r\n      background-color: mat-color($primary);\r\n      color: mat-color($primary, default-contrast);\r\n    }\r\n\r\n    .mat-step-icon-state-error {\r\n      background-color: transparent;\r\n      color: mat-color($warn, text);\r\n    }\r\n\r\n    .mat-step-label.mat-step-label-active {\r\n      color: mat-color($foreground, text);\r\n    }\r\n\r\n    .mat-step-label.mat-step-label-error {\r\n      color: mat-color($warn, text);\r\n    }\r\n  }\r\n\r\n  .mat-stepper-horizontal, .mat-stepper-vertical {\r\n    background-color: mat-color($background, card);\r\n  }\r\n\r\n  .mat-stepper-vertical-line::before {\r\n    border-left-color: mat-color($foreground, divider);\r\n  }\r\n\r\n  .mat-horizontal-stepper-header::before,\r\n  .mat-horizontal-stepper-header::after,\r\n  .mat-stepper-horizontal-line {\r\n    border-top-color: mat-color($foreground, divider);\r\n  }\r\n}\r\n\r\n@mixin mat-stepper-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-stepper-vertical, .mat-stepper-horizontal {\r\n    font-family: mat-font-family($config);\r\n  }\r\n\r\n  .mat-step-label {\r\n    font: {\r\n      size: mat-font-size($config, body-1);\r\n      weight: mat-font-weight($config, body-1);\r\n    };\r\n  }\r\n\r\n  .mat-step-sub-label-error {\r\n    font-weight: normal;\r\n  }\r\n\r\n  .mat-step-label-error {\r\n    font-size: mat-font-size($config, body-2);\r\n  }\r\n\r\n  .mat-step-label-selected {\r\n    font: {\r\n      size: mat-font-size($config, body-2);\r\n      weight: mat-font-weight($config, body-2);\r\n    };\r\n  }\r\n}\r\n\r\n@mixin _mat-stepper-density($config-or-theme) {\r\n  $density-scale: mat-get-density-config($config-or-theme);\r\n  $height: _mat-density-prop-value($mat-stepper-density-config, $density-scale, height);\r\n  $vertical-padding: ($height - $mat-stepper-label-header-height) / 2;\r\n\r\n  @include _mat-density-legacy-compatibility() {\r\n    .mat-horizontal-stepper-header {\r\n      height: $height;\r\n    }\r\n\r\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\r\n    .mat-vertical-stepper-header, {\r\n      padding: $vertical-padding $mat-stepper-side-gap;\r\n    }\r\n\r\n    // Ensures that the vertical lines for the step content exceed into the step\r\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\r\n    .mat-stepper-vertical-line::before {\r\n      top: $mat-stepper-line-gap - $vertical-padding;\r\n      bottom: $mat-stepper-line-gap - $vertical-padding;\r\n    }\r\n\r\n    // Ensures that the horizontal lines for the step header are centered vertically.\r\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\r\n      &::after, &::before {\r\n        top: $vertical-padding + $mat-stepper-label-header-height / 2;\r\n      }\r\n    }\r\n\r\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\r\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\r\n      top: $vertical-padding + $mat-stepper-label-header-height / 2;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-stepper-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-stepper') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-stepper-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-stepper-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-stepper-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n@mixin mat-sort-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-sort-header-arrow {\r\n    $table-background: mat-color($background, 'card');\r\n    $text-color: mat-color($foreground, secondary-text);\r\n\r\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\r\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\r\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\r\n    // using the value to determine the percentage of the background to put into foreground\r\n    // when mixing the colors together. Otherwise, if it resolves to something different\r\n    // (e.g. it resolves to a CSS variable), we use the color directly.\r\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\r\n      $text-opacity: opacity($text-color);\r\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\r\n    }\r\n    @else {\r\n      color: $text-color;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-sort-typography($config-or-theme) {}\r\n\r\n@mixin _mat-sort-density($config-or-theme) {}\r\n\r\n@mixin mat-sort-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-sort') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-sort-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-sort-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-sort-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-tabs-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n  $header-border: 1px solid mat-color($foreground, divider);\r\n\r\n  .mat-tab-nav-bar,\r\n  .mat-tab-header {\r\n    border-bottom: $header-border;\r\n  }\r\n\r\n  .mat-tab-group-inverted-header {\r\n    .mat-tab-nav-bar,\r\n    .mat-tab-header {\r\n      border-top: $header-border;\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  .mat-tab-label, .mat-tab-link {\r\n    color: mat-color($foreground, text);\r\n\r\n    &.mat-tab-disabled {\r\n      color: mat-color($foreground, disabled-text);\r\n    }\r\n  }\r\n\r\n  .mat-tab-header-pagination-chevron {\r\n    border-color: mat-color($foreground, text);\r\n  }\r\n\r\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\r\n    border-color: mat-color($foreground, disabled-text);\r\n  }\r\n\r\n  // Remove header border when there is a background color\r\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\r\n  .mat-tab-nav-bar[class*='mat-background-'] {\r\n    border-bottom: none;\r\n    border-top: none;\r\n  }\r\n\r\n  .mat-tab-group, .mat-tab-nav-bar {\r\n    $theme-colors: (\r\n      primary: $primary,\r\n      accent: $accent,\r\n      warn: $warn\r\n    );\r\n\r\n    @each $name, $color in $theme-colors {\r\n      // Set the foreground color of the tabs\r\n      &.mat-#{$name} {\r\n        @include _mat-tab-label-focus($color);\r\n        @include _mat-ink-bar($color);\r\n\r\n        // Override ink bar when background color is the same\r\n        &.mat-background-#{$name} {\r\n          @include _mat-ink-bar($color, default-contrast);\r\n        }\r\n      }\r\n    }\r\n\r\n    @each $name, $color in $theme-colors {\r\n      // Set background color of the tabs and override focus color\r\n      &.mat-background-#{$name} {\r\n        @include _mat-tab-label-focus($color);\r\n        @include _mat-tabs-background($color);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-ink-bar($color, $hue: default) {\r\n  .mat-ink-bar {\r\n    background-color: mat-color($color, $hue);\r\n  }\r\n}\r\n\r\n@mixin _mat-tab-label-focus($tab-focus-color) {\r\n  .mat-tab-label,\r\n  .mat-tab-link {\r\n    &.cdk-keyboard-focused,\r\n    &.cdk-program-focused {\r\n      &:not(.mat-tab-disabled) {\r\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-tabs-background($background-color) {\r\n  // Set background color for the tab group\r\n  .mat-tab-header, .mat-tab-links, .mat-tab-header-pagination {\r\n    background-color: mat-color($background-color);\r\n  }\r\n\r\n  // Set labels to contrast against background\r\n  .mat-tab-label, .mat-tab-link {\r\n    color: mat-color($background-color, default-contrast);\r\n\r\n    &.mat-tab-disabled {\r\n      color: mat-color($background-color, default-contrast, 0.4);\r\n    }\r\n  }\r\n\r\n  // Set pagination chevrons to contrast background\r\n  .mat-tab-header-pagination-chevron {\r\n    border-color: mat-color($background-color, default-contrast);\r\n  }\r\n\r\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\r\n    border-color: mat-color($background-color, default-contrast, 0.4);\r\n  }\r\n\r\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\r\n  // color will be based on the app background color.\r\n  .mat-ripple-element {\r\n    background-color: mat-color($background-color, default-contrast, 0.12);\r\n  }\r\n}\r\n\r\n@mixin mat-tabs-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-tab-group {\r\n    font-family: mat-font-family($config);\r\n  }\r\n\r\n  .mat-tab-label, .mat-tab-link {\r\n    font: {\r\n      family: mat-font-family($config, button);\r\n      size: mat-font-size($config, button);\r\n      weight: mat-font-weight($config, button);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-tabs-density($config-or-theme) {}\r\n\r\n@mixin mat-tabs-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tabs') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-tabs-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-tabs-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-tabs-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Minimum height for toolbar's in the highest density is difficult to determine because\r\n// developers can project arbitrary content. We use a minimum value that ensures that most\r\n// common content (e.g. icon buttons) does not exceed the row boundaries in highest density.\r\n$mat-toolbar-minimum-height: 44px !default;\r\n\r\n$mat-toolbar-height-desktop: 64px !default;\r\n$mat-toolbar-maximum-height-desktop: $mat-toolbar-height-desktop !default;\r\n$mat-toolbar-minimum-height-desktop: $mat-toolbar-minimum-height !default;\r\n\r\n$mat-toolbar-height-mobile: 56px !default;\r\n$mat-toolbar-maximum-height-mobile: $mat-toolbar-height-mobile !default;\r\n$mat-toolbar-minimum-height-mobile: $mat-toolbar-minimum-height !default;\r\n\r\n$mat-toolbar-desktop-density-config: (\r\n  height: (\r\n    default: $mat-toolbar-height-desktop,\r\n    maximum: $mat-toolbar-maximum-height-desktop,\r\n    minimum: $mat-toolbar-minimum-height-desktop,\r\n  )\r\n) !default;\r\n\r\n$mat-toolbar-mobile-density-config: (\r\n  height: (\r\n    default: $mat-toolbar-height-mobile,\r\n    maximum: $mat-toolbar-maximum-height-mobile,\r\n    minimum: $mat-toolbar-minimum-height-mobile,\r\n  )\r\n) !default;\r\n\r\n\r\n@mixin _mat-toolbar-height($height) {\r\n  .mat-toolbar-multiple-rows {\r\n    min-height: $height;\r\n  }\r\n  .mat-toolbar-row, .mat-toolbar-single-row {\r\n    height: $height;\r\n  }\r\n}\r\n\r\n@mixin _mat-toolbar-color($palette) {\r\n  background: mat-color($palette);\r\n  color: mat-color($palette, default-contrast);\r\n}\r\n\r\n@mixin _mat-toolbar-form-field-overrides {\r\n  .mat-form-field-underline,\r\n  .mat-form-field-ripple,\r\n  .mat-focused .mat-form-field-ripple {\r\n    background-color: currentColor;\r\n  }\r\n\r\n  .mat-form-field-label,\r\n  .mat-focused .mat-form-field-label,\r\n  .mat-select-value,\r\n  .mat-select-arrow,\r\n  .mat-form-field.mat-focused .mat-select-arrow {\r\n    color: inherit;\r\n  }\r\n\r\n  .mat-input-element {\r\n    caret-color: currentColor;\r\n  }\r\n}\r\n\r\n@mixin mat-toolbar-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-toolbar {\r\n    background: mat-color($background, app-bar);\r\n    color: mat-color($foreground, text);\r\n\r\n    &.mat-primary {\r\n      @include _mat-toolbar-color($primary);\r\n    }\r\n\r\n    &.mat-accent {\r\n      @include _mat-toolbar-color($accent);\r\n    }\r\n\r\n    &.mat-warn {\r\n      @include _mat-toolbar-color($warn);\r\n    }\r\n\r\n    @include _mat-toolbar-form-field-overrides;\r\n  }\r\n}\r\n\r\n@mixin mat-toolbar-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-toolbar,\r\n  .mat-toolbar h1,\r\n  .mat-toolbar h2,\r\n  .mat-toolbar h3,\r\n  .mat-toolbar h4,\r\n  .mat-toolbar h5,\r\n  .mat-toolbar h6 {\r\n    @include mat-typography-level-to-styles($config, title);\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n@mixin _mat-toolbar-density($config-or-theme) {\r\n  $density-scale: mat-get-density-config($config-or-theme);\r\n  $height-desktop: _mat-density-prop-value(\r\n      $mat-toolbar-desktop-density-config, $density-scale, height);\r\n  $height-mobile: _mat-density-prop-value(\r\n      $mat-toolbar-mobile-density-config, $density-scale, height);\r\n\r\n  @include _mat-density-legacy-compatibility() {\r\n    // Set the default height for the toolbar.\r\n    @include _mat-toolbar-height($height-desktop);\r\n\r\n    // As per specs, toolbars should have a different height in mobile devices. This has been\r\n    // specified in the old guidelines and is still observable in the new specifications by\r\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\r\n    @media ($mat-xsmall) {\r\n      @include _mat-toolbar-height($height-mobile);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-toolbar-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-toolbar') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-toolbar-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-toolbar-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-toolbar-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n$mat-tooltip-target-height: 22px;\r\n$mat-tooltip-font-size: 10px;\r\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\r\n\r\n$mat-tooltip-handset-target-height: 30px;\r\n$mat-tooltip-handset-font-size: 14px;\r\n$mat-tooltip-handset-vertical-padding:\r\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\r\n\r\n@mixin mat-tooltip-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n\r\n  .mat-tooltip {\r\n    background: mat-color($background, tooltip, 0.9);\r\n  }\r\n}\r\n\r\n@mixin mat-tooltip-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-tooltip {\r\n    font-family: mat-font-family($config);\r\n    font-size: $mat-tooltip-font-size;\r\n    padding-top: $mat-tooltip-vertical-padding;\r\n    padding-bottom: $mat-tooltip-vertical-padding;\r\n  }\r\n\r\n  .mat-tooltip-handset {\r\n    font-size: $mat-tooltip-handset-font-size;\r\n    padding-top: $mat-tooltip-handset-vertical-padding;\r\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\r\n  }\r\n}\r\n\r\n@mixin _mat-tooltip-density($config-or-theme) {}\r\n\r\n@mixin mat-tooltip-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tooltip') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-tooltip-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-tooltip-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-tooltip-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@mixin mat-snack-bar-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n  $accent: map-get($config, accent);\r\n\r\n  .mat-snack-bar-container {\r\n    // Use the primary text on the dark theme, even though the lighter one uses\r\n    // a secondary, because the contrast on the light primary text is poor.\r\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\r\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\r\n\r\n    @include _mat-theme-elevation(6, $config);\r\n  }\r\n\r\n  .mat-simple-snackbar-action {\r\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\r\n  }\r\n}\r\n\r\n@mixin mat-snack-bar-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-simple-snackbar {\r\n    font: {\r\n      family: mat-font-family($config, body-1);\r\n      size: mat-font-size($config, body-1);\r\n    }\r\n  }\r\n\r\n  .mat-simple-snackbar-action {\r\n    line-height: 1;\r\n    font: {\r\n      family: inherit;\r\n      size: inherit;\r\n      weight: mat-font-weight($config, button);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-snack-bar-density($config-or-theme) {}\r\n\r\n@mixin mat-snack-bar-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-snack-bar-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-snack-bar-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-snack-bar-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Theme styles that only apply to the fill appearance of the form-field.\r\n\r\n@mixin mat-form-field-fill-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n\r\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\r\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\r\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\r\n  $label-disabled-color: mat-color($foreground, disabled-text);\r\n\r\n  .mat-form-field-appearance-fill {\r\n    .mat-form-field-flex {\r\n      background-color: $fill-background;\r\n    }\r\n\r\n    &.mat-form-field-disabled .mat-form-field-flex {\r\n      background-color: $fill-disabled-background;\r\n    }\r\n\r\n    .mat-form-field-underline::before {\r\n      background-color: $underline-color;\r\n    }\r\n\r\n    &.mat-form-field-disabled {\r\n      .mat-form-field-label {\r\n        color: $label-disabled-color;\r\n      }\r\n\r\n      .mat-form-field-underline::before {\r\n        background-color: transparent;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\r\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\r\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\r\n// an unknown pseudo-class it will discard the entire rule set.\r\n$mat-form-field-fill-dedupe: 0;\r\n\r\n// Applies a floating label above the form field control itself.\r\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\r\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\r\n             scale($font-scale);\r\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\r\n\r\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\r\n}\r\n\r\n@mixin mat-form-field-fill-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  // The unit-less line-height from the font config.\r\n  $line-height: mat-line-height($config, input);\r\n  // The amount to scale the font for the floating label and subscript.\r\n  $subscript-font-scale: 0.75;\r\n  // The padding on top of the infix.\r\n  $infix-padding-top: 0.25em;\r\n  // The padding below the infix.\r\n  $infix-padding-bottom: 0.75em;\r\n  // The margin applied to the form-field-infix to reserve space for the floating label.\r\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\r\n  // The amount we offset the label from the input text in the fill appearance.\r\n  $fill-appearance-label-offset: -0.5em;\r\n\r\n  .mat-form-field-appearance-fill {\r\n    .mat-form-field-infix {\r\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\r\n    }\r\n\r\n    .mat-form-field-label {\r\n      top: $infix-margin-top + $infix-padding-top;\r\n      margin-top: $fill-appearance-label-offset;\r\n    }\r\n\r\n    &.mat-form-field-can-float {\r\n      &.mat-form-field-should-float .mat-form-field-label,\r\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n        @include _mat-form-field-fill-label-floating(\r\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\r\n                $infix-margin-top);\r\n      }\r\n\r\n      // Server-side rendered matInput with a label attribute but label not shown\r\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n      .mat-form-field-label {\r\n        @include _mat-form-field-fill-label-floating(\r\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\r\n                $infix-margin-top);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-form-field-fill-density($config-or-theme) {}\r\n\r\n@mixin mat-form-field-fill-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-form-field-fill-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-form-field-fill-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-form-field-fill-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Theme styles that only apply to the legacy appearance of the form-field.\r\n\r\n@mixin mat-form-field-legacy-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n\r\n  $label-color: mat-color($foreground, secondary-text);\r\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\r\n\r\n  .mat-form-field-appearance-legacy {\r\n    .mat-form-field-label {\r\n      color: $label-color;\r\n    }\r\n\r\n    .mat-hint {\r\n      color: $label-color;\r\n    }\r\n\r\n    .mat-form-field-underline {\r\n      background-color: $underline-color;\r\n    }\r\n\r\n    &.mat-form-field-disabled .mat-form-field-underline {\r\n      @include mat-control-disabled-underline($underline-color);\r\n    }\r\n  }\r\n}\r\n\r\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\r\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\r\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\r\n// an unknown pseudo-class it will discard the entire rule set.\r\n$mat-form-field-legacy-dedupe: 0;\r\n\r\n// Applies a floating label above the form field control itself.\r\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\r\n  // We use perspective to fix the text blurriness as described here:\r\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\r\n  // This results in a small jitter after the label floats on Firefox, which the\r\n  // translateZ fixes.\r\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\r\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\r\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\r\n  // worse on IE, so we don't include them in the IE version.\r\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\r\n                  scale($font-scale);\r\n\r\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\r\n\r\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\r\n}\r\n\r\n// Same as mixin above, but omits the translateZ for printing purposes.\r\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\r\n  // This results in a small jitter after the label floats on Firefox, which the\r\n  // translateZ fixes.\r\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\r\n                  scale($font-scale);\r\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\r\n  // worse on IE, so we don't include them in the IE version.\r\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\r\n}\r\n\r\n@mixin mat-form-field-legacy-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  // The unit-less line-height from the font config.\r\n  $line-height: mat-line-height($config, input);\r\n  // The amount to scale the font for the floating label and subscript.\r\n  $subscript-font-scale: 0.75;\r\n  // The amount of space between the top of the line and the top of the actual text\r\n  // (as a fraction of the font-size).\r\n  $line-spacing: ($line-height - 1) / 2;\r\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\r\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\r\n  $infix-padding: 0.5em - $line-spacing;\r\n  // The margin applied to the form-field-infix to reserve space for the floating label.\r\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\r\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\r\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\r\n  // text font size, so we need to divide by the scale factor to make it half of the original text\r\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\r\n  // text, not the  edge of the line.\r\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\r\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\r\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\r\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\r\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\r\n\r\n  .mat-form-field-appearance-legacy {\r\n    .mat-form-field-wrapper {\r\n      padding-bottom: $wrapper-padding-bottom;\r\n    }\r\n\r\n    .mat-form-field-infix {\r\n      padding: $infix-padding 0;\r\n    }\r\n\r\n    &.mat-form-field-can-float {\r\n      &.mat-form-field-should-float .mat-form-field-label,\r\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n        @include _mat-form-field-legacy-label-floating(\r\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n      }\r\n\r\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\r\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\r\n      .mat-form-field-label {\r\n        @include _mat-form-field-legacy-label-floating(\r\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n      }\r\n\r\n      // Server-side rendered matInput with a label attribute but label not shown\r\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n      .mat-form-field-label {\r\n        @include _mat-form-field-legacy-label-floating(\r\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n      }\r\n    }\r\n\r\n    .mat-form-field-label {\r\n      top: $infix-margin-top + $infix-padding;\r\n    }\r\n\r\n    .mat-form-field-underline {\r\n      // We want the underline to start at the end of the content box, not the padding box,\r\n      // so we move it up by the padding amount.\r\n      bottom: $wrapper-padding-bottom;\r\n    }\r\n\r\n    .mat-form-field-subscript-wrapper {\r\n      margin-top: $subscript-margin-top;\r\n\r\n      // We want the subscript to start at the end of the content box, not the padding box,\r\n      // so we move it up by the padding amount (adjusted for the smaller font size);\r\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\r\n    }\r\n  }\r\n\r\n  // translateZ causes the label to not appear while printing, so we override it to not\r\n  // apply translateZ while printing\r\n  @media print {\r\n    .mat-form-field-appearance-legacy {\r\n      &.mat-form-field-can-float {\r\n        &.mat-form-field-should-float .mat-form-field-label,\r\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n          @include _mat-form-field-legacy-label-floating-print(\r\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n        }\r\n\r\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\r\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\r\n        .mat-form-field-label {\r\n          @include _mat-form-field-legacy-label-floating-print(\r\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n        }\r\n\r\n        // Server-side rendered matInput with a label attribute but label not shown\r\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n        .mat-form-field-label {\r\n          @include _mat-form-field-legacy-label-floating-print(\r\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-form-field-legacy-density($config-or-theme) {}\r\n\r\n@mixin mat-form-field-legacy-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-form-field-legacy-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-form-field-legacy-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-form-field-legacy-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Theme styles that only apply to the outline appearance of the form-field.\r\n\r\n@mixin mat-form-field-outline-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $foreground: map-get($config, foreground);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n\r\n  $label-disabled-color: mat-color($foreground, disabled-text);\r\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\r\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\r\n  $outline-color-primary: mat-color($primary);\r\n  $outline-color-accent: mat-color($accent);\r\n  $outline-color-warn: mat-color($warn);\r\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\r\n\r\n  .mat-form-field-appearance-outline {\r\n    .mat-form-field-outline {\r\n      color: $outline-color;\r\n    }\r\n\r\n    .mat-form-field-outline-thick {\r\n      color: $outline-color-hover;\r\n    }\r\n\r\n    &.mat-focused {\r\n      .mat-form-field-outline-thick {\r\n        color: $outline-color-primary;\r\n      }\r\n\r\n      &.mat-accent .mat-form-field-outline-thick {\r\n        color: $outline-color-accent;\r\n      }\r\n\r\n      &.mat-warn .mat-form-field-outline-thick {\r\n        color: $outline-color-warn;\r\n      }\r\n    }\r\n\r\n    // Class repeated so that rule is specific enough to override focused accent color case.\r\n    &.mat-form-field-invalid.mat-form-field-invalid {\r\n      .mat-form-field-outline-thick {\r\n        color: $outline-color-warn;\r\n      }\r\n    }\r\n\r\n    &.mat-form-field-disabled {\r\n      .mat-form-field-label {\r\n        color: $label-disabled-color;\r\n      }\r\n\r\n      .mat-form-field-outline {\r\n        color: $outline-color-disabled;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\r\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\r\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\r\n// an unknown pseudo-class it will discard the entire rule set.\r\n$mat-form-field-outline-dedupe: 0;\r\n\r\n// Applies a floating label above the form field control itself.\r\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\r\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\r\n  scale($font-scale);\r\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\r\n\r\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\r\n}\r\n\r\n@mixin mat-form-field-outline-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  // The unit-less line-height from the font config.\r\n  $line-height: mat-line-height($config, input);\r\n  // The amount to scale the font for the floating label and subscript.\r\n  $subscript-font-scale: 0.75;\r\n  // The padding above and below the infix.\r\n  $infix-padding: 1em;\r\n  // The margin applied to the form-field-infix to reserve space for the floating label.\r\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\r\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\r\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\r\n  // text font size, so we need to divide by the scale factor to make it half of the original text\r\n  // size.\r\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\r\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\r\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\r\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\r\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\r\n  // The amount we offset the label from the input text in the outline appearance.\r\n  $outline-appearance-label-offset: -0.25em;\r\n\r\n  .mat-form-field-appearance-outline {\r\n    .mat-form-field-infix {\r\n      padding: $infix-padding 0 $infix-padding 0;\r\n    }\r\n\r\n    .mat-form-field-label {\r\n      top: $infix-margin-top + $infix-padding;\r\n      margin-top: $outline-appearance-label-offset;\r\n    }\r\n\r\n    &.mat-form-field-can-float {\r\n      &.mat-form-field-should-float .mat-form-field-label,\r\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n        @include _mat-form-field-outline-label-floating(\r\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\r\n                $infix-margin-top);\r\n      }\r\n\r\n      // Server-side rendered matInput with a label attribute but label not shown\r\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n      .mat-form-field-label {\r\n        @include _mat-form-field-outline-label-floating(\r\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\r\n                $infix-margin-top);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin _mat-form-field-outline-density($config-or-theme) {}\r\n\r\n@mixin mat-form-field-outline-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-form-field-outline-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-form-field-outline-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-form-field-outline-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Theme styles that only apply to the standard appearance of the form-field.\r\n\r\n@mixin mat-form-field-standard-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $foreground: map-get($config, foreground);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n\r\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\r\n\r\n  .mat-form-field-appearance-standard {\r\n    .mat-form-field-underline {\r\n      background-color: $underline-color;\r\n    }\r\n\r\n    &.mat-form-field-disabled .mat-form-field-underline {\r\n      @include mat-control-disabled-underline($underline-color);\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-form-field-standard-typography($config-or-theme) {}\r\n\r\n@mixin _mat-form-field-standard-density($config-or-theme) {}\r\n\r\n@mixin mat-form-field-standard-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-form-field-standard-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-form-field-standard-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-form-field-standard-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Color styles that apply to all appearances of the form-field.\r\n@mixin mat-form-field-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $primary: map-get($config, primary);\r\n  $accent: map-get($config, accent);\r\n  $warn: map-get($config, warn);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n  $is-dark-theme: map-get($config, is-dark);\r\n\r\n  // Label colors. Required is used for the `*` star shown in the label.\r\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\r\n  $focused-label-color: mat-color($primary, text);\r\n  $required-label-color: mat-color($accent, text);\r\n\r\n  // Underline colors.\r\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\r\n  $underline-color-accent: mat-color($accent, text);\r\n  $underline-color-warn: mat-color($warn, text);\r\n  $underline-focused-color: mat-color($primary, text);\r\n\r\n  .mat-form-field-label {\r\n    color: $label-color;\r\n  }\r\n\r\n  .mat-hint {\r\n    color: $label-color;\r\n  }\r\n\r\n  .mat-form-field.mat-focused .mat-form-field-label {\r\n    color: $focused-label-color;\r\n\r\n    &.mat-accent {\r\n      color: $underline-color-accent;\r\n    }\r\n\r\n    &.mat-warn {\r\n      color: $underline-color-warn;\r\n    }\r\n  }\r\n\r\n  .mat-focused .mat-form-field-required-marker {\r\n    color: $required-label-color;\r\n  }\r\n\r\n  .mat-form-field-ripple {\r\n    background-color: $underline-color-base;\r\n  }\r\n\r\n  .mat-form-field.mat-focused {\r\n    .mat-form-field-ripple {\r\n      background-color: $underline-focused-color;\r\n\r\n      &.mat-accent {\r\n        background-color: $underline-color-accent;\r\n      }\r\n\r\n      &.mat-warn {\r\n        background-color: $underline-color-warn;\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\r\n    .mat-form-field-infix::after {\r\n      color: $underline-focused-color;\r\n    }\r\n\r\n    &.mat-accent .mat-form-field-infix::after {\r\n      color: $underline-color-accent;\r\n    }\r\n\r\n    &.mat-warn .mat-form-field-infix::after {\r\n      color: $underline-color-warn;\r\n    }\r\n  }\r\n\r\n  // Styling for the error state of the form field. Note that while the same can be\r\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\r\n  // logic is used to style the error state and to show the error messages.\r\n  .mat-form-field.mat-form-field-invalid {\r\n    .mat-form-field-label {\r\n      color: $underline-color-warn;\r\n\r\n      &.mat-accent,\r\n      .mat-form-field-required-marker {\r\n        color: $underline-color-warn;\r\n      }\r\n    }\r\n\r\n    .mat-form-field-ripple,\r\n    .mat-form-field-ripple.mat-accent {\r\n      background-color: $underline-color-warn;\r\n    }\r\n  }\r\n\r\n  .mat-error {\r\n    color: $underline-color-warn;\r\n  }\r\n\r\n  @include mat-form-field-legacy-color($config);\r\n  @include mat-form-field-standard-color($config);\r\n  @include mat-form-field-fill-color($config);\r\n  @include mat-form-field-outline-color($config);\r\n}\r\n\r\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\r\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\r\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\r\n// an unknown pseudo-class it will discard the entire rule set.\r\n$mat-form-field-dedupe: 0;\r\n\r\n// Applies a floating label above the form field control itself.\r\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\r\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\r\n             scale($font-scale);\r\n  width: 100% / $font-scale + $mat-form-field-dedupe;\r\n\r\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\r\n}\r\n\r\n@mixin mat-form-field-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  // The unit-less line-height from the font config.\r\n  $line-height: mat-line-height($config, input);\r\n\r\n  // The amount to scale the font for the floating label and subscript.\r\n  $subscript-font-scale: 0.75;\r\n  // The amount to scale the font for the prefix and suffix icons.\r\n  $prefix-suffix-icon-font-scale: 1.5;\r\n\r\n  // The padding on the infix. Mocks show half of the text size.\r\n  $infix-padding: 0.5em;\r\n  // The margin applied to the form-field-infix to reserve space for the floating label.\r\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\r\n  // Font size to use for the label and subscript text.\r\n  $subscript-font-size: $subscript-font-scale * 100%;\r\n  // Font size to use for the for the prefix and suffix icons.\r\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\r\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\r\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\r\n  // text font size, so we need to divide by the scale factor to make it half of the original text\r\n  // size.\r\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\r\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\r\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\r\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\r\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\r\n\r\n  .mat-form-field {\r\n    @include mat-typography-level-to-styles($config, input);\r\n  }\r\n\r\n  .mat-form-field-wrapper {\r\n    padding-bottom: $wrapper-padding-bottom;\r\n  }\r\n\r\n  .mat-form-field-prefix,\r\n  .mat-form-field-suffix {\r\n    // Allow icons in a prefix or suffix to adapt to the correct size.\r\n    .mat-icon {\r\n      font-size: $prefix-suffix-icon-font-size;\r\n      line-height: $line-height;\r\n    }\r\n\r\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\r\n    .mat-icon-button {\r\n      height: $prefix-suffix-icon-font-scale * 1em;\r\n      width: $prefix-suffix-icon-font-scale * 1em;\r\n\r\n      .mat-icon {\r\n        height: $line-height * 1em;\r\n        line-height: $line-height;\r\n      }\r\n    }\r\n  }\r\n\r\n  .mat-form-field-infix {\r\n    padding: $infix-padding 0;\r\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\r\n    border-top: $infix-margin-top solid transparent;\r\n  }\r\n\r\n  .mat-form-field-can-float {\r\n    &.mat-form-field-should-float .mat-form-field-label,\r\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\r\n      @include _mat-form-field-label-floating(\r\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n    }\r\n\r\n    // Server-side rendered matInput with a label attribute but label not shown\r\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\r\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\r\n        .mat-form-field-label {\r\n      @include _mat-form-field-label-floating(\r\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\r\n    }\r\n  }\r\n\r\n  .mat-form-field-label-wrapper {\r\n    top: -$infix-margin-top;\r\n    padding-top: $infix-margin-top;\r\n  }\r\n\r\n  .mat-form-field-label {\r\n    top: $infix-margin-top + $infix-padding;\r\n  }\r\n\r\n  .mat-form-field-underline {\r\n    // We want the underline to start at the end of the content box, not the padding box,\r\n    // so we move it up by the padding amount.\r\n    bottom: $wrapper-padding-bottom;\r\n  }\r\n\r\n  .mat-form-field-subscript-wrapper {\r\n    font-size: $subscript-font-size;\r\n    margin-top: $subscript-margin-top;\r\n\r\n    // We want the subscript to start at the end of the content box, not the padding box,\r\n    // so we move it up by the padding amount (adjusted for the smaller font size);\r\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\r\n  }\r\n\r\n  @include mat-form-field-legacy-typography($config);\r\n  @include mat-form-field-standard-typography($config);\r\n  @include mat-form-field-fill-typography($config);\r\n  @include mat-form-field-outline-typography($config);\r\n}\r\n\r\n@mixin _mat-form-field-density($config-or-theme) {\r\n  $density-scale: mat-get-density-config($config-or-theme);\r\n  @include _mat-form-field-legacy-density($density-scale);\r\n  @include _mat-form-field-standard-density($density-scale);\r\n  @include _mat-form-field-fill-density($density-scale);\r\n  @include _mat-form-field-outline-density($density-scale);\r\n}\r\n\r\n@mixin mat-form-field-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-form-field') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-form-field-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-form-field-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-form-field-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n$mat-tree-node-height: 48px !default;\r\n// Minimum height for tree nodes in highest density is difficult to determine as\r\n// developers can display arbitrary content. We use a minimum height which ensures\r\n// that common content placed in tree nodes does not exceed (e.g. icons, checkboxes).\r\n$mat-tree-node-minimum-height: 24px !default;\r\n$mat-tree-node-maximum-height: $mat-tree-node-height !default;\r\n\r\n$mat-tree-density-config: (\r\n  height: (\r\n    default: $mat-tree-node-height,\r\n    maximum: $mat-tree-node-maximum-height,\r\n    minimum: $mat-tree-node-minimum-height,\r\n  )\r\n) !default;\r\n\r\n\r\n@mixin mat-tree-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  $background: map-get($config, background);\r\n  $foreground: map-get($config, foreground);\r\n\r\n  .mat-tree {\r\n    background: mat-color($background, 'card');\r\n  }\r\n\r\n  .mat-tree-node,\r\n  .mat-nested-tree-node {\r\n    color: mat-color($foreground, text);\r\n  }\r\n}\r\n\r\n@mixin mat-tree-typography($config-or-theme) {\r\n  $config: mat-get-typography-config($config-or-theme);\r\n  .mat-tree {\r\n    font-family: mat-font-family($config);\r\n  }\r\n\r\n  .mat-tree-node,\r\n  .mat-nested-tree-node {\r\n    font-weight: mat-font-weight($config, body-1);\r\n    font-size: mat-font-size($config, body-1);\r\n  }\r\n}\r\n\r\n@mixin _mat-tree-density($config-or-theme) {\r\n  $density-scale: mat-get-density-config($config-or-theme);\r\n  $height: _mat-density-prop-value($mat-tree-density-config, $density-scale, height);\r\n\r\n  @include _mat-density-legacy-compatibility() {\r\n    .mat-tree-node {\r\n      min-height: $height;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin mat-tree-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-tree') {\r\n    $color: mat-get-color-config($theme);\r\n    $density: mat-get-density-config($theme);\r\n    $typography: mat-get-typography-config($theme);\r\n\r\n    @if $color != null {\r\n      @include mat-tree-color($color);\r\n    }\r\n    @if $density != null {\r\n      @include _mat-tree-density($density);\r\n    }\r\n    @if $typography != null {\r\n      @include mat-tree-typography($typography);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n// Includes all of the typographic styles.\r\n@mixin angular-material-typography($config-or-theme: null) {\r\n  $config: if(_mat-is-theme-object($config-or-theme),\r\n      mat-get-typography-config($config-or-theme), $config-or-theme);\r\n\r\n  // If no actual color configuration has been specified, create a default one.\r\n  @if not $config {\r\n    $config: mat-typography-config();\r\n  }\r\n\r\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\r\n  // specify a `typography` config while setting `color` and `density` to `null`. This is currently\r\n  // not possible as it would introduce a circular dependency for typography because the `mat-core`\r\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-typography` which\r\n  // would then load `all-theme` again. This ultimately results a circular dependency.\r\n\r\n  @include mat-badge-typography($config);\r\n  @include mat-base-typography($config);\r\n  @include mat-autocomplete-typography($config);\r\n  @include mat-bottom-sheet-typography($config);\r\n  @include mat-button-typography($config);\r\n  @include mat-button-toggle-typography($config);\r\n  @include mat-card-typography($config);\r\n  @include mat-checkbox-typography($config);\r\n  @include mat-chips-typography($config);\r\n  @include mat-divider-typography($config);\r\n  @include mat-table-typography($config);\r\n  @include mat-datepicker-typography($config);\r\n  @include mat-dialog-typography($config);\r\n  @include mat-expansion-panel-typography($config);\r\n  @include mat-form-field-typography($config);\r\n  @include mat-grid-list-typography($config);\r\n  @include mat-icon-typography($config);\r\n  @include mat-input-typography($config);\r\n  @include mat-menu-typography($config);\r\n  @include mat-paginator-typography($config);\r\n  @include mat-progress-bar-typography($config);\r\n  @include mat-progress-spinner-typography($config);\r\n  @include mat-radio-typography($config);\r\n  @include mat-select-typography($config);\r\n  @include mat-sidenav-typography($config);\r\n  @include mat-slide-toggle-typography($config);\r\n  @include mat-slider-typography($config);\r\n  @include mat-stepper-typography($config);\r\n  @include mat-sort-typography($config);\r\n  @include mat-tabs-typography($config);\r\n  @include mat-toolbar-typography($config);\r\n  @include mat-tooltip-typography($config);\r\n  @include mat-list-typography($config);\r\n  @include mat-option-typography($config);\r\n  @include mat-optgroup-typography($config);\r\n  @include mat-snack-bar-typography($config);\r\n  @include mat-tree-typography($config);\r\n}\r\n\r\n\r\n// Mixin that renders all of the core styles that are not theme-dependent.\r\n@mixin mat-core($typography-config: null) {\r\n  @include angular-material-typography($typography-config);\r\n  @include mat-ripple();\r\n  @include cdk-a11y();\r\n  @include cdk-overlay();\r\n  @include cdk-text-field();\r\n\r\n  @include _mat-strong-focus-indicators-positioning();\r\n  @include _mat-mdc-core();\r\n}\r\n\r\n@mixin mat-core-color($config-or-theme) {\r\n  $config: mat-get-color-config($config-or-theme);\r\n  // Wrapper element that provides the theme background when the user's content isn't\r\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\r\n  // selector in case the mixin is included at the top level.\r\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\r\n    $background: map-get($config, background);\r\n    $foreground: map-get($config, foreground);\r\n\r\n    background-color: mat-color($background, background);\r\n    color: mat-color($foreground, text);\r\n  }\r\n\r\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\r\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\r\n  // elevated.\r\n  @for $zValue from 0 through 24 {\r\n    .#{$_mat-elevation-prefix}#{$zValue} {\r\n      @include _mat-theme-elevation($zValue, $config);\r\n    }\r\n  }\r\n\r\n  // Marker that is used to determine whether the user has added a theme to their page.\r\n  @at-root {\r\n    .mat-theme-loaded-marker {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n\r\n// Mixin that renders all of the core styles that depend on the theme.\r\n@mixin mat-core-theme($theme-or-color-config) {\r\n  $theme: _mat-legacy-get-theme($theme-or-color-config);\r\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\r\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\r\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\r\n  @include _mat-check-duplicate-theme-styles($theme, 'mat-core') {\r\n    @include mat-ripple-theme($theme);\r\n    @include mat-option-theme($theme);\r\n    @include mat-optgroup-theme($theme);\r\n    @include mat-pseudo-checkbox-theme($theme);\r\n\r\n    $color: mat-get-color-config($theme);\r\n    @if $color != null {\r\n      @include mat-core-color($color);\r\n    }\r\n  }\r\n}\r\n\r\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\r\n@mixin _mat-mdc-core() {\r\n  @include _mat-mdc-strong-focus-indicators-positioning();\r\n}\r\n\r\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\r\n// pseudo element within is positioned relative to the host. Private mixin included within\r\n// `_mat-mdc-core`.\r\n@mixin _mat-mdc-strong-focus-indicators-positioning() {\r\n  .mat-mdc-focus-indicator {\r\n    position: relative;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Create a theme.\r\n@mixin angular-material-theme($theme-or-color-config) {\r\n  @include _mat-check-duplicate-theme-styles($theme-or-color-config, 'angular-material-theme') {\r\n    @include mat-core-theme($theme-or-color-config);\r\n    @include mat-autocomplete-theme($theme-or-color-config);\r\n    @include mat-badge-theme($theme-or-color-config);\r\n    @include mat-bottom-sheet-theme($theme-or-color-config);\r\n    @include mat-button-theme($theme-or-color-config);\r\n    @include mat-button-toggle-theme($theme-or-color-config);\r\n    @include mat-card-theme($theme-or-color-config);\r\n    @include mat-checkbox-theme($theme-or-color-config);\r\n    @include mat-chips-theme($theme-or-color-config);\r\n    @include mat-table-theme($theme-or-color-config);\r\n    @include mat-datepicker-theme($theme-or-color-config);\r\n    @include mat-dialog-theme($theme-or-color-config);\r\n    @include mat-divider-theme($theme-or-color-config);\r\n    @include mat-expansion-panel-theme($theme-or-color-config);\r\n    @include mat-form-field-theme($theme-or-color-config);\r\n    @include mat-grid-list-theme($theme-or-color-config);\r\n    @include mat-icon-theme($theme-or-color-config);\r\n    @include mat-input-theme($theme-or-color-config);\r\n    @include mat-list-theme($theme-or-color-config);\r\n    @include mat-menu-theme($theme-or-color-config);\r\n    @include mat-paginator-theme($theme-or-color-config);\r\n    @include mat-progress-bar-theme($theme-or-color-config);\r\n    @include mat-progress-spinner-theme($theme-or-color-config);\r\n    @include mat-radio-theme($theme-or-color-config);\r\n    @include mat-select-theme($theme-or-color-config);\r\n    @include mat-sidenav-theme($theme-or-color-config);\r\n    @include mat-slide-toggle-theme($theme-or-color-config);\r\n    @include mat-slider-theme($theme-or-color-config);\r\n    @include mat-stepper-theme($theme-or-color-config);\r\n    @include mat-sort-theme($theme-or-color-config);\r\n    @include mat-tabs-theme($theme-or-color-config);\r\n    @include mat-toolbar-theme($theme-or-color-config);\r\n    @include mat-tooltip-theme($theme-or-color-config);\r\n    @include mat-tree-theme($theme-or-color-config);\r\n    @include mat-snack-bar-theme($theme-or-color-config);\r\n  }\r\n}\r\n\r\n\r\n// Includes all of the color styles.\r\n@mixin angular-material-color($config-or-theme) {\r\n  // In case a theme object has been passed instead of a configuration for\r\n  // the color system, extract the color config from the theme object.\r\n  $config: if(_mat-is-theme-object($config-or-theme),\r\n      mat-get-color-config($config-or-theme), $config-or-theme);\r\n\r\n  @if $config == null {\r\n    @error 'No color configuration specified.';\r\n  }\r\n\r\n  @include angular-material-theme((\r\n    color: $config,\r\n    typography: null,\r\n    density: null,\r\n  ));\r\n}\r\n\r\n\r\n\r\n// Includes all of the density styles.\r\n@mixin _angular-material-density($config-or-theme) {\r\n  // In case a theme object has been passed instead of a configuration for\r\n  // the density system, extract the density config from the theme object.\r\n  $config: if(_mat-is-theme-object($config-or-theme),\r\n      mat-get-density-config($config-or-theme), $config-or-theme);\r\n\r\n  @if $config == null {\r\n    @error 'No density configuration specified.';\r\n  }\r\n\r\n  @include angular-material-theme((\r\n    color: null,\r\n    typography: null,\r\n    density: $config,\r\n  ));\r\n}\r\n\r\n\r\n\r\n","/* Colors for the ripple elements.*/\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable-next-line material/theme-mixin-api */\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.mat-badge-content {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-badge-small .mat-badge-content {\n  font-size: 9px;\n}\n\n.mat-badge-large .mat-badge-content {\n  font-size: 24px;\n}\n\n.mat-h1, .mat-headline, .mat-typography h1 {\n  font: 400 24px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n\n.mat-h2, .mat-title, .mat-typography h2 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\n  font: 400 16px/28px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\n  font: 400 15px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px;\n}\n\n.mat-h5, .mat-typography h5 {\n  font: 400 calc(14px * 0.83)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px;\n}\n\n.mat-h6, .mat-typography h6 {\n  font: 400 calc(14px * 0.67)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px;\n}\n\n.mat-body-strong, .mat-body-2 {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-body, .mat-body-1, .mat-typography {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n.mat-body p, .mat-body-1 p, .mat-typography p {\n  margin: 0 0 12px;\n}\n\n.mat-small, .mat-caption {\n  font: 400 12px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-display-4, .mat-typography .mat-display-4 {\n  font: 300 112px/112px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.05em;\n  margin: 0 0 56px;\n}\n\n.mat-display-3, .mat-typography .mat-display-3 {\n  font: 400 56px/56px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.02em;\n  margin: 0 0 64px;\n}\n\n.mat-display-2, .mat-typography .mat-display-2 {\n  font: 400 45px/48px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.005em;\n  margin: 0 0 64px;\n}\n\n.mat-display-1, .mat-typography .mat-display-1 {\n  font: 400 34px/40px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 64px;\n}\n\n.mat-bottom-sheet-container {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n.mat-flat-button, .mat-fab, .mat-mini-fab {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-button-toggle {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-card {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-card-title {\n  font-size: 24px;\n  font-weight: 500;\n}\n\n.mat-card-header .mat-card-title {\n  font-size: 20px;\n}\n\n.mat-card-subtitle,\n.mat-card-content {\n  font-size: 14px;\n}\n\n.mat-checkbox {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-checkbox-layout .mat-checkbox-label {\n  line-height: 24px;\n}\n\n.mat-chip {\n  font-size: 14px;\n  font-weight: 500;\n}\n.mat-chip .mat-chip-trailing-icon.mat-icon,\n.mat-chip .mat-chip-remove.mat-icon {\n  font-size: 18px;\n}\n\n.mat-table {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-header-cell {\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.mat-cell, .mat-footer-cell {\n  font-size: 14px;\n}\n\n.mat-calendar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-calendar-body {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-dialog-title {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-expansion-panel-header {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-expansion-panel-content {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-form-field {\n  font-size: inherit;\n  font-weight: 400;\n  line-height: 1.125;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-form-field-wrapper {\n  padding-bottom: 1.34375em;\n}\n\n.mat-form-field-prefix .mat-icon,\n.mat-form-field-suffix .mat-icon {\n  font-size: 150%;\n  line-height: 1.125;\n}\n.mat-form-field-prefix .mat-icon-button,\n.mat-form-field-suffix .mat-icon-button {\n  height: 1.5em;\n  width: 1.5em;\n}\n.mat-form-field-prefix .mat-icon-button .mat-icon,\n.mat-form-field-suffix .mat-icon-button .mat-icon {\n  height: 1.125em;\n  line-height: 1.125;\n}\n\n.mat-form-field-infix {\n  padding: 0.5em 0;\n  border-top: 0.84375em solid transparent;\n}\n\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34374em) scale(0.75);\n  width: 133.3333433333%;\n}\n\n.mat-form-field-label-wrapper {\n  top: -0.84375em;\n  padding-top: 0.84375em;\n}\n\n.mat-form-field-label {\n  top: 1.34375em;\n}\n\n.mat-form-field-underline {\n  bottom: 1.34375em;\n}\n\n.mat-form-field-subscript-wrapper {\n  font-size: 75%;\n  margin-top: 0.6666666667em;\n  top: calc(100% - 1.7916666667em);\n}\n\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-infix {\n  padding: 0.4375em 0;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n  -ms-transform: translateY(-1.28125em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\n  -ms-transform: translateY(-1.28124em) scale(0.75);\n  width: 133.3333433333%;\n}\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\n  -ms-transform: translateY(-1.28123em) scale(0.75);\n  width: 133.3333533333%;\n}\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  top: 1.28125em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  bottom: 1.25em;\n}\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\n  margin-top: 0.5416666667em;\n  top: calc(100% - 1.6666666667em);\n}\n\n@media print {\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28122em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28121em) scale(0.75);\n  }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.2812em) scale(0.75);\n  }\n}\n.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.75em 0;\n}\n.mat-form-field-appearance-fill .mat-form-field-label {\n  top: 1.09375em;\n  margin-top: -0.5em;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n\n.mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 1em 0 1em 0;\n}\n.mat-form-field-appearance-outline .mat-form-field-label {\n  top: 1.84375em;\n  margin-top: -0.25em;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59375em) scale(0.75);\n  width: 133.3333333333%;\n}\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59374em) scale(0.75);\n  width: 133.3333433333%;\n}\n\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px;\n}\n.mat-grid-tile-header .mat-line,\n.mat-grid-tile-footer .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header .mat-line:nth-child(n+2),\n.mat-grid-tile-footer .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n\ninput.mat-input-element {\n  margin-top: -0.0625em;\n}\n\n.mat-menu-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n}\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n}\n\n.mat-radio-button {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-select {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-select-trigger {\n  height: 1.125em;\n}\n\n.mat-slide-toggle-content {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-slider-thumb-label-text {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.mat-stepper-vertical, .mat-stepper-horizontal {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-step-label {\n  font-size: 14px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error {\n  font-weight: normal;\n}\n\n.mat-step-label-error {\n  font-size: 14px;\n}\n\n.mat-step-label-selected {\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-tab-group {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-tab-label, .mat-tab-link {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0;\n}\n\n.mat-tooltip {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 10px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n}\n\n.mat-tooltip-handset {\n  font-size: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n\n.mat-list-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-list-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-list-base .mat-list-item {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-list-option {\n  font-size: 16px;\n}\n.mat-list-base .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 14px;\n}\n.mat-list-base .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-list-base[dense] .mat-list-item {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-item .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-list-option .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n.mat-list-base[dense] .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500;\n}\n\n.mat-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 16px;\n}\n\n.mat-optgroup-label {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n}\n\n.mat-simple-snackbar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n}\n\n.mat-simple-snackbar-action {\n  line-height: 1;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500;\n}\n\n.mat-tree {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  font-weight: 400;\n  font-size: 14px;\n}\n\n.mat-ripple {\n  overflow: hidden;\n  position: relative;\n}\n.mat-ripple:not(:empty) {\n  transform: translateZ(0);\n}\n\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible;\n}\n\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0);\n}\n.cdk-high-contrast-active .mat-ripple-element {\n  display: none;\n}\n\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  outline: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000;\n}\n.cdk-overlay-container:empty {\n  display: none;\n}\n\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000;\n}\n\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0;\n}\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 1;\n}\n@media screen and (-ms-high-contrast: active) {\n  .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n    opacity: 0.6;\n  }\n}\n\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32);\n}\n\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0;\n}\n\n.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px;\n}\n\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll;\n}\n\n@keyframes cdk-text-field-autofill-start {\n  /*!*/\n}\n@keyframes cdk-text-field-autofill-end {\n  /*!*/\n}\n.cdk-text-field-autofill-monitored:-webkit-autofill {\n  animation: cdk-text-field-autofill-start 0s 1ms;\n}\n\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n  animation: cdk-text-field-autofill-end 0s 1ms;\n}\n\ntextarea.cdk-textarea-autosize {\n  resize: none;\n}\n\ntextarea.cdk-textarea-autosize-measuring {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: auto !important;\n  overflow: hidden !important;\n}\n\ntextarea.cdk-textarea-autosize-measuring-firefox {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: 0 !important;\n}\n\n.mat-focus-indicator {\n  position: relative;\n}\n\n.mat-mdc-focus-indicator {\n  position: relative;\n}\n\n.mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.mat-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n.mat-option.mat-active {\n  background: rgba(0, 0, 0, 0.04);\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-option.mat-option-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #3f51b5;\n}\n\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #ff4081;\n}\n\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #f44336;\n}\n\n.mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-pseudo-checkbox::after {\n  color: #fafafa;\n}\n\n.mat-pseudo-checkbox-disabled {\n  color: #b0b0b0;\n}\n\n.mat-primary .mat-pseudo-checkbox-checked,\n.mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #3f51b5;\n}\n\n.mat-pseudo-checkbox-checked,\n.mat-pseudo-checkbox-indeterminate,\n.mat-accent .mat-pseudo-checkbox-checked,\n.mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #ff4081;\n}\n\n.mat-warn .mat-pseudo-checkbox-checked,\n.mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #f44336;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #b0b0b0;\n}\n\n.mat-app-background {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker {\n  display: none;\n}\n\n.mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-autocomplete-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n  background: white;\n}\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-badge-content {\n  color: white;\n  background: #3f51b5;\n}\n.cdk-high-contrast-active .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent .mat-badge-content {\n  background: #ff4081;\n  color: white;\n}\n\n.mat-badge-warn .mat-badge-content {\n  color: white;\n  background: #f44336;\n}\n\n.mat-badge {\n  position: relative;\n}\n\n.mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n\n.mat-badge-disabled .mat-badge-content {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled .mat-badge-content,\n.mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active {\n  transform: none;\n}\n\n.mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n\n.mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-button, .mat-icon-button, .mat-stroked-button {\n  color: inherit;\n  background: transparent;\n}\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n  color: #3f51b5;\n}\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\n  color: #ff4081;\n}\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\n  color: #f44336;\n}\n.mat-button.mat-primary.mat-button-disabled, .mat-button.mat-accent.mat-button-disabled, .mat-button.mat-warn.mat-button-disabled, .mat-button.mat-button-disabled.mat-button-disabled, .mat-icon-button.mat-primary.mat-button-disabled, .mat-icon-button.mat-accent.mat-button-disabled, .mat-icon-button.mat-warn.mat-button-disabled, .mat-icon-button.mat-button-disabled.mat-button-disabled, .mat-stroked-button.mat-primary.mat-button-disabled, .mat-stroked-button.mat-accent.mat-button-disabled, .mat-stroked-button.mat-warn.mat-button-disabled, .mat-stroked-button.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n  background-color: #3f51b5;\n}\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n  background-color: #ff4081;\n}\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n  background-color: #f44336;\n}\n.mat-button.mat-button-disabled .mat-button-focus-overlay, .mat-icon-button.mat-button-disabled .mat-button-focus-overlay, .mat-stroked-button.mat-button-disabled .mat-button-focus-overlay {\n  background-color: transparent;\n}\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\n  opacity: 0.1;\n  background-color: currentColor;\n}\n\n.mat-button-focus-overlay {\n  background: black;\n}\n\n.mat-stroked-button:not(.mat-button-disabled) {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white;\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  color: white;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  color: white;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  color: white;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n  background-color: #3f51b5;\n}\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n  background-color: #ff4081;\n}\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n  background-color: #f44336;\n}\n.mat-flat-button.mat-primary.mat-button-disabled, .mat-flat-button.mat-accent.mat-button-disabled, .mat-flat-button.mat-warn.mat-button-disabled, .mat-flat-button.mat-button-disabled.mat-button-disabled, .mat-raised-button.mat-primary.mat-button-disabled, .mat-raised-button.mat-accent.mat-button-disabled, .mat-raised-button.mat-warn.mat-button-disabled, .mat-raised-button.mat-button-disabled.mat-button-disabled, .mat-fab.mat-primary.mat-button-disabled, .mat-fab.mat-accent.mat-button-disabled, .mat-fab.mat-warn.mat-button-disabled, .mat-fab.mat-button-disabled.mat-button-disabled, .mat-mini-fab.mat-primary.mat-button-disabled, .mat-mini-fab.mat-accent.mat-button-disabled, .mat-mini-fab.mat-warn.mat-button-disabled, .mat-mini-fab.mat-button-disabled.mat-button-disabled {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-stroked-button:not([class*=mat-elevation-z]), .mat-flat-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-raised-button:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-fab:not([class*=mat-elevation-z]), .mat-mini-fab:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]), .mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.mat-fab.mat-button-disabled:not([class*=mat-elevation-z]), .mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone,\n.mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  box-shadow: none;\n}\n\n.mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n  background: white;\n}\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: black;\n}\n\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-button-toggle-disabled {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: white;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #bdbdbd;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n  line-height: 48px;\n}\n\n.mat-card {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-card:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-card.mat-card-flat:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-checkbox-checkmark {\n  fill: #fafafa;\n}\n\n.mat-checkbox-checkmark-path {\n  stroke: #fafafa !important;\n}\n\n.mat-checkbox-mixedmark {\n  background-color: #fafafa;\n}\n\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #3f51b5;\n}\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #ff4081;\n}\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #f44336;\n}\n\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0;\n}\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0;\n}\n.mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-checkbox .mat-ripple-element {\n  background-color: black;\n}\n\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #3f51b5;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #ff4081;\n}\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #f44336;\n}\n\n.mat-chip.mat-standard-chip {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-chip.mat-standard-chip .mat-chip-remove {\n  color: rgba(0, 0, 0, 0.87);\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n  opacity: 0.54;\n}\n.mat-chip.mat-standard-chip.mat-chip-disabled {\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip::after {\n  background: black;\n}\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #3f51b5;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #f44336;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #ff4081;\n  color: white;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n  color: white;\n  opacity: 0.4;\n}\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n\n.mat-table {\n  background: white;\n}\n\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\nmat-header-row, mat-row, mat-footer-row,\n[mat-header-row], [mat-row], [mat-footer-row],\n.mat-table-sticky {\n  background: inherit;\n}\n\nmat-row, mat-header-row, mat-footer-row,\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-header-cell {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-cell, .mat-footer-cell {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-calendar-arrow {\n  border-top-color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-datepicker-toggle,\n.mat-datepicker-content .mat-calendar-next-button,\n.mat-datepicker-content .mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-calendar-table-header {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-calendar-table-header-divider::after {\n  background: rgba(0, 0, 0, 0.12);\n}\n\n.mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-calendar-body-cell-content,\n.mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n\n.mat-calendar-body-in-preview {\n  color: rgba(0, 0, 0, 0.24);\n}\n\n.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n\n.mat-calendar-body-in-range::before {\n  background: rgba(63, 81, 181, 0.2);\n}\n\n.mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(63, 81, 181, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected {\n  background-color: #3f51b5;\n  color: white;\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(63, 81, 181, 0.4);\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: rgba(255, 64, 129, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(255, 64, 129, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: #ff4081;\n  color: white;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(255, 64, 129, 0.4);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: rgba(244, 67, 54, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: #f44336;\n  color: white;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(244, 67, 54, 0.4);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px white;\n}\n\n.mat-datepicker-content-touch {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active {\n  color: #3f51b5;\n}\n.mat-datepicker-toggle-active.mat-accent {\n  color: #ff4081;\n}\n.mat-datepicker-toggle-active.mat-warn {\n  color: #f44336;\n}\n\n.mat-date-range-input-inner[disabled] {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-divider-vertical {\n  border-right-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-expansion-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: white;\n  }\n}\n.mat-expansion-panel-header-title {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-expansion-panel-header-description,\n.mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n\n.mat-expansion-panel-header {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded {\n  height: 64px;\n}\n\n.mat-form-field-label {\n  color: rgba(0, 0, 0, 0.6);\n}\n\n.mat-hint {\n  color: rgba(0, 0, 0, 0.6);\n}\n\n.mat-form-field.mat-focused .mat-form-field-label {\n  color: #3f51b5;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n  color: #ff4081;\n}\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n  color: #f44336;\n}\n\n.mat-focused .mat-form-field-required-marker {\n  color: #ff4081;\n}\n\n.mat-form-field-ripple {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #3f51b5;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n  background-color: #ff4081;\n}\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n  background-color: #f44336;\n}\n\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #3f51b5;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #ff4081;\n}\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #f44336;\n}\n\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n  color: #f44336;\n}\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #f44336;\n}\n\n.mat-error {\n  color: #f44336;\n}\n\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n.mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.02);\n}\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(0, 0, 0, 0.42);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent;\n}\n\n.mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.12);\n}\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #3f51b5;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #ff4081;\n}\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #f44336;\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.06);\n}\n\n.mat-icon.mat-primary {\n  color: #3f51b5;\n}\n.mat-icon.mat-accent {\n  color: #ff4081;\n}\n.mat-icon.mat-warn {\n  color: #f44336;\n}\n\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-input-element:disabled,\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-input-element {\n  caret-color: #3f51b5;\n}\n.mat-input-element::placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element::-moz-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element::-webkit-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n.mat-input-element:-ms-input-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n\n.mat-form-field.mat-accent .mat-input-element {\n  caret-color: #ff4081;\n}\n\n.mat-form-field.mat-warn .mat-input-element,\n.mat-form-field-invalid .mat-input-element {\n  caret-color: #f44336;\n}\n\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #f44336;\n}\n\n.mat-list-base .mat-list-item {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-list-base .mat-list-option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-list-base .mat-subheader {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-list-item-disabled {\n  background-color: #eeeeee;\n}\n\n.mat-list-option:hover, .mat-list-option:focus,\n.mat-nav-list .mat-list-item:hover,\n.mat-nav-list .mat-list-item:focus,\n.mat-action-list .mat-list-item:hover,\n.mat-action-list .mat-list-item:focus {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n.mat-list-single-selected-option, .mat-list-single-selected-option:hover, .mat-list-single-selected-option:focus {\n  background: rgba(0, 0, 0, 0.12);\n}\n\n.mat-menu-panel {\n  background: white;\n}\n.mat-menu-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-menu-item .mat-icon-no-color,\n.mat-menu-item-submenu-trigger::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-menu-item:hover:not([disabled]),\n.mat-menu-item.cdk-program-focused:not([disabled]),\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n.mat-paginator {\n  background: white;\n}\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-paginator-decrement,\n.mat-paginator-increment {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n\n.mat-paginator-first,\n.mat-paginator-last {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n\n.mat-icon-button[disabled] .mat-paginator-decrement,\n.mat-icon-button[disabled] .mat-paginator-increment,\n.mat-icon-button[disabled] .mat-paginator-first,\n.mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-paginator-container {\n  min-height: 56px;\n}\n\n.mat-progress-bar-background {\n  fill: #c5cae9;\n}\n\n.mat-progress-bar-buffer {\n  background-color: #c5cae9;\n}\n\n.mat-progress-bar-fill::after {\n  background-color: #3f51b5;\n}\n\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #ff80ab;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #ff80ab;\n}\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #ff4081;\n}\n\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #ffcdd2;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #ffcdd2;\n}\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #f44336;\n}\n\n.mat-progress-spinner circle, .mat-spinner circle {\n  stroke: #3f51b5;\n}\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\n  stroke: #ff4081;\n}\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\n  stroke: #f44336;\n}\n\n.mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #3f51b5;\n}\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #3f51b5;\n}\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #ff4081;\n}\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #ff4081;\n}\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #f44336;\n}\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple), .mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple, .mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #f44336;\n}\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-radio-button .mat-ripple-element {\n  background-color: black;\n}\n\n.mat-select-value {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-select-placeholder {\n  color: rgba(0, 0, 0, 0.42);\n}\n\n.mat-select-disabled .mat-select-value {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-select-arrow {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-select-panel {\n  background: white;\n}\n.mat-select-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n  background: rgba(0, 0, 0, 0.12);\n}\n\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #3f51b5;\n}\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #ff4081;\n}\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #f44336;\n}\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-drawer-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-drawer {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-drawer.mat-drawer-push {\n  background-color: white;\n}\n.mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side {\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n.mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n\n[dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none;\n}\n[dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #ff4081;\n}\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(255, 64, 129, 0.54);\n}\n.mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #ff4081;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #3f51b5;\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(63, 81, 181, 0.54);\n}\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #3f51b5;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #f44336;\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(244, 67, 54, 0.54);\n}\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #f44336;\n}\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: black;\n}\n\n.mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #fafafa;\n}\n\n.mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n\n.mat-primary .mat-slider-track-fill,\n.mat-primary .mat-slider-thumb,\n.mat-primary .mat-slider-thumb-label {\n  background-color: #3f51b5;\n}\n.mat-primary .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-primary .mat-slider-focus-ring {\n  background-color: rgba(63, 81, 181, 0.2);\n}\n\n.mat-accent .mat-slider-track-fill,\n.mat-accent .mat-slider-thumb,\n.mat-accent .mat-slider-thumb-label {\n  background-color: #ff4081;\n}\n.mat-accent .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-accent .mat-slider-focus-ring {\n  background-color: rgba(255, 64, 129, 0.2);\n}\n\n.mat-warn .mat-slider-track-fill,\n.mat-warn .mat-slider-thumb,\n.mat-warn .mat-slider-thumb-label {\n  background-color: #f44336;\n}\n.mat-warn .mat-slider-thumb-label-text {\n  color: white;\n}\n.mat-warn .mat-slider-focus-ring {\n  background-color: rgba(244, 67, 54, 0.2);\n}\n\n.mat-slider:hover .mat-slider-track-background,\n.cdk-focused .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-slider-disabled .mat-slider-track-background,\n.mat-slider-disabled .mat-slider-track-fill,\n.mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n\n.mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26);\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent;\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n}\n\n.mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(0, 0, 0, 0.7);\n}\n\n.mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n\n.mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n}\n\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n@media (hover: none) {\n  .mat-step-header:hover {\n    background: none;\n  }\n}\n.mat-step-header .mat-step-label,\n.mat-step-header .mat-step-optional {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-step-header .mat-step-icon {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: white;\n}\n.mat-step-header .mat-step-icon-selected,\n.mat-step-header .mat-step-icon-state-done,\n.mat-step-header .mat-step-icon-state-edit {\n  background-color: #3f51b5;\n  color: white;\n}\n.mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #f44336;\n}\n.mat-step-header .mat-step-label.mat-step-label-active {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-step-header .mat-step-label.mat-step-label-error {\n  color: #f44336;\n}\n\n.mat-stepper-horizontal, .mat-stepper-vertical {\n  background-color: white;\n}\n\n.mat-stepper-vertical-line::before {\n  border-left-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-horizontal-stepper-header::before,\n.mat-horizontal-stepper-header::after,\n.mat-stepper-horizontal-line {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-horizontal-stepper-header {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n.mat-vertical-stepper-header {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after, .mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n  top: 36px;\n}\n\n.mat-sort-header-arrow {\n  color: #757575;\n}\n\n.mat-tab-nav-bar,\n.mat-tab-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n}\n\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\n.mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: none;\n}\n\n.mat-tab-label, .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-tab-group[class*=mat-background-] .mat-tab-header,\n.mat-tab-nav-bar[class*=mat-background-] {\n  border-bottom: none;\n  border-top: none;\n}\n\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(197, 202, 233, 0.3);\n}\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #3f51b5;\n}\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #ff4081;\n}\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\n  background-color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(197, 202, 233, 0.3);\n}\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-group.mat-background-primary .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination {\n  background-color: #3f51b5;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 128, 171, 0.3);\n}\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-group.mat-background-accent .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination {\n  background-color: #ff4081;\n}\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(255, 205, 210, 0.3);\n}\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-group.mat-background-warn .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination {\n  background-color: #f44336;\n}\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\n  color: white;\n}\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\n  color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\n  border-color: white;\n}\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(255, 255, 255, 0.4);\n}\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87);\n}\n.mat-toolbar.mat-primary {\n  background: #3f51b5;\n  color: white;\n}\n.mat-toolbar.mat-accent {\n  background: #ff4081;\n  color: white;\n}\n.mat-toolbar.mat-warn {\n  background: #f44336;\n  color: white;\n}\n.mat-toolbar .mat-form-field-underline,\n.mat-toolbar .mat-form-field-ripple,\n.mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.mat-toolbar .mat-form-field-label,\n.mat-toolbar .mat-focused .mat-form-field-label,\n.mat-toolbar .mat-select-value,\n.mat-toolbar .mat-select-arrow,\n.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows {\n  min-height: 64px;\n}\n\n.mat-toolbar-row, .mat-toolbar-single-row {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows {\n    min-height: 56px;\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 56px;\n  }\n}\n.mat-tooltip {\n  background: rgba(97, 97, 97, 0.9);\n}\n\n.mat-tree {\n  background: white;\n}\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-tree-node {\n  min-height: 48px;\n}\n\n.mat-snack-bar-container {\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-simple-snackbar-action {\n  color: #ff4081;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ __webpack_exports__["default"] = (___CSS_LOADER_EXPORT___);


/***/ })

},[[2,"runtime"]]]);
//# sourceMappingURL=styles.js.map